__NUXT_JSONP__("/posts/testtool_act", (function(a){return {data:[{posted:{filename:"testtool_act.adoc",rendered:"\u003Cdiv id=\"toc\" class=\"toc\"\u003E\n\u003Cdiv id=\"toctitle\"\u003E目次\u003C\u002Fdiv\u003E\n\u003Cul class=\"sectlevel1\"\u003E\n\u003Cli\u003E\u003Ca href=\"#_はじめに\"\u003Eはじめに\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_act_とは\"\u003Eact とは🚀\u003C\u002Fa\u003E\n\u003Cul class=\"sectlevel2\"\u003E\n\u003Cli\u003E\u003Ca href=\"#_インストール\"\u003Eインストール\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_使い方\"\u003E使い方🍣\u003C\u002Fa\u003E\n\u003Cul class=\"sectlevel2\"\u003E\n\u003Cli\u003E\u003Ca href=\"#_コマンドの一例\"\u003Eコマンドの一例\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_act_の設定ファイル\"\u003Eact の設定ファイル\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_dockerコンテナ内で実行したい\"\u003EDockerコンテナ内で実行したい\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_トラブルシューティング\"\u003Eトラブルシューティング🔨\u003C\u002Fa\u003E\n\u003Cul class=\"sectlevel2\"\u003E\n\u003Cli\u003E\u003Ca href=\"#_コマンドがない\"\u003E○✕コマンドがない\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_if文が期待する動作をしない\"\u003Eif文が期待する動作をしない\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_おわりに\"\u003Eおわりに🐾\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_参考\"\u003E参考\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_はじめに\"\u003Eはじめに\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.co.jp\u002Ffeatures\u002Factions\"\u003E\u003Cem\u003EGitHub Actions\u003C\u002Fem\u003E\u003C\u002Fa\u003E は便利。\u003Cbr\u003E\nだけど書いたワークフローが実際どう動くか試すため、実際に GitHub リポジトリへプッシュやマージしてコミット履歴を汚くするのはつらい。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003Eできればローカル上で \u003Cem\u003EGitHub Actions\u003C\u002Fem\u003E をテストしたい！\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003Eということで \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnektos\u002Fact\"\u003Eact\u003C\u002Fa\u003E を導入してローカル上でテストできるようにする。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Ctable class=\"tableblock frame-all grid-all stretch\"\u003E\n\u003Ccaption class=\"title\"\u003ETable 1. 環境\u003C\u002Fcaption\u003E\n\u003Ccolgroup\u003E\n\u003Ccol style=\"width: 50%;\"\u003E\n\u003Ccol style=\"width: 50%;\"\u003E\n\u003C\u002Fcolgroup\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth class=\"tableblock halign-left valign-top\"\u003EApp\u003C\u002Fth\u003E\n\u003Cth class=\"tableblock halign-left valign-top\"\u003EVersion\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003EWindows10 Pro\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E1903\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003EDocker Desktop\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E2.4.0.0\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Eact\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E0.2.16\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_act_とは\"\u003Eact とは🚀\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Cem\u003EGitHub Actions\u003C\u002Fem\u003E をローカルで実行するコマンドツール。\u003Cbr\u003E\n利用するには \u003Cem\u003EDocker\u003C\u002Fem\u003E が必要。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003Eプロジェクト配下の \u003Ccode\u003E.github\u002Fworkflows\u002F\u003C\u002Fcode\u003E を読み込み、\u003Cem\u003EDocker API\u003C\u002Fem\u003E を使って必要なイメージをプル・ビルドする。\u003Cbr\u003E\nそして各アクションはコンテナ内で実行される。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cdiv class=\"title\"\u003E特徴\u003C\u002Fdiv\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E環境変数やファイルシステムは GitHub が提供しているものに対応\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Cem\u003EGitHub Actions\u003C\u002Fem\u003E ワークフローをタスクランナー代わりとして使用可能\u003C\u002Fp\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ccode\u003EMakefile\u003C\u002Fcode\u003E の代替\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003EGitHub が提供しているコマンドツールについてデフォルトでは一部のみ対応\u003C\u002Fp\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003Eすべてのコマンドツールに対応させると Docker イメージのサイズが巨大マックス\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E全部込みこみのイメージとして \u003Ca href=\"https:\u002F\u002Fhub.docker.com\u002Fr\u002Fnektos\u002Fact-environments-ubuntu\u002Ftags\"\u003Enektos\u002Fact-environments-ubuntu:18.04\u003C\u002Fa\u003E が用意されているが 18GB 超え……\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003ERnners は ubuntu のみ対応\u003C\u002Fp\u003E\n\u003Ctable class=\"tableblock frame-all grid-all stretch\"\u003E\n\u003Ccolgroup\u003E\n\u003Ccol style=\"width: 50%;\"\u003E\n\u003Ccol style=\"width: 50%;\"\u003E\n\u003C\u002Fcolgroup\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth class=\"tableblock halign-left valign-top\"\u003EGitHub Runner\u003C\u002Fth\u003E\n\u003Cth class=\"tableblock halign-left valign-top\"\u003Eactが使用するDockerイメージ\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Eubuntu-latest\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Enode:12.6-buster-slim\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Eubuntu-18.04\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Enode:12.6-buster-slim\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Eubuntu-16.04\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Enode:12.6-stretch-slim\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_インストール\"\u003Eインストール\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E今回はDebian ベースの Docker コンテナ内で使うのでシェルスクリプトからインストールした。\u003Cbr\u003E\n他ディストリビューションのインストール方法は \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnektos\u002Fact#installation\"\u003E公式のREADME\u003C\u002Fa\u003E を参照。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Erootユーザーでインストール\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Ecurl https:\u002F\u002Fraw.githubusercontent.com\u002Fnektos\u002Fact\u002Fmaster\u002Finstall.sh | bash\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_使い方\"\u003E使い方🍣\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Eact [event name to run] [flags]\u003C\u002Fcode\u003E で実行する。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_コマンドの一例\"\u003Eコマンドの一例\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E他コマンドオプションについては \u003Ccode\u003Eact -h\u003C\u002Fcode\u003E または \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnektos\u002Fact\u002Fblob\u002Fmaster\u002FREADME.md\"\u003EREADME\u003C\u002Fa\u003E を参照。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"title\"\u003EExample 1. ワークフローの確認\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Eアクション一覧\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Eact -l\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003E特定イベントのアクション一覧\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Eact pull_request -l\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003EDryRun\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Eact -n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"title\"\u003EExample 2. テストを実行\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Eテスト実行\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Eact\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Eコンテナを再利用してテスト\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Eact -r\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Eイベントを指定してテスト\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Eact workflow_dispatch\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Eジョブ名を指定してテスト\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Eact -j JOB_NAME\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003ESecret変数を指定してテスト\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Eact -s MY_SECRET=something\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_act_の設定ファイル\"\u003Eact の設定ファイル\u003C\u002Fh3\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003Eコマンドオプション\u003C\u002Fp\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003Eオプションは \u003Ccode\u003E.\u002F.actrc\u003C\u002Fcode\u003E または \u003Ccode\u003E~\u002F.actrc\u003C\u002Fcode\u003E 設定ファイルに記述しておくことができる。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"title\"\u003EExample 3. \u003Ccode\u003E.actrc\u003C\u002Fcode\u003E ファイルの例\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-ini\"\n    data-lang=\"ini\"\u003E# runnerイメージを変更\n-P ubuntu-18.04=node:12-buster\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E環境変数\u003C\u002Fp\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E環境変数はデフォルトで \u003Ccode\u003E.env\u003C\u002Fcode\u003E ファイルを参照する。\u003Cbr\u003E\n別ファイルで参照させたいときは \u003Ccode\u003E--env-file &lt;ENV_FILE&gt;\u003C\u002Fcode\u003E オプションを追加。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_dockerコンテナ内で実行したい\"\u003EDockerコンテナ内で実行したい\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003EDocker コンテナ内でやる場合は \u003Cem\u003EDooD（Docker outside of Docker）\u003C\u002Fem\u003E のように、ホスト側の \u003Ccode\u003Edocker.sock\u003C\u002Fcode\u003E をバインドしておく。\u003Cbr\u003E\n（コンテナ内でのdockerパッケージは不要）\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Edocker.sockをバインドしておく\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Edocker run --rm -it \\\n    --mount type=bind,src=\u002Fvar\u002Frun\u002Fdocker.sock,dst=\u002Fvar\u002Frun\u002Fdocker.sock \\\n    debian:buster-slim \\\n    bash\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"admonitionblock tip\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"icon\"\u003E\n\u003Cdiv class=\"title\"\u003E\u003Cspan class=\"material-icons cursor-default\" alt=\"Tip\" title=\"Tip\"\u003Einfo\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\n\u003C\u002Ftd\u003E\n\u003Ctd class=\"content\"\u003E\n\u003Cdiv class=\"title\"\u003Eコンテナユーザーが \u003Ccode\u003Eroot\u003C\u002Fcode\u003E 以外\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Edocker.sock\u003C\u002Fcode\u003E のパーミッションのため、コンテナ起動時に \u003Ccode\u003Eroot\u003C\u002Fcode\u003E グループへ所属させておく（\u003Ccode\u003E--group-add 0\u003C\u002Fcode\u003E）。\u003Cbr\u003E\nセキュリティは低下するが、開発用でしか使わないなら許容できる。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Edocker run --group-add 0 ...\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"admonitionblock important\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"icon\"\u003E\n\u003Cdiv class=\"title\"\u003E\u003Cspan class=\"material-icons cursor-default\" alt=\"Important\" title=\"Important\"\u003Estars\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\n\u003C\u002Ftd\u003E\n\u003Ctd class=\"content\"\u003E\n\u003Cdiv class=\"title\"\u003EWindowsホストの場合\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003Eバインドした \u003Ccode\u003E\u002Fvar\u002Frun\u002Fdocker.sock\u003C\u002Fcode\u003E は所有者 \u003Ccode\u003Eroot:root\u003C\u002Fcode\u003E でパーミッションが \u003Ccode\u003E755\u003C\u002Fcode\u003E になっている。\u003Cbr\u003E\nよってコンテナ内のユーザーが \u003Ccode\u003Eroot\u003C\u002Fcode\u003E 以外の場合はパーミッションを修正する必要がある。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003EWindowsホストからパーミッションを修正\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-powershell\"\n    data-lang=\"powershell\"\u003Edocker exec CONTAINER_NAME chmod 660 \u002Fvar\u002Frun\u002Fdocker.sock\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_トラブルシューティング\"\u003Eトラブルシューティング🔨\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_コマンドがない\"\u003E○✕コマンドがない\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Eact\u003C\u002Fcode\u003E がデフォルトで使う Runner のイメージ（\u003Cem\u003Enode:12.6-buster-slim\u003C\u002Fem\u003E）ではインストールされているコマンドが少ないため。\u003Cbr\u003E\n\u003Ccode\u003Egit\u003C\u002Fcode\u003E コマンドもない。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E代替として、一通りのコマンドが揃っている \u003Cem\u003Enode:12-buster\u003C\u002Fem\u003E イメージを使うといい。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Eact -P ubuntu-18.04=node:12-buster\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_if文が期待する動作をしない\"\u003Eif文が期待する動作をしない\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E条件式を \u003Ccode\u003E${{ }}\u003C\u002Fcode\u003E で囲むといい。\u003Cbr\u003E\n実際の \u003Cem\u003EGitHub Actions\u003C\u002Fem\u003E では省略しても大丈夫だが、\u003Ccode\u003Eact\u003C\u002Fcode\u003E で省略すると判定してくれない場合があるっぽい。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"title\"\u003EExample 4. \u003Ccode\u003Eact\u003C\u002Fcode\u003E で動作するif文の例\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-yaml\"\n    data-lang=\"yaml\"\u003E- name: install\n  if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}\n  run: yarn install\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_おわりに\"\u003Eおわりに🐾\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Eact\u003C\u002Fcode\u003E により \u003Cem\u003EGitHub Actions\u003C\u002Fem\u003E のテストと修正が簡単にできるようになったので満足。\u003Cbr\u003E\nただし、実際にGitHubリポジトリで動作させるとバグが見つかる場合があるので注意する。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_参考\"\u003E参考\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnektos\u002Fact\"\u003Enektos\u002Fact\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdev.classmethod.jp\u002Farticles\u002Fact-for-github-actions-local-execution-tool\u002F\"\u003EGitHub Actions のローカル実行ツール「act」を使う事で CI\u002FCD コンフィグとローカルでのタスクランナーを 1 つにする | Developers.IO\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Ftomgregory.com\u002Frunning-docker-in-docker-on-windows\u002F\"\u003ERunning Docker in Docker on Windows (Linux containers) – Tom Gregory\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E",title:"GitHub Actions を act でローカルテストする",created_at:"2020-11-02",tags:["github","github-actions","act"],updated_at:"2020-11-05",author:"秋々すすき",description:a,revision:"1.1",revision_remark:a},navi:{next:{path:"\u002Fposts\u002Fgithub_actions_dispatch",title:"Github Actions を手動実行するための workflow_dispatch イベント"},prev:{path:"\u002Fposts\u002Ffatal_cannot_lock_ref_HEAD_when_git_rebase",title:"git rebase 時に \"cannot lock ref 'HEAD'\" エラー"}},currentPath:"https:\u002Fvlike-vlife.netlify.app\u002Fposts\u002Ftesttool_act"}],fetch:[],mutations:a}}(void 0)));