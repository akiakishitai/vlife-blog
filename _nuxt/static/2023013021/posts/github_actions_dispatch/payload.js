__NUXT_JSONP__("/posts/github_actions_dispatch", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T){return {data:[{posted:{filename:"github_actions_dispatch.adoc",rendered:["\u003Cdiv id=\"toc\" class=\"toc\"\u003E","\u003Cdiv id=\"toctitle\"\u003E目次\u003C\u002Fdiv\u003E","\u003Cul class=\"sectlevel1\"\u003E","\u003Cli\u003E\u003Ca href=\"#_はじめに\"\u003Eはじめに\u003C\u002Fa\u003E",y,"\u003Cli\u003E\u003Ca href=\"#_やりたいこと\"\u003Eやりたいこと💭\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_やったこと\"\u003Eやったこと💪\u003C\u002Fa\u003E\u003C\u002Fli\u003E",h,e,"\u003Cli\u003E\u003Ca href=\"#_方法について\"\u003E方法について🍣\u003C\u002Fa\u003E",y,"\u003Cli\u003E\u003Ca href=\"#_ワークフローの手動実行\"\u003Eワークフローの手動実行\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_workflow_dispatch_イベント\"\u003E\u003Ccode\u003Eworkflow_dispatch\u003C\u002Fcode\u003E イベント\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_rest_api_からイベント発行\"\u003EREST API からイベント発行\u003C\u002Fa\u003E","\u003Cul class=\"sectlevel3\"\u003E","\u003Cli\u003E\u003Ca href=\"#_個人アクセストークン_personal_access_token_の作成\"\u003E個人アクセストークン（ \u003Cem\u003EPersonal Access Token\u003C\u002Fem\u003E ）の作成\u003C\u002Fa\u003E\u003C\u002Fli\u003E",h,e,"\u003Cli\u003E\u003Ca href=\"#_別ワークフローからイベント発行\"\u003E別ワークフローからイベント発行\u003C\u002Fa\u003E\u003C\u002Fli\u003E",h,e,"\u003Cli\u003E\u003Ca href=\"#_おわりに\"\u003Eおわりに😎\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_参考\"\u003E参考📖\u003C\u002Fa\u003E\u003C\u002Fli\u003E",h,a,l,"\u003Ch2 id=\"_はじめに\"\u003Eはじめに\u003C\u002Fh2\u003E",m,i,"\u003Ch3 id=\"_やりたいこと\"\u003Eやりたいこと💭\u003C\u002Fh3\u003E",d,"\u003Cp\u003E\u003Ccode\u003Eorphan\u003C\u002Fcode\u003E ブランチの更新に合わせて \u003Ccode\u003Emain\u003C\u002Fcode\u003E ブランチのワークフローを実行させたい。\u003C\u002Fp\u003E",a,z,n,"\u003Cimg src=\"_images\u002Fwish-1cbbd15c1584133042c230a2ac3a18784fa36117.svg\" alt=\"やりたいことのイメージ\"\u003E",a,"\u003Cdiv class=\"title\"\u003EFigure 1. やりたいことのイメージ\u003C\u002Fdiv\u003E",a,a,i,"\u003Ch3 id=\"_やったこと\"\u003Eやったこと💪\u003C\u002Fh3\u003E",z,n,"\u003Cimg src=\"_images\u002Fdoit-57f52aed2542d93f6ac72955dc92a283b34f7ede.svg\" alt=\"doit\"\u003E",a,a,d,"\u003Cp\u003E簡単にできた😊。\u003C\u002Fp\u003E",a,a,a,a,l,"\u003Ch2 id=\"_方法について\"\u003E方法について🍣\u003C\u002Fh2\u003E",m,i,"\u003Ch3 id=\"_ワークフローの手動実行\"\u003Eワークフローの手動実行\u003C\u002Fh3\u003E",d,"\u003Cp\u003Eここでの手動実行とは、\u003Cem\u003EGitHub\u003C\u002Fem\u003E 上から実行したり \u003Cem\u003EREST API\u003C\u002Fem\u003E から実行したりすること。\u003Cbr\u003E","今回は他ワークフローを呼び出したいので、\u003Cem\u003EREST API\u003C\u002Fem\u003E から実行することを目指す。\u003C\u002Fp\u003E",a,d,"\u003Cp\u003Eワークフロー・イベントを次のどちらかに指定しておけば \u003Cem\u003EREST API\u003C\u002Fem\u003E からそのイベントを受信できる。\u003C\u002Fp\u003E",a,A,"\u003Ccaption class=\"title\"\u003ETable 1. 手動実行が可能となるイベント\u003C\u002Fcaption\u003E",B,"\u003Ccol style=\"width: 33.3333%;\"\u003E","\u003Ccol style=\"width: 66.6667%;\"\u003E",C,D,b,"\u003Cth class=\"tableblock halign-left valign-top\"\u003Eイベント\u003C\u002Fth\u003E","\u003Cth class=\"tableblock halign-left valign-top\"\u003E特徴\u003C\u002Fth\u003E",c,E,F,b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E\u003Cstrong\u003E\u003Ccode\u003Eworkflow_dispatch\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E特定（単一）のワークフローを実行する\u003Cbr\u003E","ブランチやタグの指定も可能\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E\u003Ccode\u003Erepository_dispatch\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E複数のワークフローを実行する\u003Cbr\u003E","カスタムイベントやイベント型を作成可能\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,G,f,d,"\u003Cp\u003E他のワークフローを呼び出す目的には \u003Ccode\u003Eworkflow_dispatch\u003C\u002Fcode\u003E イベントが必要十分。\u003C\u002Fp\u003E",a,a,i,"\u003Ch3 id=\"_workflow_dispatch_イベント\"\u003E\u003Ccode\u003Eworkflow_dispatch\u003C\u002Fcode\u003E イベント\u003C\u002Fh3\u003E",d,"\u003Cp\u003E特定のワークフローを実行するために使われるイベント。\u003Cbr\u003E","イベント発行時にブランチやタグの指定が可能。\u003C\u002Fp\u003E",a,d,"\u003Cp\u003Eデフォルト入力値やプロパティの定義は \u003Ccode\u003Egithub.event.inputs\u003C\u002Fcode\u003E コンテキストで設定可能。\u003C\u002Fp\u003E",a,d,"\u003Cp\u003E\u003Cstrong\u003E\u003Cem\u003EREST API\u003C\u002Fem\u003E から呼び出される\u003C\u002Fstrong\u003E ワークフローがこのイベントをトリガーとするように指定する（今回だと \u003Ccode\u003Emain\u003C\u002Fcode\u003E ブランチのワークフローに設定）。\u003C\u002Fp\u003E",a,H,"\u003Cdiv class=\"title\"\u003EExample 1. mainブランチのワークフロー例\u003C\u002Fdiv\u003E",n,r,I,"\u003Cdiv class=\"title\"\u003E.github\u002Fworkflows\u002Fmain.yaml\u003C\u002Fdiv\u003E",s,J,K,L,t,M,"  workflow_dispatch:  \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E",t,M,o,N,"  build:",O,P,"      - run: ...\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",u,a,Q,j,b,R,"\u003Ctd\u003E\u003Ccode\u003Eworkflow_dispatch\u003C\u002Fcode\u003E イベントをトリガー\u003C\u002Ftd\u003E",c,f,a,a,a,a,i,"\u003Ch3 id=\"_rest_api_からイベント発行\"\u003EREST API からイベント発行\u003C\u002Fh3\u003E",d,"\u003Cp\u003E上記で編集したワークフローが手動実行できるかどうか、ローカルのシェルから試してみる。\u003C\u002Fp\u003E",a,r,"    class=\"listingblock no-line-numbers command-line\"\u003E","\u003Cdiv class=\"title\"\u003Eローカル端末からワークフローを実行\u003C\u002Fdiv\u003E",s,"  \u003Cpre class=\"highlight command-line\" data-user=\"user\"","    data-host=\"local\"","    \u003E\u003Ccode class=\"language-bash\"","    data-lang=\"bash\"\u003Ecurl -X POST \\","  -H \"Authorization: token ${GITHUB_TOKEN}\" \\","  -H \"Accept: application\u002Fvnd.github.v3+json\" \\","  https:\u002F\u002Fapi.github.com\u002Frepos\u002F${owner}\u002F${repo}\u002Factions\u002Fworkflows\u002F${workflow_id}\u002Fdispatches \\","  -d '{\"ref\": \"main\"}'\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",u,a,A,B,"\u003Ccol style=\"width: 20%;\"\u003E","\u003Ccol style=\"width: 80%;\"\u003E",C,D,b,"\u003Cth class=\"tableblock halign-left valign-top\"\u003Eプロパティ\u003C\u002Fth\u003E","\u003Cth class=\"tableblock halign-left valign-top\"\u003E説明\u003C\u002Fth\u003E",c,E,F,b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003EGITHUB_TOKEN\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E個人アクセストークン（\u003Cem\u003EPersonal Access Token\u003C\u002Fem\u003E）。\u003Cbr\u003E","\u003Ccode\u003Erepo\u003C\u002Fcode\u003E スコープ（プライベートリポジトリを含む）ないし\u003Cbr\u003E","\u003Ccode\u003Epublic_repo\u003C\u002Fcode\u003E スコープの許可が必要。\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Eowner\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Eリポジトリの所有者名\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Erepo\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Eリポジトリ名\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Eworkflow_id\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Eイベント送信先の ワークフローID または\u003Cbr\u003E","ワークフローの拡張子つきファイル名（例えば \u003Ccode\u003Emain.yaml\u003C\u002Fcode\u003E ）\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E{\"ref\": \"&#8230;&#8203;\"}\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Eブランチやタグを指定する\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,G,f,v,j,b,p,w,g,q,"ワークフローIDは \u003Cem\u003EREST API\u003C\u002Fem\u003E から取得する必要があるため、ファイル名を指定するほうが簡単。",g,c,f,a,"\u003Cdiv class=\"admonitionblock warning\"\u003E",j,b,p,"\u003Ci class=\"fa icon-warning\" title=\"Warning\" data-md-icon=\"warning\"\u003E\u003C\u002Fi\u003E",g,q,"個人アクセストークンは直書きせず、環境変数やパスワードマネージャーで設定する。",g,c,f,a,"\u003Cdiv class=\"sect3\"\u003E","\u003Ch4 id=\"_個人アクセストークン_personal_access_token_の作成\"\u003E個人アクセストークン（ \u003Cem\u003EPersonal Access Token\u003C\u002Fem\u003E ）の作成\u003C\u002Fh4\u003E",d,"\u003Cp\u003E\u003Cem\u003EREST API\u003C\u002Fem\u003E を使うために作成。\u003Cbr\u003E","以前に作成して \u003Cem\u003ESecrets\u003C\u002Fem\u003E 登録したやつがあったのでそれを使った。\u003C\u002Fp\u003E",a,d,"\u003Cp\u003E新規作成する場合は、下記ドキュメントを参考にする。\u003C\u002Fp\u003E",a,"\u003Cdiv class=\"olist arabic\"\u003E","\u003Col class=\"arabic\"\u003E",k,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.github.com\u002Fja\u002Ffree-pro-team@latest\u002Fgithub\u002Fauthenticating-to-github\u002Fcreating-a-personal-access-token\" target=\"_blank\" rel=\"noopener\"\u003E個人アクセストークンを使用する\u003C\u002Fa\u003E を参考に作成\u003C\u002Fp\u003E",S,T,k,"\u003Cp\u003E\u003Ccode\u003Erepo\u003C\u002Fcode\u003E または \u003Ccode\u003Epublic_repo\u003C\u002Fcode\u003E スコープを許可する\u003C\u002Fp\u003E",e,h,a,e,k,"\u003Cp\u003E作成したトークンは \u003Ca href=\"https:\u002F\u002Fdocs.github.com\u002Fja\u002Ffree-pro-team@latest\u002Factions\u002Freference\u002Fencrypted-secrets\" target=\"_blank\" rel=\"noopener\"\u003E暗号化されたシークレット\u003C\u002Fa\u003E を参考にリポジトリの \u003Cem\u003ESecrets\u003C\u002Fem\u003E に登録\u003C\u002Fp\u003E",e,"\u003C\u002Fol\u003E",a,d,"\u003Cp\u003E登録した \u003Cem\u003ESecrets\u003C\u002Fem\u003E はワークフローにおいて \u003Ccode\u003E${{ secrets.XXX }}\u003C\u002Fcode\u003E という形で参照できる。\u003C\u002Fp\u003E",a,a,a,i,"\u003Ch3 id=\"_別ワークフローからイベント発行\"\u003E別ワークフローからイベント発行\u003C\u002Fh3\u003E",d,"\u003Cp\u003E上記の \u003Ccode\u003Ecurl\u003C\u002Fcode\u003E コマンドをワークフロー内で実行すればいい。\u003C\u002Fp\u003E",a,H,"\u003Cdiv class=\"title\"\u003EExample 2. \u003Ccode\u003Eorphan\u003C\u002Fcode\u003E ブランチのワークフロー例\u003C\u002Fdiv\u003E",n,r,I,"\u003Cdiv class=\"title\"\u003E.github\u002Fworkflows\u002Forphan.yaml\u003C\u002Fdiv\u003E",s,J,K,L,t,"      - orphan-branch",o,"env:  \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E","  WORKFLOW_ID: main.yml","  DISPATCH_API: https:\u002F\u002Fapi.github.com\u002Frepos\u002F$GITHUB_REPOSITORY\u002Factions\u002Fworkflows\u002F$WORKFLOW_ID\u002Fdispatches",o,N,"  trigger:",O,P,"      - name: logger","        run: echo \"::debug::POST to ${{ env.DISPATCH_API }}\"",o,"      - name: publish the event  \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E","        run: |","          curl -X POST \\","            -H \"Authorization: token ${{ secrets.PERSONAL_TOKEN }}\" \\","            -H \"Accept: application\u002Fvnd.github.v3+json\" \\","            ${{ env.DISPATCH_API }} \\","            -d '{\"ref\": \"main\"}'\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",u,a,Q,j,b,R,"\u003Ctd\u003E環境変数としてURLを設定\u003C\u002Ftd\u003E",c,b,"\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E2\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","\u003Ctd\u003E\u003Cem\u003EREST API\u003C\u002Fem\u003E から \u003Ccode\u003Eworkflow_dispatch\u003C\u002Fcode\u003E イベントを発行\u003C\u002Ftd\u003E",c,f,a,v,j,b,p,w,g,q,"\u003Ccode\u003EGITHUB_REPOSITORY\u003C\u002Fcode\u003E はデフォルト環境変数で、 \u003Ccode\u003Eオーナー名\u002Fリポジトリ名\u003C\u002Fcode\u003E が設定されている。",g,c,f,a,v,j,b,p,w,g,q,"\u003Ccode\u003Eenv\u003C\u002Fcode\u003E の変数で他の環境変数を使った場合に \u003Ccode\u003Esteps\u003C\u002Fcode\u003E 内で参照するときは、\u003Cbr\u003E","\u003Ccode\u003E${{ env.XXX }}\u003C\u002Fcode\u003E としないとうまく環境変数を展開してくれなかった。",g,c,f,a,a,a,a,a,a,l,"\u003Ch2 id=\"_おわりに\"\u003Eおわりに😎\u003C\u002Fh2\u003E",m,d,"\u003Cp\u003E以上で \u003Ccode\u003Eorphan\u003C\u002Fcode\u003E ブランチを更新すれば \u003Ccode\u003Emain\u003C\u002Fcode\u003E ブランチの \u003Cem\u003EGitHub Actions\u003C\u002Fem\u003E が実行するようにできた。\u003C\u002Fp\u003E",a,d,"\u003Cp\u003Eこれで \u003Cem\u003ENuxt\u003C\u002Fem\u003E プログラムコードと記事ソースのブランチを分けて、記事だけを更新しても自動的にデプロイ用ワークフローを実行してくれるようにできた。\u003Cbr\u003E","おかげでブログ更新も捗る……といいな！🙄\u003Cspan class=\"line-through\"\u003E進捗どうですか\u003C\u002Fspan\u003E。\u003C\u002Fp\u003E",a,a,a,l,"\u003Ch2 id=\"_参考\"\u003E参考📖\u003C\u002Fh2\u003E",m,S,T,k,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.github.com\u002Fja\u002Ffree-pro-team@latest\u002Factions\u002Freference\u002Fevents-that-trigger-workflows\" target=\"_blank\" rel=\"noopener\"\u003Eワークフローをトリガーするイベント - GitHub Docs\u003C\u002Fa\u003E\u003C\u002Fp\u003E",e,k,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.github.com\u002Fen\u002Ffree-pro-team@latest\u002Frest\u002Freference\u002Factions#workflows\" target=\"_blank\" rel=\"noopener\"\u003EActions#workflows - GitHub Docs\u003C\u002Fa\u003E\u003C\u002Fp\u003E",e,k,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.github.com\u002Fja\u002Ffree-pro-team@latest\u002Frest\u002Fguides\u002Fgetting-started-with-the-rest-api\" target=\"_blank\" rel=\"noopener\"\u003EREST API を使ってみる - GitHub Docs\u003C\u002Fa\u003E\u003C\u002Fp\u003E",e,h,a,a,a],title:"Github Actions を手動実行するための workflow_dispatch イベント",created_at:"2020-11-13",tags:["github","github-actions"],updated_at:"2020-11-19",author:"秋々すすき",description:x,revision:"1.1",revision_remark:x},navi:{next:{path:"\u002Fposts\u002Fstop_gitlfs",title:"Git LFS での管理を停止する"},prev:{path:"\u002Fposts\u002Ftesttool_act",title:"GitHub Actions を act でローカルテストする"}},currentPath:"https:\u002F\u002Fvlike-vlife.netlify.app\u002Fposts\u002Fgithub_actions_dispatch"}],fetch:{},mutations:x}}("\u003C\u002Fdiv\u003E","\u003Ctr\u003E","\u003C\u002Ftr\u003E","\u003Cdiv class=\"paragraph\"\u003E","\u003C\u002Fli\u003E","\u003C\u002Ftable\u003E","\u003C\u002Ftd\u003E","\u003C\u002Ful\u003E","\u003Cdiv class=\"sect2\"\u003E","\u003Ctable\u003E","\u003Cli\u003E","\u003Cdiv class=\"sect1\"\u003E","\u003Cdiv class=\"sectionbody\"\u003E","\u003Cdiv class=\"content\"\u003E","","\u003Ctd class=\"icon\"\u003E","\u003Ctd class=\"content\"\u003E","\u003Cdiv ","  \u003Cdiv class=\"content\"\u003E","    branches:","  \u003C\u002Fdiv\u003E","\u003Cdiv class=\"admonitionblock note\"\u003E","\u003Ci class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"\u003E\u003C\u002Fi\u003E",void 0,"\u003Cul class=\"sectlevel2\"\u003E","\u003Cdiv class=\"imageblock kroki\"\u003E","\u003Ctable class=\"tableblock frame-all grid-all stretch\"\u003E","\u003Ccolgroup\u003E","\u003C\u002Fcolgroup\u003E","\u003Cthead\u003E","\u003C\u002Fthead\u003E","\u003Ctbody\u003E","\u003C\u002Ftbody\u003E","\u003Cdiv class=\"exampleblock\"\u003E","    class=\"listingblock\"\u003E","  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-yaml\"","    data-lang=\"yaml\"\u003Eon:","  push:","      - main","jobs:","    runs-on: ubuntu-18.04","    steps:","\u003Cdiv class=\"colist arabic\"\u003E","\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","\u003Cdiv class=\"ulist\"\u003E","\u003Cul\u003E")));