__NUXT_JSONP__("/posts/nuxt_tsconfig_dedicated_to_building", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B){return {data:[{posted:{filename:"nuxt_tsconfig_dedicated_to_building.adoc",rendered:["\u003Cdiv id=\"toc\" class=\"toc\"\u003E","\u003Cdiv id=\"toctitle\"\u003E目次\u003C\u002Fdiv\u003E","\u003Cul class=\"sectlevel1\"\u003E","\u003Cli\u003E\u003Ca href=\"#_はじめに\"\u003Eはじめに🐏\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_nuxt_ビルド時に参照する_tsconfig_json_を指定する方法\"\u003E\u003Cem\u003ENuxt\u003C\u002Fem\u003E ビルド時に参照する \u003Ccode\u003Etsconfig.json\u003C\u002Fcode\u003E を指定する方法💾\u003C\u002Fa\u003E","\u003Cul class=\"sectlevel2\"\u003E","\u003Cli\u003E\u003Ca href=\"#created-tsconfig\"\u003Eビルド用の \u003Cem\u003ETSConfig\u003C\u002Fem\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#specify-tsconfig\"\u003Eビルド時の \u003Ccode\u003Etsconfig.json\u003C\u002Fcode\u003E を指定\u003C\u002Fa\u003E\u003C\u002Fli\u003E",g,e,"\u003Cli\u003E\u003Ca href=\"#_参考\"\u003E参考📖\u003C\u002Fa\u003E\u003C\u002Fli\u003E",g,a,h,"\u003Ch2 id=\"_はじめに\"\u003Eはじめに🐏\u003C\u002Fh2\u003E",i,d,"\u003Cp\u003E\u003Cem\u003ENuxt\u003C\u002Fem\u003E を \u003Cem\u003ETypeScript\u003C\u002Fem\u003E で利用しているとき、ビルド時に \u003Ccode\u003Egit worktree\u003C\u002Fcode\u003E や \u003Ccode\u003Egit submodule\u003C\u002Fcode\u003E 配下のファイルまでチェックしてエラーを出してくるので困った。\u003C\u002Fp\u003E",a,d,"\u003Cp\u003E対処方法としては \u003Ccode\u003Etsconfig.json\u003C\u002Fcode\u003E の \u003Ccode\u003Einclude\u003C\u002Fcode\u003E や \u003Ccode\u003Eexclude\u003C\u002Fcode\u003E で対象\u002F除外のファイルを制御すればいい。\u003Cbr\u003E","ただ \u003Cem\u003EVS Code\u003C\u002Fem\u003E のインテリセンスは有効化のままにしたかったので、\u003Cem\u003ENuxt\u003C\u002Fem\u003E のビルド時だけ使う別の \u003Ccode\u003Etsconfig.json\u003C\u002Fcode\u003E を読み込むようにしたい。\u003C\u002Fp\u003E",a,"\u003Ctable class=\"tableblock frame-all grid-all fit-content\"\u003E","\u003Ccaption class=\"title\"\u003ETable 1. 環境\u003C\u002Fcaption\u003E","\u003Ccolgroup\u003E",l,l,"\u003C\u002Fcolgroup\u003E","\u003Cthead\u003E",b,"\u003Cth class=\"tableblock halign-left valign-top\"\u003EApp\u003C\u002Fth\u003E","\u003Cth class=\"tableblock halign-left valign-top\"\u003EVersion\u003C\u002Fth\u003E",c,"\u003C\u002Fthead\u003E","\u003Ctbody\u003E",b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003ENuxt\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E2.15.4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003ETypeScript\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E4.2.3\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E@nuxt\u002Ftypescript-build\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E2.1.0\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,"\u003C\u002Ftbody\u003E",j,a,a,h,"\u003Ch2 id=\"_nuxt_ビルド時に参照する_tsconfig_json_を指定する方法\"\u003E\u003Cem\u003ENuxt\u003C\u002Fem\u003E ビルド時に参照する \u003Ccode\u003Etsconfig.json\u003C\u002Fcode\u003E を指定する方法💾\u003C\u002Fh2\u003E",i,d,"\u003Cp\u003E方法自体は簡単で、\u003C\u002Fp\u003E",a,"\u003Cdiv class=\"olist arabic\"\u003E","\u003Col class=\"arabic\"\u003E",f,"\u003Cp\u003E\u003Ca href=\"#created-tsconfig\"\u003Eビルド用の \u003Cem\u003ETSConfig\u003C\u002Fem\u003E を作成\u003C\u002Fa\u003E\u003C\u002Fp\u003E",e,f,"\u003Cp\u003E\u003Ca href=\"#specify-tsconfig\"\u003E作成した \u003Cem\u003ETSConfig\u003C\u002Fem\u003E ファイルパスを \u003Ccode\u003Enuxt.config.json\u003C\u002Fcode\u003E で指定\u003C\u002Fa\u003E\u003C\u002Fp\u003E",e,"\u003C\u002Fol\u003E",a,d,"\u003Cp\u003Eの2点だけすればいい。\u003C\u002Fp\u003E",a,m,"\u003Ch3 id=\"created-tsconfig\"\u003Eビルド用の \u003Cem\u003ETSConfig\u003C\u002Fem\u003E\u003C\u002Fh3\u003E",d,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fwww.typescriptlang.org\u002Ftsconfig#extends\" target=\"_blank\" rel=\"noopener\"\u003E\u003Ccode\u003Eextends\u003C\u002Fcode\u003E\u003C\u002Fa\u003E を利用して現行の \u003Ccode\u003Etsconfig.json\u003C\u002Fcode\u003E の設定を引き継ぐとよさそう。\u003C\u002Fp\u003E",a,d,"\u003Cp\u003E\u003Ccode\u003Einclude\u003C\u002Fcode\u003E や \u003Ccode\u003Eexclude\u003C\u002Fcode\u003E 設定を上書きしてコンパイル対象とするファイルを制限する。\u003C\u002Fp\u003E",a,n,"\u003Cdiv class=\"title\"\u003EExample 1. ビルド用に調整した TSConfig の例\u003C\u002Fdiv\u003E",o,p,q,"\u003Cdiv class=\"title\"\u003Etsconfig.nuxt.json\u003C\u002Fdiv\u003E",r,"  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-json\"","    data-lang=\"json\"\u003E{","  \"extends\": \".\u002Ftsconfig.json\",   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E","  \"include\": [\"src\u002F**\u002F*\", \"src\u002F**\u002F*.vue\"],  \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E","  \"exclude\": [\"node_modules\", \"**\u002F*.spec.ts\"]  \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E",s,t,a,u,v,b,w,"\u003Ctd\u003E通常の \u003Ccode\u003Etsconfig.json\u003C\u002Fcode\u003E ファイルを読み込み、設定を継承する。\u003Cbr\u003E","パス指定するさいにファイル名だけではエラーになるので注意。\u003C\u002Ftd\u003E",c,b,x,"\u003Ctd\u003Eコンパイル対象をソースがある \u003Ccode\u003Esrc\u002F\u003C\u002Fcode\u003E ディレクトリ以下に限定。\u003C\u002Ftd\u003E",c,b,y,"\u003Ctd\u003E除外するファイル指定を上書き。ここでは単体テスト用のファイルを追加して指定。\u003C\u002Ftd\u003E",c,j,a,a,a,a,m,"\u003Ch3 id=\"specify-tsconfig\"\u003Eビルド時の \u003Ccode\u003Etsconfig.json\u003C\u002Fcode\u003E を指定\u003C\u002Fh3\u003E",d,"\u003Cp\u003E結論から言えば \u003Ccode\u003E@nuxt\u002Ftypescript-build\u003C\u002Fcode\u003E のモジュールオプションで指定できる。\u003Cbr\u003E","下記のように \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E ファイルにオプション設定を追加する。\u003C\u002Fp\u003E",a,n,"\u003Cdiv class=\"title\"\u003EExample 2. ビルド時に読み込む tsconfig.json を指定\u003C\u002Fdiv\u003E",o,p,q,"\u003Cdiv class=\"title\"\u003Enuxt.config.js でモジュールオプションを追加\u003C\u002Fdiv\u003E",r,"  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-js\"","    data-lang=\"js\"\u003Eexport default {","  typescript: {   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E","    typeCheck: {  \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E","      typescript: {","        configFile: resolve(__dirname, 'tsconfig.nuxt.json'),   \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E","        extensions: { vue: true },    \u003Ci class=\"conum\" data-value=\"4\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(4)\u003C\u002Fb\u003E","      },","    },","  },",s,t,a,u,v,b,w,"\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Ftypescript.nuxtjs.org\u002Fguide\u002Fsetup\u002F#module-options\" target=\"_blank\" rel=\"noopener\"\u003E\u003Ccode\u003E@nuxt\u002Ftypescript-build\u003C\u002Fcode\u003E のモジュールオプション設定\u003C\u002Fa\u003E。\u003C\u002Ftd\u003E",c,b,x,"\u003Ctd\u003E型チェックに利用する \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FTypeStrong\u002Ffork-ts-checker-webpack-plugin#options\" target=\"_blank\" rel=\"noopener\"\u003E\u003Ccode\u003Efork-ts-checker-webpack-plugin\u003C\u002Fcode\u003E のオプション\u003C\u002Fa\u003Eを記述。\u003C\u002Ftd\u003E",c,b,y,"\u003Ctd\u003Eビルド用に調整した \u003Cem\u003ETSConfig\u003C\u002Fem\u003E ファイルのパスを指定。\u003C\u002Ftd\u003E",c,b,"\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"4\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E4\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","\u003Ctd\u003E\u003Cem\u003EVue\u003C\u002Fem\u003E の単一ファイルコンポーネントへの対応を有効化。\u003Cbr\u003E","\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Ftypescript\u002Fblob\u002F%40nuxt\u002Ftypescript-runtime%402.1.0\u002Fpackages\u002Ftypescript-build\u002Fsrc\u002Findex.ts#L77\" target=\"_blank\" rel=\"noopener\"\u003E\u003Ccode\u003E@nuxt\u002Ftypescript-build\u003C\u002Fcode\u003E のソース\u003C\u002Fa\u003Eを見るとモジュールオプションを浅いコピーしているので、ここで明示的に指定しておく。\u003C\u002Ftd\u003E",c,j,a,a,a,"\u003Chr\u003E",d,"\u003Cp\u003E以上で \u003Cem\u003ENuxt\u003C\u002Fem\u003E のビルド時には専用の \u003Cem\u003ETSConfig\u003C\u002Fem\u003E が適用される。\u003C\u002Fp\u003E",a,a,a,a,h,"\u003Ch2 id=\"_参考\"\u003E参考📖\u003C\u002Fh2\u003E",i,z,"\u003Cdiv class=\"title\"\u003ENuxt\u003C\u002Fdiv\u003E",A,f,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Ftypescript.nuxtjs.org\" target=\"_blank\" rel=\"noopener\"\u003ENuxt TypeScript\u003C\u002Fa\u003E\u003C\u002Fp\u003E",e,f,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FTypeStrong\u002Ffork-ts-checker-webpack-plugin\" target=\"_blank\" rel=\"noopener\"\u003EFork TS Checker Webpack Plugin\u003C\u002Fa\u003E\u003C\u002Fp\u003E",e,g,a,z,"\u003Cdiv class=\"title\"\u003ETSConfig\u003C\u002Fdiv\u003E",A,f,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fwww.typescriptlang.org\u002Ftsconfig\" target=\"_blank\" rel=\"noopener\"\u003ETypeScript: TSConfig Reference - Docs on every TSConfig option\u003C\u002Fa\u003E\u003C\u002Fp\u003E",e,g,a,a,a],title:"Nuxt TypeScript においてビルド用に別の tsconfig.json を指定したい",created_at:B,tags:["nuxt.js","tsconfig"],updated_at:B,author:"秋々すすき",description:k,revision:"1.0",revision_remark:k},navi:{next:{path:"\u002Fposts\u002Fprismjs_keep_markup",title:"Prism.jsでコードブロック内に記述したHTMLタグを維持したい"},prev:{path:"\u002Fposts\u002Fdocker_cant_remove_volume",title:"docker volume rm コマンド実行時に「volume is in use」と言われて削除できないときの対処方法"}},currentPath:"https:\u002F\u002Fvlike-vlife.netlify.app\u002Fposts\u002Fnuxt_tsconfig_dedicated_to_building"}],fetch:{},mutations:k}}("\u003C\u002Fdiv\u003E","\u003Ctr\u003E","\u003C\u002Ftr\u003E","\u003Cdiv class=\"paragraph\"\u003E","\u003C\u002Fli\u003E","\u003Cli\u003E","\u003C\u002Ful\u003E","\u003Cdiv class=\"sect1\"\u003E","\u003Cdiv class=\"sectionbody\"\u003E","\u003C\u002Ftable\u003E",void 0,"\u003Ccol\u003E","\u003Cdiv class=\"sect2\"\u003E","\u003Cdiv class=\"exampleblock\"\u003E","\u003Cdiv class=\"content\"\u003E","\u003Cdiv ","    class=\"listingblock\"\u003E","  \u003Cdiv class=\"content\"\u003E","}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E","  \u003C\u002Fdiv\u003E","\u003Cdiv class=\"colist arabic\"\u003E","\u003Ctable\u003E","\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E2\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E3\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","\u003Cdiv class=\"ulist\"\u003E","\u003Cul\u003E","2021-05-07")));