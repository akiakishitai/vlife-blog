__NUXT_JSONP__("/posts/podman_kubernetes_yaml", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq){return {data:[{posted:{filename:"podman_kubernetes_yaml.adoc",rendered:["\u003Cdiv id=\"toc\" class=\"toc\"\u003E","\u003Cdiv id=\"toctitle\"\u003E目次\u003C\u002Fdiv\u003E","\u003Cul class=\"sectlevel1\"\u003E","\u003Cli\u003E\u003Ca href=\"#_はじめに\"\u003Eはじめに\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_概略\"\u003E概略\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_podman_による_kubernetes_yaml_利用の手順\"\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E による \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E 利用の手順\u003C\u002Fa\u003E",I,"\u003Cli\u003E\u003Ca href=\"#_コマンドで_pod_を作成\"\u003Eコマンドで \u003Cem\u003EPod\u003C\u002Fem\u003E を作成\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_kubernetes_yaml_ファイルを生成\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルを生成\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_kubernetes_yaml_から_pod_起動\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E から \u003Cem\u003EPod\u003C\u002Fem\u003E 起動\u003C\u002Fa\u003E\u003C\u002Fli\u003E",m,d,"\u003Cli\u003E\u003Ca href=\"#_kubernetes_yaml_についての補足\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E についての補足\u003C\u002Fa\u003E",I,"\u003Cli\u003E\u003Ca href=\"#_書式サンプル\"\u003E書式サンプル\u003C\u002Fa\u003E","\u003Cul class=\"sectlevel3\"\u003E","\u003Cli\u003E\u003Ca href=\"#_ラベルとアノテーション\"\u003Eラベルとアノテーション\u003C\u002Fa\u003E\u003C\u002Fli\u003E",m,d,m,d,"\u003Cli\u003E\u003Ca href=\"#_生成された_kubernetes_yaml_ファイルの修正\"\u003E生成された \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルの修正\u003C\u002Fa\u003E",I,"\u003Cli\u003E\u003Ca href=\"#_不要な環境変数の削除\"\u003E不要な環境変数の削除\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_名前付き_volume_を利用したい\"\u003E名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E を利用したい\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_別ファイルで値を定義したい\"\u003E別ファイルで値を定義したい\u003C\u002Fa\u003E\u003C\u002Fli\u003E",m,d,"\u003Cli\u003E\u003Ca href=\"#_おわりに\"\u003Eおわりに\u003C\u002Fa\u003E\u003C\u002Fli\u003E","\u003Cli\u003E\u003Ca href=\"#_参考\"\u003E参考\u003C\u002Fa\u003E\u003C\u002Fli\u003E",m,a,q,"\u003Ch2 id=\"_はじめに\"\u003Eはじめに\u003C\u002Fh2\u003E",r,f,"\u003Cp\u003E\u003Cem\u003EPodman\u003C\u002Fem\u003E は \u003Cem\u003EDocker Compose\u003C\u002Fem\u003E の代わりに \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E を使うことが推奨されているみたい。\u003Cbr\u003E","そこで \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E から起動することを試してみた。\u003C\u002Fp\u003E",a,T,h,b,y,U,i,z,"\u003Cdiv class=\"title\"\u003E追記\u003C\u002Fdiv\u003E",f,"\u003Cp\u003E\u003Cem\u003EPodman v3\u003C\u002Fem\u003E では（ルートレスの場合は \u003Cem\u003Ev3.2.3\u003C\u002Fem\u003E 以降から） \u003Cem\u003Edocker-compose\u003C\u002Fem\u003E に公式対応してるみたい。\u003Cbr\u003E","よって \u003Cem\u003Edocker-compose.yml\u003C\u002Fem\u003E がすでに有るなら、本記事のように \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E への変換は必要なさそう。\u003C\u002Fp\u003E",a,f,"\u003Cp\u003E👉\u003Ca href=\"https:\u002F\u002Frheb.hatenablog.com\u002Fentry\u002Fpodman3-rootless-docker-compose\" target=\"_blank\" rel=\"noopener\"\u003E【Podman v3】ルートレスモードでdocker-composeを実行する - 赤帽エンジニアブログ\u003C\u002Fa\u003E\u003C\u002Fp\u003E",a,i,c,g,a,"\u003Ctable class=\"tableblock frame-all grid-all fit-content\"\u003E","\u003Ccaption class=\"title\"\u003ETable 1. 環境\u003C\u002Fcaption\u003E","\u003Ccolgroup\u003E",V,V,"\u003C\u002Fcolgroup\u003E","\u003Cthead\u003E",b,"\u003Cth class=\"tableblock halign-left valign-top\"\u003EApp\u003C\u002Fth\u003E","\u003Cth class=\"tableblock halign-left valign-top\"\u003EVersion\u003C\u002Fth\u003E",c,"\u003C\u002Fthead\u003E","\u003Ctbody\u003E",b,"\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Epodman\u003C\u002Fp\u003E\u003C\u002Ftd\u003E","\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E3.0.1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E",c,"\u003C\u002Ftbody\u003E",g,a,a,q,"\u003Ch2 id=\"_概略\"\u003E概略\u003C\u002Fh2\u003E",r,f,"\u003Cp\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E コマンドで起動中の \u003Cem\u003EPod\u003C\u002Fem\u003E から \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E を生成できるため、それを利用する。\u003C\u002Fp\u003E",a,W,X,e,Y,d,e,Z,A,B,e,_,d,m,a,d,e,$,d,aa,a,"\u003Cdiv class=\"imageblock kroki\"\u003E",n,"\u003Cimg src=\"_images\u002F概略図-6b988e8f284f3b2b0e0a10b5180c21227c8311a0.svg\" alt=\"概略図\"\u003E",a,a,a,a,q,"\u003Ch2 id=\"_podman_による_kubernetes_yaml_利用の手順\"\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E による \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E 利用の手順\u003C\u002Fh2\u003E",r,W,X,e,Y,d,e,Z,A,B,e,_,d,m,a,d,e,$,d,aa,a,s,"\u003Ch3 id=\"_コマンドで_pod_を作成\"\u003Eコマンドで \u003Cem\u003EPod\u003C\u002Fem\u003E を作成\u003C\u002Fh3\u003E",f,"\u003Cp\u003Eまずは \u003Ccode\u003Epodman\u003C\u002Fcode\u003E で \u003Cem\u003EPod\u003C\u002Fem\u003E を作成およびコンテナを起動する。\u003C\u002Fp\u003E",a,t,"\u003Cdiv class=\"title\"\u003EExample 1. Pod を作成してみる例\u003C\u002Fdiv\u003E",n,j,u,"\u003Cdiv class=\"title\"\u003EPod を作成\u003C\u002Fdiv\u003E",k,v,w,x,"    data-lang=\"bash\"\u003Epodname=\"web-demo\"","podman pod create \\","  --name \"${podname}\" \\   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E","  --hostname \"${podname}\" \\","  --publish 8080:80\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",l,a,o,h,b,p,"\u003Ctd\u003Eコンテナ起動時に参照するので、\u003Cem\u003EPod\u003C\u002Fem\u003E 名を設定しておくことを推奨。\u003C\u002Ftd\u003E",c,g,a,j,u,"\u003Cdiv class=\"title\"\u003Eコンテナを Pod に所属させて起動\u003C\u002Fdiv\u003E",k,v,w,x,"    data-lang=\"bash\"\u003Epodman run --rm -d \\","  --pod \"${podname}\" \\  \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E","  --name \"some-nginx\" \\","  --expose 80 \\","  docker.io\u002Flibrary\u002Fnginx:1.21-alpine\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",l,a,o,h,b,p,"\u003Ctd\u003E所属させる \u003Cem\u003EPod\u003C\u002Fem\u003E を指定。\u003C\u002Ftd\u003E",c,g,a,a,a,a,s,"\u003Ch3 id=\"_kubernetes_yaml_ファイルを生成\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルを生成\u003C\u002Fh3\u003E",f,"\u003Cp\u003E\u003Ccode\u003Epodman generate kube\u003C\u002Fcode\u003E コマンドにより、現在起動中の \u003Cem\u003EPod\u003C\u002Fem\u003E から \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルが生成できる。\u003C\u002Fp\u003E",a,T,h,b,y,U,i,z,"\u003Cem\u003Epodman v3.0.1\u003C\u002Fem\u003E 現在ではまだ開発途中であるため完全な変換はできていない（名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E のマウントなどは無視される）。\u003Cbr\u003E","そのため手作業での修正が必要となるかもしれない。",i,c,g,a,t,"\u003Cdiv class=\"title\"\u003EExample 2. podman で Kubernetes YAML を生成する\u003C\u002Fdiv\u003E",n,j,u,"\u003Cdiv class=\"title\"\u003E対象の Pod から YAML ファイルを生成する\u003C\u002Fdiv\u003E",k,v,w,"    data-output=\"10\"",x,"    data-lang=\"bash\"\u003Epodman generate kube --filename demo-pod.yml \"${podname}\"    \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",l,a,o,h,b,p,"\u003Ctd\u003E\u003Cem\u003EPod\u003C\u002Fem\u003E から \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E を生成して出力する。\u003Cbr\u003E","ここでは出力される内容を \u003Ccode\u003Edemo-pod.yml\u003C\u002Fcode\u003E ファイルに保存している。\u003C\u002Ftd\u003E",c,g,a,a,a,ab,h,b,y,ac,i,z,"名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E をマウントしている場合、その設定は書き出してくれなかったので後述の修正を行う必要がある。",i,c,g,a,a,s,"\u003Ch3 id=\"_kubernetes_yaml_から_pod_起動\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E から \u003Cem\u003EPod\u003C\u002Fem\u003E 起動\u003C\u002Fh3\u003E",f,"\u003Cp\u003E上記で生成した \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E から \u003Cem\u003EPod\u003C\u002Fem\u003E を起動してみる。\u003C\u002Fp\u003E",a,t,"\u003Cdiv class=\"title\"\u003EExample 3. Kubenters YAML ファイルから Pod 起動\u003C\u002Fdiv\u003E",n,j,u,"\u003Cdiv class=\"title\"\u003EPod 起動\u003C\u002Fdiv\u003E",k,v,w,J,x,"    data-lang=\"bash\"\u003Epodman play kube demo-pod.yml\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",l,a,j,u,"\u003Cdiv class=\"title\"\u003EPod 削除\u003C\u002Fdiv\u003E",k,v,w,J,x,"    data-lang=\"bash\"\u003Epodman pod rm --force &lt;pod name&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",l,a,a,a,ab,h,b,y,ac,i,z,"\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E については \u003Ccode\u003Epodman\u003C\u002Fcode\u003E で対応していない書式も多いため、\u003Cbr\u003E","\u003Ccode\u003Epodman generate kube\u003C\u002Fcode\u003E により生成されたもの以外を使う場合は注意が必要。",i,c,g,a,a,a,a,q,"\u003Ch2 id=\"_kubernetes_yaml_についての補足\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E についての補足\u003C\u002Fh2\u003E",r,f,"\u003Cp\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E から利用するにあたって必要そうな部分だけ補足。\u003C\u002Fp\u003E",a,s,"\u003Ch3 id=\"_書式サンプル\"\u003E書式サンプル\u003C\u002Fh3\u003E",f,"\u003Cp\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルの書式については \u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Freference\u002Fkubernetes-api\u002F\" target=\"_blank\" rel=\"noopener\"\u003EKubernetes API ドキュメント\u003C\u002Fa\u003Eとにらめっこするしかなさそう？\u003Cbr\u003E","元々はユーザー側が記述する予定ではなかったらしいので、つらい。\u003C\u002Fp\u003E",a,f,"\u003Cp\u003E基本的には \u003Ccode\u003Epodman generate kube\u003C\u002Fcode\u003E で生成するので、ユーザーが追記するのは \u003Ccode\u003Emetadata\u003C\u002Fcode\u003E フィールド部分になるはず。\u003C\u002Fp\u003E",a,t,"\u003Cdiv class=\"title\"\u003EExample 4. Pod の YAML サンプル\u003C\u002Fdiv\u003E",n,j,C,"\u003Cdiv class=\"title\"\u003Esample-kubernetes.yml\u003C\u002Fdiv\u003E",k,D,"    data-lang=\"yaml\"\u003Ekind: Pod   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E","metadata:   \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E","  name: demo-nginx  \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E",K,"  labels:       \u003Ci class=\"conum\" data-value=\"4\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(4)\u003C\u002Fb\u003E",L,"  annotations:  \u003Ci class=\"conum\" data-value=\"5\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(5)\u003C\u002Fb\u003E","    version: \"0.1.2\"","    update_at: \"2021-09-14\"","    homepage: \"https:\u002F\u002Fexample.com\"",M,"spec:   \u003Ci class=\"conum\" data-value=\"6\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(6)\u003C\u002Fb\u003E",N,O,P,Q,R,S,ad,l,a,o,h,b,p,"\u003Ctd\u003E\u003Cem\u003EPodman\u003C\u002Fem\u003E で利用する場合は \u003Cstrong\u003EPod\u003C\u002Fstrong\u003E にしておけばいい。\u003C\u002Ftd\u003E",c,b,F,"\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Freference\u002Fkubernetes-api\u002Fcommon-definitions\u002Fobject-meta\u002F\" target=\"_blank\" rel=\"noopener\"\u003E\u003Ccode\u003EObjectMeta\u003C\u002Fcode\u003E\u003C\u002Fa\u003E 型。\u003Cbr\u003E","作成する \u003Cem\u003EPod\u003C\u002Fem\u003E の名前やラベル、アノテーションなどを指定する。\u003C\u002Ftd\u003E",c,b,G,"\u003Ctd\u003E作成する \u003Cem\u003EPod\u003C\u002Fem\u003E の名前を指定する。\u003C\u002Ftd\u003E",c,b,ae,af,"この値を使って検索ができる。\u003C\u002Ftd\u003E",c,b,"\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"5\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E5\u003C\u002Fb\u003E\u003C\u002Ftd\u003E",af,"ラベルと違って検索用途には使えない。\u003C\u002Ftd\u003E",c,b,"\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"6\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E6\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","\u003Ctd\u003E\u003Cem\u003EPod\u003C\u002Fem\u003E の仕様設定。\u003Cbr\u003E","基本的に \u003Ccode\u003Epodman generate kube\u003C\u002Fcode\u003E からの自動生成にまかせておけばいい。\u003C\u002Ftd\u003E",c,g,a,a,a,"\u003Cdiv class=\"sect3\"\u003E","\u003Ch4 id=\"_ラベルとアノテーション\"\u003Eラベルとアノテーション\u003C\u002Fh4\u003E","\u003Cdiv class=\"dlist\"\u003E","\u003Cdiv class=\"title\"\u003Eラベルとアノテーションの違い\u003C\u002Fdiv\u003E","\u003Cdl\u003E","\u003Cdt class=\"hdlist1\"\u003Eラベル\u003C\u002Fdt\u003E",ag,"\u003Cp\u003E識別値として、検索やグルーピングに使う任意のハッシュを設定する。\u003C\u002Fp\u003E",ah,"\u003Cdt class=\"hdlist1\"\u003Eアノテーション\u003C\u002Fdt\u003E",ag,"\u003Cp\u003Eラベルとして使わない情報なら何でも。\u003Cbr\u003E","外部ツールがここの情報を利用したりする。\u003C\u002Fp\u003E",f,"\u003Cp\u003E\u003Cem\u003E例： Gitブランチ名、ハッシュ値、使用しているライブラリやツール&#8230;&#8203; など。\u003C\u002Fem\u003E\u003C\u002Fp\u003E",a,ah,"\u003C\u002Fdl\u003E",a,"\u003Cdiv class=\"admonitionblock caution\"\u003E",h,b,y,"\u003Ci class=\"fa icon-caution\" title=\"Caution\" data-md-icon=\"local_fire_department\"\u003E\u003C\u002Fi\u003E",i,z,"\u003Cdiv class=\"title\"\u003E値の型について\u003C\u002Fdiv\u003E",f,"\u003Cp\u003E\u003Ccode\u003Emetadata.labels\u003C\u002Fcode\u003E および \u003Ccode\u003Emetadata.annotations\u003C\u002Fcode\u003E で許容されるのは平坦なハッシュのみ。\u003Cbr\u003E","うっかりネストさせてしまうと次のようなエラーが発生する。\u003C\u002Fp\u003E",a,t,n,j,C,"\u003Cdiv class=\"title\"\u003Ewrong-metadata.yml\u003C\u002Fdiv\u003E",k,D,"    data-lang=\"yaml\"\u003Ekind: Pod",E,"  name: wrong-metadata","  annotations:","    parent:","      child: \"hoge\"","spec: # ...\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",l,a,j,u,"\u003Cdiv class=\"title\"\u003EError!\u003C\u002Fdiv\u003E",k,v,w,J,x,"    data-lang=\"bash\"\u003Epodman play kube wrong-metadata.yml","Error: unable to read YAML \"wrong-metadata.yml\" as Kube Pod:","  error unmarshaling JSON:","    json: cannot unmarshal object into Go struct field ObjectMeta.metadata.annotations of type string\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",l,a,a,a,i,c,g,a,a,a,a,a,q,"\u003Ch2 id=\"_生成された_kubernetes_yaml_ファイルの修正\"\u003E生成された \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルの修正\u003C\u002Fh2\u003E",r,f,"\u003Cp\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E で自動生成したあと、下記のような事柄では手直しが必要かもしれない。\u003C\u002Fp\u003E",a,s,"\u003Ch3 id=\"_不要な環境変数の削除\"\u003E不要な環境変数の削除\u003C\u002Fh3\u003E",f,"\u003Cp\u003E\u003Ccode\u003Epodman generate\u003C\u002Fcode\u003E で生成された \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルには、コンテナに存在するすべての環境変数が含まれている。\u003Cbr\u003E","つまり、コンテナにあらかじめ定義されている環境変数も含まれる。\u003C\u002Fp\u003E",a,f,"\u003Cp\u003Eこのままだとコンテナ運用時のメンテナンスがめんどくさくなるので、不要な環境変数の指定については削除しておく。\u003C\u002Fp\u003E",a,a,s,"\u003Ch3 id=\"_名前付き_volume_を利用したい\"\u003E名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E を利用したい\u003C\u002Fh3\u003E",f,"\u003Cp\u003E\u003Ccode\u003Epodman play kube\u003C\u002Fcode\u003E でサポートされている \u003Cem\u003EVolume\u003C\u002Fem\u003E は \u003Ccode\u003EhostPath\u003C\u002Fcode\u003E と \u003Ccode\u003EpersistentVolumeClaim\u003C\u002Fcode\u003E の2つのみ（\u003Ca href=\"https:\u002F\u002Fdocs.podman.io\u002Fen\u002Fv3.3.1\u002Fmarkdown\u002Fpodman-play-kube.1.html\" target=\"_blank\" rel=\"noopener\"\u003E参考\u003C\u002Fa\u003E）。\u003Cbr\u003E","このうち \u003Cstrong\u003E\u003Ccode\u003EpersistentVolumeClaim\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E が名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E に対応する。\u003C\u002Fp\u003E",a,t,"\u003Cdiv class=\"title\"\u003EExample 5. Kubernetes YAML にて名前付き Volume を利用する書き方\u003C\u002Fdiv\u003E",n,j,C,"\u003Cdiv class=\"title\"\u003Ewith-named-volume.yml\u003C\u002Fdiv\u003E",k,D,ai,H,aj,E,ak,K,al,L,M,am,N,O,P,Q,R,S,"      protocol: TCP","    volumeMounts:   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E","    - mountPath: \u002Fusr\u002Fshare\u002Fnginx\u002Fhtml","      name: contents","  volumes:","  - name: contents","    persistentVolumeClaim:    \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E","      claimName: nginx-contents   \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",l,a,o,h,b,p,"\u003Ctd\u003E\u003Cem\u003EPod\u003C\u002Fem\u003E において \u003Ccode\u003EpersistentVolumeClaim\u003C\u002Fcode\u003E は \u003Cem\u003EVolume\u003C\u002Fem\u003E として扱うため、このような書式となる。\u003C\u002Ftd\u003E",c,b,F,"\u003Ctd\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E において \u003Ccode\u003EpersistentVolumeClaim\u003C\u002Fcode\u003E 型が名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E に相当する。\u003C\u002Ftd\u003E",c,b,G,"\u003Ctd\u003E名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E の指定。存在しなければ新規作成される。\u003C\u002Ftd\u003E",c,g,a,a,a,a,s,"\u003Ch3 id=\"_別ファイルで値を定義したい\"\u003E別ファイルで値を定義したい\u003C\u002Fh3\u003E",f,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fja\u002Fdocs\u002Fconcepts\u002Fconfiguration\u002Fconfigmap\u002F\" target=\"_blank\" rel=\"noopener\"\u003E\u003Cem\u003EConfigMap\u003C\u002Fem\u003E\u003C\u002Fa\u003E を利用して環境変数に値を注入できる。\u003C\u002Fp\u003E",a,"\u003Cdiv class=\"admonitionblock warning\"\u003E",h,b,y,"\u003Ci class=\"fa icon-warning\" title=\"Warning\" data-md-icon=\"warning\"\u003E\u003C\u002Fi\u003E",i,z,"\u003Cem\u003EConfigMap\u003C\u002Fem\u003E は機密性や暗号化の機能をもたないので、パスワードなどの機密情報については \u003Cem\u003ESecret\u003C\u002Fem\u003E を使うべき。\u003Cbr\u003E","ただ、残念ながら \u003Ccode\u003Epodman play kube\u003C\u002Fcode\u003E では \u003Cem\u003ESecret\u003C\u002Fem\u003E が未実装。",i,c,g,a,t,"\u003Cdiv class=\"title\"\u003EExample 6. ConfigMap ファイルから値を注入する\u003C\u002Fdiv\u003E",n,j,C,"\u003Cdiv class=\"title\"\u003EConfigMap の例\u003C\u002Fdiv\u003E",k,D,"    data-lang=\"yaml\"\u003E# ConfigMap","# demo-nginx-configmap1.yml",H,an,ao,E,"  name: nginx-config1   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E",ap,"  NGINX_HOST: foobar.com  \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E","  NGINX_PORT: 80          \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E",M,"# demo-nginx-configmap2.yml",H,an,ao,E,"  name: nginx-config2   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E",ap,"  template_dir: \u002Fetc\u002Fnginx\u002Ftemplates\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",l,a,o,h,b,p,"\u003Ctd\u003E\u003Cstrong\u003E必須\u003C\u002Fstrong\u003E: 参照されるときに使われるキー。\u003C\u002Ftd\u003E",c,b,F,"\u003Ctd\u003E参照される値。文字列のキーと値のハッシュ（\u003Cem\u003EMap\u003C\u002Fem\u003E）を格納。\u003C\u002Ftd\u003E",c,b,G,"\u003Ctd\u003E環境変数として指定。後述する \u003Ccode\u003EenvFrom\u003C\u002Fcode\u003E から参照されることを想定している。\u003C\u002Ftd\u003E",c,g,a,j,C,"\u003Cdiv class=\"title\"\u003Edemo-nginx.yml\u003C\u002Fdiv\u003E",k,D,ai,H,aj,E,ak,K,al,L,am,N,O,P,"    env:","    - name: NGINX_ENVSUBST_TEMPLATE_DIR","      valueFrom:  \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E","        configMapKeyRef:","          name: nginx-config2 \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E","          key: template_dir   \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E","    envFrom:  \u003Ci class=\"conum\" data-value=\"4\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(4)\u003C\u002Fb\u003E","    - configMapRef:","        name: nginx-config1",Q,R,S,ad,l,a,o,h,b,p,"\u003Ctd\u003E環境変数の値について \u003Cem\u003EConfigMap\u003C\u002Fem\u003E を参照する。\u003C\u002Ftd\u003E",c,b,F,"\u003Ctd\u003E参照したい \u003Cem\u003EConfigMap\u003C\u002Fem\u003E ファイルの \u003Ccode\u003Emetadata.name\u003C\u002Fcode\u003E を指定。\u003C\u002Ftd\u003E",c,b,G,"\u003Ctd\u003E参照する \u003Ccode\u003Edata\u003C\u002Fcode\u003E のキーを指定。\u003C\u002Ftd\u003E",c,b,ae,"\u003Ctd\u003E\u003Cem\u003EConfigMap\u003C\u002Fem\u003E の \u003Ccode\u003Edata\u003C\u002Fcode\u003E をすべて環境変数として取り込みたい場合は \u003Ccode\u003EenvFrom\u003C\u002Fcode\u003E を利用する。\u003C\u002Ftd\u003E",c,g,a,j,u,"\u003Cdiv class=\"title\"\u003EConfigMapを利用して起動\u003C\u002Fdiv\u003E",k,v,w,x,"    data-lang=\"bash\"\u003Epodman play kube demo-nginx.yml \\","  --configmap demo-nginx-configmap1.yml \\   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E","  --configmap demo-nginx-configmap2.yml     \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",l,a,o,h,b,p,"\u003Ctd\u003E\u003Ccode\u003E--configmap\u003C\u002Fcode\u003E オプションは複数回指定できる。\u003C\u002Ftd\u003E",c,g,a,a,a,a,a,a,q,"\u003Ch2 id=\"_おわりに\"\u003Eおわりに\u003C\u002Fh2\u003E",r,f,"\u003Cp\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E で \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルを自動生成できるので、使うだけなら簡単でうれしい。\u003Cbr\u003E","名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E の設定は自動生成されなかったので、そこだけ注意しておく。\u003C\u002Fp\u003E",a,a,a,q,"\u003Ch2 id=\"_参考\"\u003E参考\u003C\u002Fh2\u003E",r,A,"\u003Cdiv class=\"title\"\u003EPodman\u003C\u002Fdiv\u003E",B,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.podman.io\u002Fen\u002Flatest\u002Fmarkdown\u002Fpodman-play-kube.1.html\" target=\"_blank\" rel=\"noopener\"\u003Epodman-play-kube(1) — Podman documentation\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.podman.io\u002Fen\u002Flatest\u002Fmarkdown\u002Fpodman-generate-kube.1.html\" target=\"_blank\" rel=\"noopener\"\u003Epodman-generate-kube(1) — Podman documentation\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,m,a,A,"\u003Cdiv class=\"title\"\u003EDocker Compose &#8594; Kubernetes YAML\u003C\u002Fdiv\u003E",B,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fbalagetech.com\u002Fconvert-docker-compose-services-to-pods\u002F\" target=\"_blank\" rel=\"noopener\"\u003EConvert docker-compose services to pods with Podman - Balage Tech blog\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fqiita.com\u002Fthirdpenguin\u002Fitems\u002Fc9e58c27e96f02b0a96d\" target=\"_blank\" rel=\"noopener\"\u003EPodman で Compose したかったらどうするの？ - Qiita\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,m,a,A,"\u003Cdiv class=\"title\"\u003EKubernetes YAML\u003C\u002Fdiv\u003E",B,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Freference\u002Fkubernetes-api\u002Fworkload-resources\u002Fpod-v1\u002F\" target=\"_blank\" rel=\"noopener\"\u003EPod | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fja\u002Fdocs\u002Fconcepts\u002Fconfiguration\u002Fconfigmap\u002F\" target=\"_blank\" rel=\"noopener\"\u003EConfigMap | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Ftasks\u002Finject-data-application\u002F_print\u002F\" target=\"_blank\" rel=\"noopener\"\u003EInject Data Into Applications | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fja\u002Fdocs\u002Fconcepts\u002Foverview\u002Fworking-with-objects\u002Flabels\u002F\" target=\"_blank\" rel=\"noopener\"\u003Eラベル(Labels)とセレクター(Selectors) | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fja\u002Fdocs\u002Fconcepts\u002Foverview\u002Fworking-with-objects\u002Fannotations\u002F\" target=\"_blank\" rel=\"noopener\"\u003Eアノテーション(Annotations) | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,m,a,A,"\u003Cdiv class=\"title\"\u003EKubernetes PersistentVolume\u003C\u002Fdiv\u003E",B,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fja\u002Fdocs\u002Fconcepts\u002Fstorage\u002Fpersistent-volumes\u002F\" target=\"_blank\" rel=\"noopener\"\u003E永続ボリューム | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,e,"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fwww.netone.co.jp\u002Fknowledge-center\u002Fnetone-blog\u002F20191206-1\u002F\" target=\"_blank\" rel=\"noopener\"\u003EKubernetesのデータ永続化入門 | ネットワンシステムズ\u003C\u002Fa\u003E\u003C\u002Fp\u003E",d,m,a,a,a],title:"podman で docker-compose の代わりに Kubernetes YAML を使ってみた",created_at:"2021-09-17",tags:["podman","kubernetes"],updated_at:"2021-09-28",author:"秋々すすき",description:aq,revision:"1.1",revision_remark:"docker-compose 対応についての追記。"},navi:{next:{path:"\u002Fposts\u002Flinux_bash_completion",title:"bash の補完スクリプト（bash-completion）ファイルってどこに配置すればいいの？"},prev:{path:"\u002Fposts\u002Flinux_tmux_autostart",title:"SSH接続時に tmux を自動起動させる"}},currentPath:"https:\u002F\u002Fvlike-vlife.netlify.app\u002Fposts\u002Fpodman_kubernetes_yaml"}],fetch:{},mutations:aq}}("\u003C\u002Fdiv\u003E","\u003Ctr\u003E","\u003C\u002Ftr\u003E","\u003C\u002Fli\u003E","\u003Cli\u003E","\u003Cdiv class=\"paragraph\"\u003E","\u003C\u002Ftable\u003E","\u003Ctable\u003E","\u003C\u002Ftd\u003E","\u003Cdiv ","  \u003Cdiv class=\"content\"\u003E","  \u003C\u002Fdiv\u003E","\u003C\u002Ful\u003E","\u003Cdiv class=\"content\"\u003E","\u003Cdiv class=\"colist arabic\"\u003E","\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","\u003Cdiv class=\"sect1\"\u003E","\u003Cdiv class=\"sectionbody\"\u003E","\u003Cdiv class=\"sect2\"\u003E","\u003Cdiv class=\"exampleblock\"\u003E","    class=\"listingblock no-line-numbers command-line\"\u003E","  \u003Cpre class=\"highlight command-line\" data-user=\"user\"","    data-host=\"local\"","    \u003E\u003Ccode class=\"language-bash\"","\u003Ctd class=\"icon\"\u003E","\u003Ctd class=\"content\"\u003E","\u003Cdiv class=\"ulist\"\u003E","\u003Cul\u003E","    class=\"listingblock\"\u003E","  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-yaml\"","metadata:","\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E2\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E3\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","---","\u003Cul class=\"sectlevel2\"\u003E","    data-output=\"2-10\"","  creationTimestamp: \"2021-09-11T12:00:00Z\"","    app: nginx","","  containers:","  - image: docker.io\u002Flibrary\u002Fnginx:1.21-alpine","    name: some-nginx","    ports:","    - containerPort: 80","      hostPort: 8080","\u003Cdiv class=\"admonitionblock important\"\u003E","\u003Ci class=\"fa icon-important\" title=\"Important\" data-md-icon=\"report\"\u003E\u003C\u002Fi\u003E","\u003Ccol\u003E","\u003Cdiv class=\"olist arabic\"\u003E","\u003Col class=\"arabic\"\u003E","\u003Cp\u003E通常通り \u003Ccode\u003Epodman\u003C\u002Fcode\u003E コマンドから \u003Cem\u003EPod\u003C\u002Fem\u003E を作成。\u003C\u002Fp\u003E","\u003Cp\u003E作成した \u003Cem\u003EPod\u003C\u002Fem\u003E から \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルを生成。\u003C\u002Fp\u003E","\u003Cp\u003Eこの \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルは修正する必要があるかもしれない。\u003C\u002Fp\u003E","\u003Cp\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルから \u003Cem\u003EPod\u003C\u002Fem\u003E を起動。\u003C\u002Fp\u003E","\u003C\u002Fol\u003E","\u003Cdiv class=\"admonitionblock note\"\u003E","\u003Ci class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"\u003E\u003C\u002Fi\u003E","      protocol: TCP\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E","\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"4\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E4\u003C\u002Fb\u003E\u003C\u002Ftd\u003E","\u003Ctd\u003E文字列のキーと値のハッシュ（\u003Cem\u003EMap\u003C\u002Fem\u003E）。\u003Cbr\u003E","\u003Cdd\u003E","\u003C\u002Fdd\u003E","    data-lang=\"yaml\"\u003E# Kubernetes YAML","kind: Pod","  name: demo-nginx","  labels:","spec:","apiVersion: v1","kind: ConfigMap","data:   \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E",void 0)));