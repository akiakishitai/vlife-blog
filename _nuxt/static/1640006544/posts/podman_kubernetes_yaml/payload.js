__NUXT_JSONP__("/posts/podman_kubernetes_yaml", (function(a){return {data:[{posted:{filename:"podman_kubernetes_yaml.adoc",rendered:"\u003Cdiv id=\"toc\" class=\"toc\"\u003E\n\u003Cdiv id=\"toctitle\"\u003E目次\u003C\u002Fdiv\u003E\n\u003Cul class=\"sectlevel1\"\u003E\n\u003Cli\u003E\u003Ca href=\"#_はじめに\"\u003Eはじめに\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_概略\"\u003E概略\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_podman_による_kubernetes_yaml_利用の手順\"\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E による \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E 利用の手順\u003C\u002Fa\u003E\n\u003Cul class=\"sectlevel2\"\u003E\n\u003Cli\u003E\u003Ca href=\"#_コマンドで_pod_を作成\"\u003Eコマンドで \u003Cem\u003EPod\u003C\u002Fem\u003E を作成\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_kubernetes_yaml_ファイルを生成\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルを生成\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_kubernetes_yaml_から_pod_起動\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E から \u003Cem\u003EPod\u003C\u002Fem\u003E 起動\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_kubernetes_yaml_についての補足\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E についての補足\u003C\u002Fa\u003E\n\u003Cul class=\"sectlevel2\"\u003E\n\u003Cli\u003E\u003Ca href=\"#_書式サンプル\"\u003E書式サンプル\u003C\u002Fa\u003E\n\u003Cul class=\"sectlevel3\"\u003E\n\u003Cli\u003E\u003Ca href=\"#_ラベルとアノテーション\"\u003Eラベルとアノテーション\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_生成された_kubernetes_yaml_ファイルの修正\"\u003E生成された \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルの修正\u003C\u002Fa\u003E\n\u003Cul class=\"sectlevel2\"\u003E\n\u003Cli\u003E\u003Ca href=\"#_不要な環境変数の削除\"\u003E不要な環境変数の削除\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_名前付き_volume_を利用したい\"\u003E名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E を利用したい\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_別ファイルで値を定義したい\"\u003E別ファイルで値を定義したい\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_おわりに\"\u003Eおわりに\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#_参考\"\u003E参考\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_はじめに\"\u003Eはじめに\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Cem\u003EPodman\u003C\u002Fem\u003E は \u003Cem\u003EDocker Compose\u003C\u002Fem\u003E の代わりに \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E を使うことが推奨されているみたい。\u003Cbr\u003E\nそこで \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E から起動することを試してみた。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"admonitionblock important\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"icon\"\u003E\n\u003Ci class=\"fa icon-important\" title=\"Important\" data-md-icon=\"report\"\u003E\u003C\u002Fi\u003E\n\u003C\u002Ftd\u003E\n\u003Ctd class=\"content\"\u003E\n\u003Cdiv class=\"title\"\u003E追記\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Cem\u003EPodman v3\u003C\u002Fem\u003E では（ルートレスの場合は \u003Cem\u003Ev3.2.3\u003C\u002Fem\u003E 以降から） \u003Cem\u003Edocker-compose\u003C\u002Fem\u003E に公式対応してるみたい。\u003Cbr\u003E\nよって \u003Cem\u003Edocker-compose.yml\u003C\u002Fem\u003E がすでに有るなら、本記事のように \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E への変換は必要なさそう。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E👉\u003Ca href=\"https:\u002F\u002Frheb.hatenablog.com\u002Fentry\u002Fpodman3-rootless-docker-compose\" target=\"_blank\" rel=\"noopener\"\u003E【Podman v3】ルートレスモードでdocker-composeを実行する - 赤帽エンジニアブログ\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003Ctable class=\"tableblock frame-all grid-all fit-content\"\u003E\n\u003Ccaption class=\"title\"\u003ETable 1. 環境\u003C\u002Fcaption\u003E\n\u003Ccolgroup\u003E\n\u003Ccol\u003E\n\u003Ccol\u003E\n\u003C\u002Fcolgroup\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth class=\"tableblock halign-left valign-top\"\u003EApp\u003C\u002Fth\u003E\n\u003Cth class=\"tableblock halign-left valign-top\"\u003EVersion\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003Epodman\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003Ctd class=\"tableblock halign-left valign-top\"\u003E\u003Cp class=\"tableblock\"\u003E3.0.1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_概略\"\u003E概略\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E コマンドで起動中の \u003Cem\u003EPod\u003C\u002Fem\u003E から \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E を生成できるため、それを利用する。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"olist arabic\"\u003E\n\u003Col class=\"arabic\"\u003E\n\u003Cli\u003E\n\u003Cp\u003E通常通り \u003Ccode\u003Epodman\u003C\u002Fcode\u003E コマンドから \u003Cem\u003EPod\u003C\u002Fem\u003E を作成。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E作成した \u003Cem\u003EPod\u003C\u002Fem\u003E から \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルを生成。\u003C\u002Fp\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003Eこの \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルは修正する必要があるかもしれない。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルから \u003Cem\u003EPod\u003C\u002Fem\u003E を起動。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"imageblock kroki\"\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" xmlns:xlink=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxlink\" contentScriptType=\"application\u002Fecmascript\" contentStyleType=\"text\u002Fcss\" height=\"465px\" preserveAspectRatio=\"none\" style=\"width:270px;height:465px;background:#FFFFFF;\" version=\"1.1\" viewBox=\"0 0 270 465\" width=\"270px\" zoomAndPan=\"magnify\"\u003E\u003Cdefs\u003E\u003Cfilter height=\"300%\" id=\"f1irtffj3dwowf\" width=\"300%\" x=\"-1\" y=\"-1\"\u003E\u003CfeGaussianBlur result=\"blurOut\" stdDeviation=\"2.0\"\u002F\u003E\u003CfeColorMatrix in=\"blurOut\" result=\"blurOut2\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0\"\u002F\u003E\u003CfeOffset dx=\"4.0\" dy=\"4.0\" in=\"blurOut2\" result=\"blurOut3\"\u002F\u003E\u003CfeBlend in=\"SourceGraphic\" in2=\"blurOut3\" mode=\"normal\"\u002F\u003E\u003C\u002Ffilter\u003E\u003C\u002Fdefs\u003E\u003Cg\u003E\u003Crect fill=\"#FFFFFF\" filter=\"url(#f1irtffj3dwowf)\" height=\"113.8\" style=\"stroke:#A80036;stroke-width:1.0;\" width=\"10\" x=\"220.5\" y=\"120.3999\"\u002F\u003E\u003Crect fill=\"#FFFFFF\" filter=\"url(#f1irtffj3dwowf)\" height=\"89.8\" style=\"stroke:#000000;stroke-width:2.0;\" width=\"246.5\" x=\"10\" y=\"274.2\"\u002F\u003E\u003Cline style=\"stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;\" x1=\"37\" x2=\"37\" y1=\"88.7999\" y2=\"381\"\u002F\u003E\u003Cline style=\"stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;\" x1=\"225.5\" x2=\"225.5\" y1=\"88.7999\" y2=\"381\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"14\" lengthAdjust=\"spacing\" textLength=\"29\" x=\"20\" y=\"85.9999\"\u003EUser\u003C\u002Ftext\u003E\u003Cellipse cx=\"37.5\" cy=\"15\" fill=\"#FEFECE\" filter=\"url(#f1irtffj3dwowf)\" rx=\"8\" ry=\"8\" style=\"stroke:#A80036;stroke-width:2.0;\"\u002F\u003E\u003Cpath d=\"M37.5,23 L37.5,50 M24.5,31 L50.5,31 M37.5,50 L24.5,65 M37.5,50 L50.5,65 \" fill=\"none\" filter=\"url(#f1irtffj3dwowf)\" style=\"stroke:#A80036;stroke-width:2.0;\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"14\" lengthAdjust=\"spacing\" textLength=\"29\" x=\"20\" y=\"394\"\u003EUser\u003C\u002Ftext\u003E\u003Cellipse cx=\"37.5\" cy=\"406.7999\" fill=\"#FEFECE\" filter=\"url(#f1irtffj3dwowf)\" rx=\"8\" ry=\"8\" style=\"stroke:#A80036;stroke-width:2.0;\"\u002F\u003E\u003Cpath d=\"M37.5,414.7999 L37.5,441.7999 M24.5,422.7999 L50.5,422.7999 M37.5,441.7999 L24.5,456.7999 M37.5,441.7999 L50.5,456.7999 \" fill=\"none\" filter=\"url(#f1irtffj3dwowf)\" style=\"stroke:#A80036;stroke-width:2.0;\"\u002F\u003E\u003Crect fill=\"#FEFECE\" filter=\"url(#f1irtffj3dwowf)\" height=\"30.7999\" style=\"stroke:#A80036;stroke-width:1.5;\" width=\"38\" x=\"204.5\" y=\"53\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"14\" lengthAdjust=\"spacing\" textLength=\"24\" x=\"211.5\" y=\"73.9999\"\u003EPod\u003C\u002Ftext\u003E\u003Crect fill=\"#FEFECE\" filter=\"url(#f1irtffj3dwowf)\" height=\"30.7999\" style=\"stroke:#A80036;stroke-width:1.5;\" width=\"38\" x=\"204.5\" y=\"380\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"14\" lengthAdjust=\"spacing\" textLength=\"24\" x=\"211.5\" y=\"401\"\u003EPod\u003C\u002Ftext\u003E\u003Crect fill=\"#FFFFFF\" filter=\"url(#f1irtffj3dwowf)\" height=\"113.8\" style=\"stroke:#A80036;stroke-width:1.0;\" width=\"10\" x=\"220.5\" y=\"120.3999\"\u002F\u003E\u003Cpolygon fill=\"#A80036\" points=\"208.5,116.3999,218.5,120.3999,208.5,124.3999,212.5,120.3999\" style=\"stroke:#A80036;stroke-width:1.0;\"\u002F\u003E\u003Cline style=\"stroke:#A80036;stroke-width:1.0;\" x1=\"37.5\" x2=\"214.5\" y1=\"120.3999\" y2=\"120.3999\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"13\" lengthAdjust=\"spacing\" textLength=\"67\" x=\"44.5\" y=\"115.7999\"\u003Epodman run\u003C\u002Ftext\u003E\u003Cpolygon fill=\"#A80036\" points=\"208.5,171,218.5,175,208.5,179,212.5,175\" style=\"stroke:#A80036;stroke-width:1.0;\"\u002F\u003E\u003Cline style=\"stroke:#A80036;stroke-width:1.0;\" x1=\"37.5\" x2=\"214.5\" y1=\"175\" y2=\"175\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"13\" lengthAdjust=\"spacing\" textLength=\"130\" x=\"44.5\" y=\"170.4\"\u003Epodman generate kube\u003C\u002Ftext\u003E\u003Cpolygon fill=\"#A80036\" points=\"48.5,200.6,38.5,204.6,48.5,208.6,44.5,204.6\" style=\"stroke:#A80036;stroke-width:1.0;\"\u002F\u003E\u003Cline style=\"stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;\" x1=\"42.5\" x2=\"219.5\" y1=\"204.6\" y2=\"204.6\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"13\" lengthAdjust=\"spacing\" textLength=\"159\" x=\"54.5\" y=\"200\"\u003EKubernetes YAML ファイル\u003C\u002Ftext\u003E\u003Cpolygon fill=\"#A80036\" points=\"213.5,230.2,223.5,234.2,213.5,238.2,217.5,234.2\" style=\"stroke:#A80036;stroke-width:1.0;\"\u002F\u003E\u003Cline style=\"stroke:#A80036;stroke-width:1.0;\" x1=\"37.5\" x2=\"219.5\" y1=\"234.2\" y2=\"234.2\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"13\" lengthAdjust=\"spacing\" textLength=\"64\" x=\"44.5\" y=\"229.6\"\u003Epodman rm\u003C\u002Ftext\u003E\u003Cpath d=\"M10,274.2 L93,274.2 L93,281.2 L83,291.2 L10,291.2 L10,274.2 \" fill=\"#EEEEEE\" style=\"stroke:#000000;stroke-width:1.0;\"\u002F\u003E\u003Crect fill=\"none\" height=\"89.8\" style=\"stroke:#000000;stroke-width:2.0;\" width=\"246.5\" x=\"10\" y=\"274.2\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"13\" font-weight=\"bold\" lengthAdjust=\"spacing\" textLength=\"34\" x=\"25\" y=\"288.2\"\u003Ewhile\u003C\u002Ftext\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"11\" font-weight=\"bold\" lengthAdjust=\"spacing\" textLength=\"107\" x=\"108\" y=\"287.1999\"\u003E[期待通りになるまで]\u003C\u002Ftext\u003E\u003Cline style=\"stroke:#A80036;stroke-width:1.0;\" x1=\"37.5\" x2=\"79.5\" y1=\"313.4\" y2=\"313.4\"\u002F\u003E\u003Cline style=\"stroke:#A80036;stroke-width:1.0;\" x1=\"79.5\" x2=\"79.5\" y1=\"313.4\" y2=\"326.4\"\u002F\u003E\u003Cline style=\"stroke:#A80036;stroke-width:1.0;\" x1=\"38.5\" x2=\"79.5\" y1=\"326.4\" y2=\"326.4\"\u002F\u003E\u003Cpolygon fill=\"#A80036\" points=\"48.5,322.4,38.5,326.4,48.5,330.4,44.5,326.4\" style=\"stroke:#A80036;stroke-width:1.0;\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"13\" lengthAdjust=\"spacing\" textLength=\"117\" x=\"44.5\" y=\"308.8\"\u003EYAML ファイル修正\u003C\u002Ftext\u003E\u003Cpolygon fill=\"#A80036\" points=\"213.5,352,223.5,356,213.5,360,217.5,356\" style=\"stroke:#A80036;stroke-width:1.0;\"\u002F\u003E\u003Cline style=\"stroke:#A80036;stroke-width:1.0;\" x1=\"37.5\" x2=\"219.5\" y1=\"356\" y2=\"356\"\u002F\u003E\u003Ctext fill=\"#000000\" font-family=\"sans-serif\" font-size=\"13\" lengthAdjust=\"spacing\" textLength=\"103\" x=\"44.5\" y=\"351.4\"\u003Epodman play kube\u003C\u002Ftext\u003E\u003C!--MD5=[01609f75066a9bdc7600b49341ae4410]\n@startuml\nactor User\n\nUser -\u003E Pod ++ : podman run\n|||\nUser -\u003E Pod : podman generate kube\nUser \u003C- - Pod : Kubernetes YAML ファイル\nUser -\u003E Pod : podman rm\nPod - -\n|||\ngroup while [期待通りになるまで]\n  User -\u003E User : YAML ファイル修正\n  User -\u003E Pod : podman play kube\nend\n@enduml\n\nPlantUML version 1.2021.16(Wed Dec 08 17:25:22 GMT 2021)\n(GPL source distribution)\nJava Runtime: OpenJDK Runtime Environment\nJVM: OpenJDK 64-Bit Server VM\nDefault Encoding: UTF-8\nLanguage: en\nCountry: US\n--\u003E\u003C\u002Fg\u003E\u003C\u002Fsvg\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_podman_による_kubernetes_yaml_利用の手順\"\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E による \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E 利用の手順\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"olist arabic\"\u003E\n\u003Col class=\"arabic\"\u003E\n\u003Cli\u003E\n\u003Cp\u003E通常通り \u003Ccode\u003Epodman\u003C\u002Fcode\u003E コマンドから \u003Cem\u003EPod\u003C\u002Fem\u003E を作成。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E作成した \u003Cem\u003EPod\u003C\u002Fem\u003E から \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルを生成。\u003C\u002Fp\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003Eこの \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルは修正する必要があるかもしれない。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルから \u003Cem\u003EPod\u003C\u002Fem\u003E を起動。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_コマンドで_pod_を作成\"\u003Eコマンドで \u003Cem\u003EPod\u003C\u002Fem\u003E を作成\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003Eまずは \u003Ccode\u003Epodman\u003C\u002Fcode\u003E で \u003Cem\u003EPod\u003C\u002Fem\u003E を作成およびコンテナを起動する。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"title\"\u003EExample 1. Pod を作成してみる例\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock no-line-numbers command-line\"\u003E\n\u003Cdiv class=\"title\"\u003EPod を作成\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Epodname=\"web-demo\"\npodman pod create \\\n  --name \"${podname}\" \\   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\n  --hostname \"${podname}\" \\\n  --publish 8080:80\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"colist arabic\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003Eコンテナ起動時に参照するので、\u003Cem\u003EPod\u003C\u002Fem\u003E 名を設定しておくことを推奨。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock no-line-numbers command-line\"\u003E\n\u003Cdiv class=\"title\"\u003Eコンテナを Pod に所属させて起動\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Epodman run --rm -d \\\n  --pod \"${podname}\" \\  \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\n  --name \"some-nginx\" \\\n  --expose 80 \\\n  docker.io\u002Flibrary\u002Fnginx:1.21-alpine\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"colist arabic\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E所属させる \u003Cem\u003EPod\u003C\u002Fem\u003E を指定。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_kubernetes_yaml_ファイルを生成\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルを生成\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Epodman generate kube\u003C\u002Fcode\u003E コマンドにより、現在起動中の \u003Cem\u003EPod\u003C\u002Fem\u003E から \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルが生成できる。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"admonitionblock important\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"icon\"\u003E\n\u003Ci class=\"fa icon-important\" title=\"Important\" data-md-icon=\"report\"\u003E\u003C\u002Fi\u003E\n\u003C\u002Ftd\u003E\n\u003Ctd class=\"content\"\u003E\n\u003Cem\u003Epodman v3.0.1\u003C\u002Fem\u003E 現在ではまだ開発途中であるため完全な変換はできていない（名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E のマウントなどは無視される）。\u003Cbr\u003E\nそのため手作業での修正が必要となるかもしれない。\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"title\"\u003EExample 2. podman で Kubernetes YAML を生成する\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock no-line-numbers command-line\"\u003E\n\u003Cdiv class=\"title\"\u003E対象の Pod から YAML ファイルを生成する\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    data-output=\"10\"\n    \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Epodman generate kube --filename demo-pod.yml \"${podname}\"    \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"colist arabic\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003EPod\u003C\u002Fem\u003E から \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E を生成して出力する。\u003Cbr\u003E\nここでは出力される内容を \u003Ccode\u003Edemo-pod.yml\u003C\u002Fcode\u003E ファイルに保存している。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"admonitionblock note\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"icon\"\u003E\n\u003Ci class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"\u003E\u003C\u002Fi\u003E\n\u003C\u002Ftd\u003E\n\u003Ctd class=\"content\"\u003E\n名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E をマウントしている場合、その設定は書き出してくれなかったので後述の修正を行う必要がある。\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_kubernetes_yaml_から_pod_起動\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E から \u003Cem\u003EPod\u003C\u002Fem\u003E 起動\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E上記で生成した \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E から \u003Cem\u003EPod\u003C\u002Fem\u003E を起動してみる。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"title\"\u003EExample 3. Kubenters YAML ファイルから Pod 起動\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock no-line-numbers command-line\"\u003E\n\u003Cdiv class=\"title\"\u003EPod 起動\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    data-output=\"2-10\"\n    \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Epodman play kube demo-pod.yml\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock no-line-numbers command-line\"\u003E\n\u003Cdiv class=\"title\"\u003EPod 削除\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    data-output=\"2-10\"\n    \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Epodman pod rm --force &lt;pod name&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"admonitionblock note\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"icon\"\u003E\n\u003Ci class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"\u003E\u003C\u002Fi\u003E\n\u003C\u002Ftd\u003E\n\u003Ctd class=\"content\"\u003E\n\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E については \u003Ccode\u003Epodman\u003C\u002Fcode\u003E で対応していない書式も多いため、\u003Cbr\u003E\n\u003Ccode\u003Epodman generate kube\u003C\u002Fcode\u003E により生成されたもの以外を使う場合は注意が必要。\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_kubernetes_yaml_についての補足\"\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E についての補足\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E から利用するにあたって必要そうな部分だけ補足。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_書式サンプル\"\u003E書式サンプル\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルの書式については \u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Freference\u002Fkubernetes-api\u002F\" target=\"_blank\" rel=\"noopener\"\u003EKubernetes API ドキュメント\u003C\u002Fa\u003Eとにらめっこするしかなさそう？\u003Cbr\u003E\n元々はユーザー側が記述する予定ではなかったらしいので、つらい。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E基本的には \u003Ccode\u003Epodman generate kube\u003C\u002Fcode\u003E で生成するので、ユーザーが追記するのは \u003Ccode\u003Emetadata\u003C\u002Fcode\u003E フィールド部分になるはず。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"title\"\u003EExample 4. Pod の YAML サンプル\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Esample-kubernetes.yml\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-yaml\"\n    data-lang=\"yaml\"\u003Ekind: Pod   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\nmetadata:   \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E\n  name: demo-nginx  \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E\n  creationTimestamp: \"2021-09-11T12:00:00Z\"\n  labels:       \u003Ci class=\"conum\" data-value=\"4\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(4)\u003C\u002Fb\u003E\n    app: nginx\n  annotations:  \u003Ci class=\"conum\" data-value=\"5\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(5)\u003C\u002Fb\u003E\n    version: \"0.1.2\"\n    update_at: \"2021-09-14\"\n    homepage: \"https:\u002F\u002Fexample.com\"\n\nspec:   \u003Ci class=\"conum\" data-value=\"6\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(6)\u003C\u002Fb\u003E\n  containers:\n  - image: docker.io\u002Flibrary\u002Fnginx:1.21-alpine\n    name: some-nginx\n    ports:\n    - containerPort: 80\n      hostPort: 8080\n      protocol: TCP\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"colist arabic\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003EPodman\u003C\u002Fem\u003E で利用する場合は \u003Cstrong\u003EPod\u003C\u002Fstrong\u003E にしておけばいい。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E2\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Freference\u002Fkubernetes-api\u002Fcommon-definitions\u002Fobject-meta\u002F\" target=\"_blank\" rel=\"noopener\"\u003E\u003Ccode\u003EObjectMeta\u003C\u002Fcode\u003E\u003C\u002Fa\u003E 型。\u003Cbr\u003E\n作成する \u003Cem\u003EPod\u003C\u002Fem\u003E の名前やラベル、アノテーションなどを指定する。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E3\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E作成する \u003Cem\u003EPod\u003C\u002Fem\u003E の名前を指定する。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"4\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E4\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E文字列のキーと値のハッシュ（\u003Cem\u003EMap\u003C\u002Fem\u003E）。\u003Cbr\u003E\nこの値を使って検索ができる。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"5\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E5\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E文字列のキーと値のハッシュ（\u003Cem\u003EMap\u003C\u002Fem\u003E）。\u003Cbr\u003E\nラベルと違って検索用途には使えない。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"6\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E6\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003EPod\u003C\u002Fem\u003E の仕様設定。\u003Cbr\u003E\n基本的に \u003Ccode\u003Epodman generate kube\u003C\u002Fcode\u003E からの自動生成にまかせておけばいい。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect3\"\u003E\n\u003Ch4 id=\"_ラベルとアノテーション\"\u003Eラベルとアノテーション\u003C\u002Fh4\u003E\n\u003Cdiv class=\"dlist\"\u003E\n\u003Cdiv class=\"title\"\u003Eラベルとアノテーションの違い\u003C\u002Fdiv\u003E\n\u003Cdl\u003E\n\u003Cdt class=\"hdlist1\"\u003Eラベル\u003C\u002Fdt\u003E\n\u003Cdd\u003E\n\u003Cp\u003E識別値として、検索やグルーピングに使う任意のハッシュを設定する。\u003C\u002Fp\u003E\n\u003C\u002Fdd\u003E\n\u003Cdt class=\"hdlist1\"\u003Eアノテーション\u003C\u002Fdt\u003E\n\u003Cdd\u003E\n\u003Cp\u003Eラベルとして使わない情報なら何でも。\u003Cbr\u003E\n外部ツールがここの情報を利用したりする。\u003C\u002Fp\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Cem\u003E例： Gitブランチ名、ハッシュ値、使用しているライブラリやツール&#8230;&#8203; など。\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdd\u003E\n\u003C\u002Fdl\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"admonitionblock caution\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"icon\"\u003E\n\u003Ci class=\"fa icon-caution\" title=\"Caution\" data-md-icon=\"local_fire_department\"\u003E\u003C\u002Fi\u003E\n\u003C\u002Ftd\u003E\n\u003Ctd class=\"content\"\u003E\n\u003Cdiv class=\"title\"\u003E値の型について\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Emetadata.labels\u003C\u002Fcode\u003E および \u003Ccode\u003Emetadata.annotations\u003C\u002Fcode\u003E で許容されるのは平坦なハッシュのみ。\u003Cbr\u003E\nうっかりネストさせてしまうと次のようなエラーが発生する。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Ewrong-metadata.yml\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-yaml\"\n    data-lang=\"yaml\"\u003Ekind: Pod\nmetadata:\n  name: wrong-metadata\n  annotations:\n    parent:\n      child: \"hoge\"\nspec: # ...\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock no-line-numbers command-line\"\u003E\n\u003Cdiv class=\"title\"\u003EError!\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    data-output=\"2-10\"\n    \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Epodman play kube wrong-metadata.yml\nError: unable to read YAML \"wrong-metadata.yml\" as Kube Pod:\n  error unmarshaling JSON:\n    json: cannot unmarshal object into Go struct field ObjectMeta.metadata.annotations of type string\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_生成された_kubernetes_yaml_ファイルの修正\"\u003E生成された \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルの修正\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E で自動生成したあと、下記のような事柄では手直しが必要かもしれない。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_不要な環境変数の削除\"\u003E不要な環境変数の削除\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Epodman generate\u003C\u002Fcode\u003E で生成された \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルには、コンテナに存在するすべての環境変数が含まれている。\u003Cbr\u003E\nつまり、コンテナにあらかじめ定義されている環境変数も含まれる。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003Eこのままだとコンテナ運用時のメンテナンスがめんどくさくなるので、不要な環境変数の指定については削除しておく。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_名前付き_volume_を利用したい\"\u003E名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E を利用したい\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Epodman play kube\u003C\u002Fcode\u003E でサポートされている \u003Cem\u003EVolume\u003C\u002Fem\u003E は \u003Ccode\u003EhostPath\u003C\u002Fcode\u003E と \u003Ccode\u003EpersistentVolumeClaim\u003C\u002Fcode\u003E の2つのみ（\u003Ca href=\"https:\u002F\u002Fdocs.podman.io\u002Fen\u002Fv3.3.1\u002Fmarkdown\u002Fpodman-play-kube.1.html\" target=\"_blank\" rel=\"noopener\"\u003E参考\u003C\u002Fa\u003E）。\u003Cbr\u003E\nこのうち \u003Cstrong\u003E\u003Ccode\u003EpersistentVolumeClaim\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E が名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E に対応する。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"title\"\u003EExample 5. Kubernetes YAML にて名前付き Volume を利用する書き方\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Ewith-named-volume.yml\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-yaml\"\n    data-lang=\"yaml\"\u003E# Kubernetes YAML\n---\nkind: Pod\nmetadata:\n  name: demo-nginx\n  creationTimestamp: \"2021-09-11T12:00:00Z\"\n  labels:\n    app: nginx\n\nspec:\n  containers:\n  - image: docker.io\u002Flibrary\u002Fnginx:1.21-alpine\n    name: some-nginx\n    ports:\n    - containerPort: 80\n      hostPort: 8080\n      protocol: TCP\n    volumeMounts:   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\n    - mountPath: \u002Fusr\u002Fshare\u002Fnginx\u002Fhtml\n      name: contents\n  volumes:\n  - name: contents\n    persistentVolumeClaim:    \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E\n      claimName: nginx-contents   \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"colist arabic\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003EPod\u003C\u002Fem\u003E において \u003Ccode\u003EpersistentVolumeClaim\u003C\u002Fcode\u003E は \u003Cem\u003EVolume\u003C\u002Fem\u003E として扱うため、このような書式となる。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E2\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E において \u003Ccode\u003EpersistentVolumeClaim\u003C\u002Fcode\u003E 型が名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E に相当する。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E3\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E の指定。存在しなければ新規作成される。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect2\"\u003E\n\u003Ch3 id=\"_別ファイルで値を定義したい\"\u003E別ファイルで値を定義したい\u003C\u002Fh3\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fja\u002Fdocs\u002Fconcepts\u002Fconfiguration\u002Fconfigmap\u002F\" target=\"_blank\" rel=\"noopener\"\u003E\u003Cem\u003EConfigMap\u003C\u002Fem\u003E\u003C\u002Fa\u003E を利用して環境変数に値を注入できる。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"admonitionblock warning\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd class=\"icon\"\u003E\n\u003Ci class=\"fa icon-warning\" title=\"Warning\" data-md-icon=\"warning\"\u003E\u003C\u002Fi\u003E\n\u003C\u002Ftd\u003E\n\u003Ctd class=\"content\"\u003E\n\u003Cem\u003EConfigMap\u003C\u002Fem\u003E は機密性や暗号化の機能をもたないので、パスワードなどの機密情報については \u003Cem\u003ESecret\u003C\u002Fem\u003E を使うべき。\u003Cbr\u003E\nただ、残念ながら \u003Ccode\u003Epodman play kube\u003C\u002Fcode\u003E では \u003Cem\u003ESecret\u003C\u002Fem\u003E が未実装。\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"exampleblock\"\u003E\n\u003Cdiv class=\"title\"\u003EExample 6. ConfigMap ファイルから値を注入する\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"content\"\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003EConfigMap の例\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-yaml\"\n    data-lang=\"yaml\"\u003E# ConfigMap\n# demo-nginx-configmap1.yml\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-config1   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\ndata:   \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E\n  NGINX_HOST: foobar.com  \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E\n  NGINX_PORT: 80          \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E\n\n# demo-nginx-configmap2.yml\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-config2   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\ndata:   \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E\n  template_dir: \u002Fetc\u002Fnginx\u002Ftemplates\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"colist arabic\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cstrong\u003E必須\u003C\u002Fstrong\u003E: 参照されるときに使われるキー。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E2\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E参照される値。文字列のキーと値のハッシュ（\u003Cem\u003EMap\u003C\u002Fem\u003E）を格納。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E3\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E環境変数として指定。後述する \u003Ccode\u003EenvFrom\u003C\u002Fcode\u003E から参照されることを想定している。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock\"\u003E\n\u003Cdiv class=\"title\"\u003Edemo-nginx.yml\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight \" \u003E\u003Ccode class=\"language-yaml\"\n    data-lang=\"yaml\"\u003E# Kubernetes YAML\n---\nkind: Pod\nmetadata:\n  name: demo-nginx\n  creationTimestamp: \"2021-09-11T12:00:00Z\"\n  labels:\n    app: nginx\nspec:\n  containers:\n  - image: docker.io\u002Flibrary\u002Fnginx:1.21-alpine\n    name: some-nginx\n    env:\n    - name: NGINX_ENVSUBST_TEMPLATE_DIR\n      valueFrom:  \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\n        configMapKeyRef:\n          name: nginx-config2 \u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(2)\u003C\u002Fb\u003E\n          key: template_dir   \u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(3)\u003C\u002Fb\u003E\n    envFrom:  \u003Ci class=\"conum\" data-value=\"4\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(4)\u003C\u002Fb\u003E\n    - configMapRef:\n        name: nginx-config1\n    ports:\n    - containerPort: 80\n      hostPort: 8080\n      protocol: TCP\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"colist arabic\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E環境変数の値について \u003Cem\u003EConfigMap\u003C\u002Fem\u003E を参照する。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"2\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E2\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E参照したい \u003Cem\u003EConfigMap\u003C\u002Fem\u003E ファイルの \u003Ccode\u003Emetadata.name\u003C\u002Fcode\u003E を指定。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"3\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E3\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E参照する \u003Ccode\u003Edata\u003C\u002Fcode\u003E のキーを指定。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"4\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E4\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003EConfigMap\u003C\u002Fem\u003E の \u003Ccode\u003Edata\u003C\u002Fcode\u003E をすべて環境変数として取り込みたい場合は \u003Ccode\u003EenvFrom\u003C\u002Fcode\u003E を利用する。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv \n    class=\"listingblock no-line-numbers command-line\"\u003E\n\u003Cdiv class=\"title\"\u003EConfigMapを利用して起動\u003C\u002Fdiv\u003E\n  \u003Cdiv class=\"content\"\u003E\n  \u003Cpre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    \u003E\u003Ccode class=\"language-bash\"\n    data-lang=\"bash\"\u003Epodman play kube demo-nginx.yml \\\n  --configmap demo-nginx-configmap1.yml \\   \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\n  --configmap demo-nginx-configmap2.yml     \u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E(1)\u003C\u002Fb\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"colist arabic\"\u003E\n\u003Ctable\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ci class=\"conum\" data-value=\"1\"\u003E\u003C\u002Fi\u003E\u003Cb\u003E1\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E--configmap\u003C\u002Fcode\u003E オプションは複数回指定できる。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_おわりに\"\u003Eおわりに\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"paragraph\"\u003E\n\u003Cp\u003E\u003Ccode\u003Epodman\u003C\u002Fcode\u003E で \u003Cem\u003EKubernetes YAML\u003C\u002Fem\u003E ファイルを自動生成できるので、使うだけなら簡単でうれしい。\u003Cbr\u003E\n名前付き \u003Cem\u003EVolume\u003C\u002Fem\u003E の設定は自動生成されなかったので、そこだけ注意しておく。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"sect1\"\u003E\n\u003Ch2 id=\"_参考\"\u003E参考\u003C\u002Fh2\u003E\n\u003Cdiv class=\"sectionbody\"\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cdiv class=\"title\"\u003EPodman\u003C\u002Fdiv\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.podman.io\u002Fen\u002Flatest\u002Fmarkdown\u002Fpodman-play-kube.1.html\" target=\"_blank\" rel=\"noopener\"\u003Epodman-play-kube(1) — Podman documentation\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.podman.io\u002Fen\u002Flatest\u002Fmarkdown\u002Fpodman-generate-kube.1.html\" target=\"_blank\" rel=\"noopener\"\u003Epodman-generate-kube(1) — Podman documentation\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cdiv class=\"title\"\u003EDocker Compose &#8594; Kubernetes YAML\u003C\u002Fdiv\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fbalagetech.com\u002Fconvert-docker-compose-services-to-pods\u002F\" target=\"_blank\" rel=\"noopener\"\u003EConvert docker-compose services to pods with Podman - Balage Tech blog\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fqiita.com\u002Fthirdpenguin\u002Fitems\u002Fc9e58c27e96f02b0a96d\" target=\"_blank\" rel=\"noopener\"\u003EPodman で Compose したかったらどうするの？ - Qiita\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cdiv class=\"title\"\u003EKubernetes YAML\u003C\u002Fdiv\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Freference\u002Fkubernetes-api\u002Fworkload-resources\u002Fpod-v1\u002F\" target=\"_blank\" rel=\"noopener\"\u003EPod | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fja\u002Fdocs\u002Fconcepts\u002Fconfiguration\u002Fconfigmap\u002F\" target=\"_blank\" rel=\"noopener\"\u003EConfigMap | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Ftasks\u002Finject-data-application\u002F_print\u002F\" target=\"_blank\" rel=\"noopener\"\u003EInject Data Into Applications | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fja\u002Fdocs\u002Fconcepts\u002Foverview\u002Fworking-with-objects\u002Flabels\u002F\" target=\"_blank\" rel=\"noopener\"\u003Eラベル(Labels)とセレクター(Selectors) | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fja\u002Fdocs\u002Fconcepts\u002Foverview\u002Fworking-with-objects\u002Fannotations\u002F\" target=\"_blank\" rel=\"noopener\"\u003Eアノテーション(Annotations) | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"ulist\"\u003E\n\u003Cdiv class=\"title\"\u003EKubernetes PersistentVolume\u003C\u002Fdiv\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkubernetes.io\u002Fja\u002Fdocs\u002Fconcepts\u002Fstorage\u002Fpersistent-volumes\u002F\" target=\"_blank\" rel=\"noopener\"\u003E永続ボリューム | Kubernetes\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fwww.netone.co.jp\u002Fknowledge-center\u002Fnetone-blog\u002F20191206-1\u002F\" target=\"_blank\" rel=\"noopener\"\u003EKubernetesのデータ永続化入門 | ネットワンシステムズ\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E",title:"podman で docker-compose の代わりに Kubernetes YAML を使ってみた",created_at:"2021-09-17",tags:["podman","kubernetes"],updated_at:"2021-09-28",author:"秋々すすき",description:a,revision:"1.1",revision_remark:"docker-compose 対応についての追記。"},navi:{next:{path:"\u002Fposts\u002Flinux_bash_completion",title:"bash の補完スクリプト（bash-completion）ファイルってどこに配置すればいいの？"},prev:{path:"\u002Fposts\u002Flinux_tmux_autostart",title:"SSH接続時に tmux を自動起動させる"}},currentPath:"https:\u002F\u002Fvlike-vlife.netlify.app\u002Fposts\u002Fpodman_kubernetes_yaml"}],fetch:{},mutations:a}}(void 0)));