{
  "filename": "template_converter_in_asciidoc.adoc",
  "rendered": [
    "<div id=\"toc\" class=\"toc\">",
    "<div id=\"toctitle\">目次</div>",
    "<ul class=\"sectlevel1\">",
    "<li><a href=\"#_動機\">動機🤔</a>",
    "<ul class=\"sectlevel2\">",
    "<li><a href=\"#_本記事でやったこと\">本記事でやったこと</a></li>",
    "</ul>",
    "</li>",
    "<li><a href=\"#_テンプレート\">テンプレート🥪</a>",
    "<ul class=\"sectlevel2\">",
    "<li><a href=\"#_jsテンプレートエンジン\">JSテンプレートエンジン</a></li>",
    "<li><a href=\"#_テンプレートの作成\">テンプレートの作成</a></li>",
    "</ul>",
    "</li>",
    "<li><a href=\"#_テンプレートを適用して出力\">テンプレートを適用して出力💻</a></li>",
    "<li><a href=\"#_おわりに\">おわりに😎</a></li>",
    "<li><a href=\"#_参考\">参考📖</a></li>",
    "</ul>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_動機\">動機🤔</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p><em>AsciiDoc</em> で <code>prism.js</code> の <a href=\"https://prismjs.com/plugins/command-line/\" target=\"_blank\" rel=\"noopener\">Command Line プラグイン</a> を使ってみたかった。<br>",
    "上記プラグインではカスタムデータ属性の指定が必要だが、標準の <code>Asciidoctor.js</code> では任意のカスタムデータ属性に対応していない。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>よって、<a href=\"https://asciidoctor-docs.netlify.app/asciidoctor.js/3.0/extend/converter/template-converter/\" target=\"_blank\" rel=\"noopener\">テンプレートコンバーター</a>を使ってカスタムデータ属性に対応したHTML出力をさせてみる。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>……やってみた結果としては、<a href=\"https://asciidoctor-docs.netlify.app/asciidoctor.js/current/extend/converter/custom-converter/\" target=\"_blank\" rel=\"noopener\">カスタムコンバーター</a>を使うほうがよさそうだった🥺。</p>",
    "</div>",
    "<table class=\"tableblock frame-all grid-all fit-content\">",
    "<caption class=\"title\">Table 1. 開発環境</caption>",
    "<colgroup>",
    "<col>",
    "<col>",
    "</colgroup>",
    "<thead>",
    "<tr>",
    "<th class=\"tableblock halign-left valign-top\">ツール</th>",
    "<th class=\"tableblock halign-left valign-top\">バージョン</th>",
    "</tr>",
    "</thead>",
    "<tbody>",
    "<tr>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Node</p></td>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">12.19.0</p></td>",
    "</tr>",
    "<tr>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">@asciidoctor/core</p></td>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">2.2.0</p></td>",
    "</tr>",
    "</tbody>",
    "</table>",
    "<div class=\"sect2\">",
    "<h3 id=\"_本記事でやったこと\">本記事でやったこと</h3>",
    "<div class=\"imageblock kroki\">",
    "<div class=\"content\">",
    "<img src=\"/_images/AsciidocTemplate-81204f62054826299fc0b98418b12c58d0d6699f.svg\" alt=\"AsciidocTemplate\">",
    "</div>",
    "</div>",
    "<div class=\"admonitionblock note\">",
    "<table>",
    "<tr>",
    "<td class=\"icon\">",
    "<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>",
    "</td>",
    "<td class=\"content\">",
    "<em>JavaScript</em> の関数でもテンプレート作成できるが、今回は割愛。",
    "</td>",
    "</tr>",
    "</table>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_テンプレート\">テンプレート🥪</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p>HTMLコードを生成するJSテンプレートエンジン用のソースファイルを指す。<br>",
    "<code>asciidoctor.js</code> の各ノード（<em>paragraph</em> ブロックとか <em>table</em> ブロックとか）ごとのHTML出力を、このテンプレートから生成されるHTMLコードで置き換える。</p>",
    "</div>",
    "<div class=\"dlist\">",
    "<dl>",
    "<dt class=\"hdlist1\"><span class=\"flex items-center text-green-500\"><span class=\"material-icons\">check</span>メリット</span></dt>",
    "<dd>",
    "<div class=\"ulist\">",
    "<ul>",
    "<li>",
    "<p>各ノードの出力をファイル単位で独立して記述できるので、上書きしたいノードに対してのみテンプレートを作成すればよい</p>",
    "</li>",
    "<li>",
    "<p>適用するファイルまたはディレクトリを変更するだけでHTML出力を変更できる</p>",
    "</li>",
    "</ul>",
    "</div>",
    "</dd>",
    "<dt class=\"hdlist1\"><span class=\"flex items-center text-red-500\"><span class=\"material-icons\">close</span>デメリット</span></dt>",
    "<dd>",
    "<div class=\"ulist\">",
    "<ul>",
    "<li>",
    "<p>テンプレートエンジンの使い方を学習する必要がある</p>",
    "</li>",
    "<li>",
    "<p>ブラウザ環境では使えない（はず）</p>",
    "</li>",
    "</ul>",
    "</div>",
    "</dd>",
    "</dl>",
    "</div>",
    "<div class=\"sect2\">",
    "<h3 id=\"_jsテンプレートエンジン\">JSテンプレートエンジン</h3>",
    "<div class=\"paragraph\">",
    "<p><code>Asciidoctor.js</code> がサポートするテンプレートエンジンには <code>pug</code> や <code>EJS</code> など<a href=\"https://asciidoctor-docs.netlify.app/asciidoctor.js/3.0/extend/converter/template-converter/#built-in-template-engines\" target=\"_blank\" rel=\"noopener\">いくつかある</a>。<br>",
    "今回はそのうちの <a href=\"https://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">nunjucks</a> を使ってみた。</p>",
    "</div>",
    "<div ",
    "    class=\"listingblock command-line no-line-numbers\">",
    "<div class=\"title\">nunjucksインストール</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight command-line\" data-user=\"user\"",
    "    data-host=\"local\"",
    "    ><code class=\"language-bash\"",
    "    data-lang=\"bash\">yarn add nunjucks</code></pre>",
    "  </div>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>ライブラリをインストールすれば、あとは自動的に <code>Asciidoctor.js</code> の方で読み込まれる。</p>",
    "</div>",
    "</div>",
    "<div class=\"sect2\">",
    "<h3 id=\"_テンプレートの作成\">テンプレートの作成</h3>",
    "<div class=\"olist arabic\">",
    "<ol class=\"arabic\">",
    "<li>",
    "<p>テンプレートを配置するディレクトリを作成（出力時に <code>template_dirs</code> で指定）</p>",
    "</li>",
    "<li>",
    "<p><strong>置き換えたいノード名と一致する名前でファイル作成</strong><br>",
    "ノード名の一覧は <a href=\"https://asciidoctor-docs.netlify.app/asciidoctor.js/3.0/extend/converter/template-converter/#naming-convention\">こちら</a> を参照。</p>",
    "<div class=\"admonitionblock note\">",
    "<table>",
    "<tr>",
    "<td class=\"icon\">",
    "<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>",
    "</td>",
    "<td class=\"content\">",
    "たとえば置き換えたいノード名が <code>listing</code> ならば、作成するテンプレートは <code>listing.njk</code> というように同じ名前にする。",
    "</td>",
    "</tr>",
    "</table>",
    "</div>",
    "</li>",
    "<li>",
    "<p>テンプレートのコードを書く</p>",
    "</li>",
    "</ol>",
    "</div>",
    "<hr>",
    "<div class=\"paragraph\">",
    "<p>ノード名とテンプレート名を同じにすることだけ注意すれば、あとはがんばってテンプレートを書くだけ。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>以下はその一例で、<code>prism.js</code> の <em>Command Line</em> プラグインに対応させるためにカスタムデータ属性の出力などを行っている。</p>",
    "</div>",
    "<details>",
    "<summary class=\"title\">テンプレートのサンプル</summary>",
    "<div class=\"content\">",
    "<div ",
    "    class=\"listingblock\">",
    "<div class=\"title\">listing.njk</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-markup\"",
    "    data-lang=\"markup\">{%- import \"macros/sourcecode.njk\" as func -%}",
    "",
    "&lt;div {{ func.roles(node) }}&gt;",
    "{% if node.getTitle() -%}",
    "  &lt;div class=\"title\"&gt;{{ node.getTitle() }}&lt;/div&gt;",
    "{%- endif %}",
    "  &lt;div class=\"content\"&gt;",
    "  {% if node.getStyle() === 'source' -%}",
    "    &lt;pre class=\"highlight {{ 'command-line' if node.getRoles().includes('command-line') -}}\" {{ func.customdata(node.getAttributes()) }}&gt;&lt;code {{ func.language(node) }}&gt;{{ node.getContent() | safe }}&lt;/code&gt;&lt;/pre&gt;",
    "  {% else -%}",
    "    &lt;pre {{- func.customdata(node.getAttributes()) }}&gt;{{ node.getContent() | safe }}&lt;/pre&gt;",
    "  {%- endif -%}",
    "  &lt;/div&gt;",
    "&lt;/div&gt;</code></pre>",
    "  </div>",
    "</div>",
    "<div ",
    "    class=\"listingblock\">",
    "<div class=\"title\">macros/sourcecode.njk (マクロ用ソース)</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-markup\"",
    "    data-lang=\"markup\">{# set id and class attributes #}",
    "{%- macro roles(node) -%}",
    "  {% if node.getId() -%}",
    "    id=\"{{ node.getId() }}\"",
    "  {%- endif %}",
    "    class=\"{{ ['listingblock', node.getRole()] | join(' ') | trim }}\"",
    "{%- endmacro -%}",
    "",
    "{# &lt;code&gt; language class and attribute #}",
    "{%- macro language(node) -%}",
    "  {%- set lang = node.getAttribute('language') -%}",
    "  {%- if lang -%}",
    "    class=\"language-{{ lang }}\"",
    "    data-lang=\"{{ lang }}\"",
    "  {%- endif -%}",
    "{%- endmacro -%}",
    "",
    "{# custom data attributes #}",
    "{% macro customdata(attrs) -%}",
    "  {%- set regExp = r/^data-.*/ -%}",
    "  {% for key, value in attrs -%}",
    "    {% if regExp.test(key) -%}",
    "      {{ key }}=\"{{ value }}\"",
    "    {% endif %}",
    "  {%- endfor %}",
    "{%- endmacro %}</code></pre>",
    "  </div>",
    "</div>",
    "<div class=\"admonitionblock note\">",
    "<table>",
    "<tr>",
    "<td class=\"icon\">",
    "<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>",
    "</td>",
    "<td class=\"content\">",
    "<div class=\"title\">safe フィルター</div>",
    "<code>nunjucks</code> では文字列を自動エスケープするが、エスケープ処理は <code>asciidoctor</code> で行いたいので停止しておく。",
    "</td>",
    "</tr>",
    "</table>",
    "</div>",
    "</div>",
    "</details>",
    "<div class=\"admonitionblock tip\">",
    "<table>",
    "<tr>",
    "<td class=\"icon\">",
    "<i class=\"fa icon-tip\" title=\"Tip\" data-md-icon=\"emoji_objects\"></i>",
    "</td>",
    "<td class=\"content\">",
    "<div class=\"title\">node オブジェクト</div>",
    "テンプレートには <a href=\"https://asciidoctor.github.io/asciidoctor.js/master/#abstractnode\" target=\"_blank\" rel=\"noopener\">AbstractNode</a> 型の <code>node</code> オブジェクトが引数として渡される。<br>",
    "テンプレート内ではこの <code>node</code> からノードのクラスや属性、テキストなどを参照する。",
    "</td>",
    "</tr>",
    "</table>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_テンプレートを適用して出力\">テンプレートを適用して出力💻</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p>CLIまたはAPIにおいて、先ほど作成したテンプレートファイルのあるディレクトリを <code>template_dirs</code> オプションで指定して呼び出す。</p>",
    "</div>",
    "<div ",
    "    class=\"listingblock\">",
    "<div class=\"title\">main.ts</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-ts\"",
    "    data-lang=\"ts\">import Processor from '@asciidoctor/core'",
    "",
    "const processor = Processor()",
    "const doc = processor.loadFile(",
    "  'path/to/adoc_file', { template_dirs: ['path/to/template/dir'] })",
    "",
    "console.log(doc.convert())</code></pre>",
    "  </div>",
    "</div>",
    "<div class=\"imageblock kroki\">",
    "<div class=\"content\">",
    "<img src=\"/_images/templateフローチャート-bba195fe8b7bb903c6c9dce23170e5c430f7c555.svg\" alt=\"templateフローチャート\">",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_おわりに\">おわりに😎</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p>テンプレートコンバーターの使い方についてあまり情報がなくて戦々恐々としてたけど、やってみたら簡単だった。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>ただテンプレートエンジンの使い方も学習する必要があるのが難点。<br>",
    "<em>JavaScript</em> コードで完結する<a href=\"https://asciidoctor-docs.netlify.app/asciidoctor.js/current/extend/converter/custom-converter/\" target=\"_blank\" rel=\"noopener\">カスタムコンバーター</a>のほうを使ったほうがいいかもしれない。</p>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_参考\">参考📖</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"ulist\">",
    "<ul>",
    "<li>",
    "<p><a href=\"https://asciidoctor-docs.netlify.app/asciidoctor.js/3.0/extend/converter/template-converter/\" target=\"_blank\" rel=\"noopener\">Template Converter | The Docks @ Asciidoctor</a></p>",
    "</li>",
    "<li>",
    "<p><a href=\"https://mozilla.github.io/nunjucks/getting-started.html\" target=\"_blank\" rel=\"noopener\">Nunjucks</a></p>",
    "</li>",
    "</ul>",
    "</div>",
    "</div>",
    "</div>"
  ],
  "title": "AsciiDoc のテンプレートコンバーターを使ってHTML出力をカスタマイズする",
  "created_at": "2020-11-28",
  "tags": [
    "asciidoc",
    "asciidoctor.js",
    "nunjucks"
  ],
  "updated_at": "2020-11-28",
  "author": "秋々すすき",
  "revision": "1.0"
}