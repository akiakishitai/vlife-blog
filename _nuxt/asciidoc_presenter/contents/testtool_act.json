{"filename":"testtool_act.adoc","rendered":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">目次</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_はじめに\">はじめに</a></li>\n<li><a href=\"#_act_とは\">act とは🚀</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_インストール\">インストール</a></li>\n</ul>\n</li>\n<li><a href=\"#_使い方\">使い方🍣</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_コマンドの一例\">コマンドの一例</a></li>\n<li><a href=\"#_act_の設定ファイル\">act の設定ファイル</a></li>\n<li><a href=\"#_dockerコンテナ内で実行したい\">Dockerコンテナ内で実行したい</a></li>\n</ul>\n</li>\n<li><a href=\"#_トラブルシューティング\">トラブルシューティング🔨</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_コマンドがない\">○✕コマンドがない</a></li>\n<li><a href=\"#_if文が期待する動作をしない\">if文が期待する動作をしない</a></li>\n</ul>\n</li>\n<li><a href=\"#_おわりに\">おわりに🐾</a></li>\n<li><a href=\"#_参考\">参考</a></li>\n</ul>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_はじめに\">はじめに</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://github.co.jp/features/actions\"><em>GitHub Actions</em></a> は便利。<br>\nだけど書いたワークフローが実際どう動くか試すため、実際に GitHub リポジトリへプッシュやマージしてコミット履歴を汚くするのはつらい。</p>\n</div>\n<div class=\"paragraph\">\n<p>できればローカル上で <em>GitHub Actions</em> をテストしたい！</p>\n</div>\n<div class=\"paragraph\">\n<p>ということで <a href=\"https://github.com/nektos/act\">act</a> を導入してローカル上でテストできるようにする。</p>\n</div>\n<table class=\"tableblock frame-all grid-all stretch\">\n<caption class=\"title\">Table 1. 環境</caption>\n<colgroup>\n<col style=\"width: 50%;\">\n<col style=\"width: 50%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">App</th>\n<th class=\"tableblock halign-left valign-top\">Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Windows10 Pro</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">1903</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Docker Desktop</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">2.4.0.0</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">act</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0.2.16</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_act_とは\">act とは🚀</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><em>GitHub Actions</em> をローカルで実行するコマンドツール。<br>\n利用するには <em>Docker</em> が必要。</p>\n</div>\n<div class=\"paragraph\">\n<p>プロジェクト配下の <code>.github/workflows/</code> を読み込み、<em>Docker API</em> を使って必要なイメージをプル・ビルドする。<br>\nそして各アクションはコンテナ内で実行される。</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">特徴</div>\n<ul>\n<li>\n<p>環境変数やファイルシステムは GitHub が提供しているものに対応</p>\n</li>\n<li>\n<p><em>GitHub Actions</em> ワークフローをタスクランナー代わりとして使用可能</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>Makefile</code> の代替</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>GitHub が提供しているコマンドツールについてデフォルトでは一部のみ対応</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>すべてのコマンドツールに対応させると Docker イメージのサイズが巨大マックス</p>\n</li>\n<li>\n<p>全部込みこみのイメージとして <a href=\"https://hub.docker.com/r/nektos/act-environments-ubuntu/tags\">nektos/act-environments-ubuntu:18.04</a> が用意されているが 18GB 超え……</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Rnners は ubuntu のみ対応</p>\n<table class=\"tableblock frame-all grid-all stretch\">\n<colgroup>\n<col style=\"width: 50%;\">\n<col style=\"width: 50%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">GitHub Runner</th>\n<th class=\"tableblock halign-left valign-top\">actが使用するDockerイメージ</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">ubuntu-latest</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">node:12.6-buster-slim</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">ubuntu-18.04</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">node:12.6-buster-slim</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">ubuntu-16.04</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">node:12.6-stretch-slim</p></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_インストール\">インストール</h3>\n<div class=\"paragraph\">\n<p>今回はDebian ベースの Docker コンテナ内で使うのでシェルスクリプトからインストールした。<br>\n他ディストリビューションのインストール方法は <a href=\"https://github.com/nektos/act#installation\">公式のREADME</a> を参照。</p>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">rootユーザーでインストール</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"root\"\n    data-host=\"container\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">curl https://raw.githubusercontent.com/nektos/act/master/install.sh | bash</code></pre>\n  </div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_使い方\">使い方🍣</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><code>act [event name to run] [flags]</code> で実行する。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_コマンドの一例\">コマンドの一例</h3>\n<div class=\"paragraph\">\n<p>他コマンドオプションについては <code>act -h</code> または <a href=\"https://github.com/nektos/act/blob/master/README.md\">README</a> を参照。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. ワークフローの確認</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    data-output=\"3,6\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\"># アクション一覧\nact -l\n\n# 特定イベントのアクション一覧\nact pull_request -l\n\n# DryRun\nact -n</code></pre>\n  </div>\n</div>\n</div>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 2. テストを実行</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    data-output=\"3,6,9,12\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\"># テスト実行\nact\n\n# コンテナを再利用してテスト\nact -r\n\n# イベントを指定してテスト\nact workflow_dispatch\n\n# ジョブ名を指定してテスト\nact -j JOB_NAME\n\n# Secret変数を指定してテスト\nact -s MY_SECRET=something</code></pre>\n  </div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_act_の設定ファイル\">act の設定ファイル</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>コマンドオプション</p>\n<div class=\"paragraph\">\n<p>オプションは <code>./.actrc</code> または <code>~/.actrc</code> 設定ファイルに記述しておくことができる。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 3. <code>.actrc</code> ファイルの例</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-ini\"\n    data-lang=\"ini\"># runnerイメージを変更\n-P ubuntu-18.04=node:12-buster</code></pre>\n  </div>\n</div>\n</div>\n</div>\n</li>\n<li>\n<p>環境変数</p>\n<div class=\"paragraph\">\n<p>環境変数はデフォルトで <code>.env</code> ファイルを参照する。<br>\n別ファイルで参照させたいときは <code>--env-file &lt;ENV_FILE&gt;</code> オプションを追加。</p>\n</div>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_dockerコンテナ内で実行したい\">Dockerコンテナ内で実行したい</h3>\n<div class=\"paragraph\">\n<p>Docker コンテナ内でやる場合は <em>DooD（Docker outside of Docker）</em> のように、ホスト側の <code>docker.sock</code> をバインドしておく。<br>\n（コンテナ内でのdockerパッケージは不要）</p>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">docker.sockをバインドしておく</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">docker run --rm -it \\\n    --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \\\n    debian:buster-slim \\\n    bash</code></pre>\n  </div>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-tip\" title=\"Tip\" data-md-icon=\"emoji_objects\"></i>\n</td>\n<td class=\"content\">\n<div class=\"title\">コンテナユーザーが <code>root</code> 以外</div>\n<div class=\"paragraph\">\n<p><code>docker.sock</code> のパーミッションのため、コンテナ起動時に <code>root</code> グループへ所属させておく（<code>--group-add 0</code>）。<br>\nセキュリティは低下するが、開発用でしか使わないなら許容できる。</p>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">docker run --group-add 0 ...</code></pre>\n  </div>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock important\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-important\" title=\"Important\" data-md-icon=\"report\"></i>\n</td>\n<td class=\"content\">\n<div class=\"title\">Windowsホストの場合</div>\n<div class=\"paragraph\">\n<p>バインドした <code>/var/run/docker.sock</code> は所有者 <code>root:root</code> でパーミッションが <code>755</code> になっている。<br>\nよってコンテナ内のユーザーが <code>root</code> 以外の場合はパーミッションを修正する必要がある。</p>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">Windowsホストからパーミッションを修正</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-prompt=\"PS &gt;\"\n    ><code class=\"language-powershell\"\n    data-lang=\"powershell\">docker exec CONTAINER_NAME chmod 660 /var/run/docker.sock</code></pre>\n  </div>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_トラブルシューティング\">トラブルシューティング🔨</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_コマンドがない\">○✕コマンドがない</h3>\n<div class=\"paragraph\">\n<p><code>act</code> がデフォルトで使う Runner のイメージ（<em>node:12.6-buster-slim</em>）ではインストールされているコマンドが少ないため。<br>\n<code>git</code> コマンドもない。</p>\n</div>\n<div class=\"paragraph\">\n<p>代替として、一通りのコマンドが揃っている <em>node:12-buster</em> イメージを使うといい。</p>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">act -P ubuntu-18.04=node:12-buster</code></pre>\n  </div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_if文が期待する動作をしない\">if文が期待する動作をしない</h3>\n<div class=\"paragraph\">\n<p>条件式を <code>${{ }}</code> で囲むといい。<br>\n実際の <em>GitHub Actions</em> では省略しても大丈夫だが、<code>act</code> で省略すると判定してくれない場合があるっぽい。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 4. <code>act</code> で動作するif文の例</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-yaml\"\n    data-lang=\"yaml\">- name: install\n  if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}\n  run: yarn install</code></pre>\n  </div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_おわりに\">おわりに🐾</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><code>act</code> により <em>GitHub Actions</em> のテストと修正が簡単にできるようになったので満足。<br>\nただし、実際にGitHubリポジトリで動作させるとバグが見つかる場合があるので注意する。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\">参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://github.com/nektos/act\">nektos/act</a></p>\n</li>\n<li>\n<p><a href=\"https://dev.classmethod.jp/articles/act-for-github-actions-local-execution-tool/\">GitHub Actions のローカル実行ツール「act」を使う事で CI/CD コンフィグとローカルでのタスクランナーを 1 つにする | Developers.IO</a></p>\n</li>\n<li>\n<p><a href=\"https://tomgregory.com/running-docker-in-docker-on-windows/\">Running Docker in Docker on Windows (Linux containers) – Tom Gregory</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","title":"GitHub Actions を act でローカルテストする","created_at":"2020-11-02","tags":["github","github-actions","act"],"updated_at":"2020-11-19","author":"秋々すすき","revision":"1.2"}