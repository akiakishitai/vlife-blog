{"filename":"nuxt_routing_extend.adoc","rendered":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">目次</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_はじめに\">はじめに🐕</a></li>\n<li><a href=\"#_router_extendroutes_プロパティ\"><code>router.extendRoutes</code> プロパティ🛰️</a></li>\n<li><a href=\"#_ルーティング拡張の設定例\">ルーティング拡張の設定例🧪</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_ルートを複数設定するとき\">ルートを複数設定するとき</a></li>\n<li><a href=\"#_リダイレクトさせたいとき\">リダイレクトさせたいとき</a></li>\n<li><a href=\"#_ルートコンポーネントにプロパティを渡す\">ルートコンポーネントにプロパティを渡す</a></li>\n<li><a href=\"#_meta_タグを設定したいとき\"><code>meta</code> タグを設定したいとき</a></li>\n</ul>\n</li>\n<li><a href=\"#_おわりに\">おわりに😎</a></li>\n<li><a href=\"#_参考\">参考📖</a></li>\n</ul>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_はじめに\">はじめに🐕</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><em>Nuxt</em> では通常、ルーティングはディレクトリ構造から自動的に算出される。<br>\n一方で、ディレクトリ構造によらない独自のルーティングを手動で追加したいときもある（リダイレクト処理だけしたいときや<a href=\"https://router.vuejs.org/ja/guide/essentials/redirect-and-alias.html#%E3%82%A8%E3%82%A4%E3%83%AA%E3%82%A2%E3%82%B9\" target=\"_blank\" rel=\"noopener\">エイリアス</a>を利用したいときなど）。</p>\n</div>\n<div class=\"paragraph\">\n<p>そのようなルーティングを拡張するための方法として、<code>nuxt.config.js</code> ファイル内で <a href=\"https://ja.nuxtjs.org/docs/2.x/configuration-glossary/configuration-router/#extendroutes\" target=\"_blank\" rel=\"noopener\"><code>router.extendRoutes</code></a> プロパティを使う方法について説明する。</p>\n</div>\n<table class=\"tableblock frame-all grid-all fit-content\">\n<caption class=\"title\">Table 1. 環境</caption>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">App</th>\n<th class=\"tableblock halign-left valign-top\">Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Nuxt.js</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">2.14.12</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_router_extendroutes_プロパティ\"><a href=\"https://ja.nuxtjs.org/docs/2.x/configuration-glossary/configuration-router/#extendroutes\" target=\"_blank\" rel=\"noopener\"><code>router.extendRoutes</code></a> プロパティ🛰️</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><code>nuxt.config.js</code> ファイルの <code>route</code> プロパティにおける <a href=\"https://ja.nuxtjs.org/docs/2.x/configuration-glossary/configuration-router/#extendroutes\" target=\"_blank\" rel=\"noopener\"><code>extendRoutes</code></a> からルーティングを追加できる。<br>\n下記は設定の一例。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. nuxt.config.js</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-js\"\n    data-lang=\"js\">import { sortRoutes } from '@nuxt/utils'\n\nexport default {\n  router: {\n    extendRoutes(routes, resolve) {\n      routes.push({\n        path: '/blog/page/:id',   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n        component: resolve(__dirname, 'pages/blog/index.vue'),   <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n        name: 'blog-page-id',     <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n      })\n\n      sortRoutes(routes)  <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>\n    },\n  },\n}</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>追加するルートパスを指定。<br>\n例では動的ルーティングを追加している。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>ルートパスに対応するコンポーネントのファイルを指定。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>（オプション）ルートの識別名となる任意の値。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>\n<td>（オプション）ルートをソートしている。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>\n</td>\n<td class=\"content\">\n要は <a href=\"https://router.vuejs.org/ja/\" target=\"_blank\" rel=\"noopener\"><code>vue-router</code></a> の設定を行っている。スキーマなどの詳細はそちらを参照。\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-tip\" title=\"Tip\" data-md-icon=\"emoji_objects\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>上記例では <code>pages/blog/index.vue</code> ファイルを指定しているため、<code>/blog</code> パスと <code>/blog/page/:id</code> パスとも有効かつ同一コンポーネントを利用している。</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_ルーティング拡張の設定例\">ルーティング拡張の設定例🧪</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><code>extendsRoutes</code> の設定方法については <a href=\"https://router.vuejs.org/ja/\" target=\"_blank\" rel=\"noopener\">Vue Router</a> のガイドを参考にやればいい。<br>\n以下ではそのうちのいくつかをピックアップ……というか個人的なメモ。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_ルートを複数設定するとき\">ルートを複数設定するとき</h3>\n<div class=\"paragraph\">\n<p><code>routes.push()</code> の引数にルートの設定オブジェクトを複数指定できる。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 2. ルートの設定オブジェクトを複数指定</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n<div class=\"title\">nuxt.config.js</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-js\"\n    data-lang=\"js\">export default {\n  router: {\n    extendRoutes(routes, resolve) {\n      routes.push(\n        {\n          // 1つ目のルート設定\n        },\n        {\n          // 2つ目のルート設定\n        },\n        {\n          // ...\n        }\n      )\n    },\n  },\n}</code></pre>\n  </div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_リダイレクトさせたいとき\">リダイレクトさせたいとき</h3>\n<div class=\"paragraph\">\n<p><code>extendRoutes</code> プロパティにて、ある <em>URL</em> でリダイレクトさせたい場合は次のように記述すればいい。</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>\n</td>\n<td class=\"content\">\n<div class=\"title\">参考</div>\n<a href=\"https://router.vuejs.org/ja/guide/essentials/redirect-and-alias.html\" target=\"_blank\" rel=\"noopener\">リダイレクトとエイリアス | Vue Router</a>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 3. /from &#8594; /to へとリダイレクトさせたい場合</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n<div class=\"title\">nuxt.config.js</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-js\"\n    data-lang=\"js\">export default {\n  router: {\n    extendRoutes(routes, resolve) {\n      routes.push({\n        path: '/from',    <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n        redirect: '/to'   <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n      })\n    },\n  },\n}</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>リダイレクトの対象となる<strong>元の <em>URL</em> パス</strong>を指定。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td><strong>リダイレクト先</strong>の <em>URL</em> パスを指定。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_ルートコンポーネントにプロパティを渡す\">ルートコンポーネントにプロパティを渡す</h3>\n<div class=\"paragraph\">\n<p>ルートコンポーネントに対して <code>props</code> を渡すこともできる。<br>\n単体テストをしやすくしたり拡張ルーティングか否かを判定したりするのに便利そう。</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>\n</td>\n<td class=\"content\">\n<div class=\"title\">参考</div>\n<a href=\"https://router.vuejs.org/ja/guide/essentials/passing-props.html\" target=\"_blank\" rel=\"noopener\">ルートコンポーネントにプロパティを渡す | Vue Router</a>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 4. propsを渡す</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n<div class=\"title\">nuxt.config.js</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-js\"\n    data-lang=\"js\">export default {\n  router: {\n    extendRoutes(routes, resolve) {\n      routes.push({\n        path: '/sample/:slug',\n        component: resolve(__dirname, 'pages/sample.vue'),\n        props: { isExtendRoute: true, userId: 123 }   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n      })\n    },\n  },\n}</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>この例では <code>isExtendRoute</code> プロパティと <code>userId</code> プロパティを渡している。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-tip\" title=\"Tip\" data-md-icon=\"emoji_objects\"></i>\n</td>\n<td class=\"content\">\nこの <code>props</code> にはプロパティの値を返す <code>Function</code> オブジェクトを渡すこともできる（<a href=\"https://router.vuejs.org/ja/guide/essentials/passing-props.html#function-%E3%83%A2%E3%83%BC%E3%83%89\" target=\"_blank\" rel=\"noopener\">参考</a>）。\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_meta_タグを設定したいとき\"><code>meta</code> タグを設定したいとき</h3>\n<div class=\"paragraph\">\n<p><em>HTML</em> のヘッダ情報を表す <code>MetaInfo</code> オブジェクトをルートコンポーネントに渡し、その値を <code>Vue</code> インスタンスの <code>head()</code> メソッドで返すようにすればいい。</p>\n</div>\n<div class=\"paragraph\">\n<p>とはいえ <code>.vue</code> ファイル内で設定したほうが素直でよさそうなので、使い所は少ないかも。<br>\n特定の <em>URL</em> で <code>canonical</code> タグや <code>noindex</code> タグを付けたいときに使えそう。</p>\n</div>\n<div class=\"admonitionblock caution\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-caution\" title=\"Caution\" data-md-icon=\"local_fire_department\"></i>\n</td>\n<td class=\"content\">\n<code>meta</code> プロパティが指定できるので直接 <em>HTML</em> の <code>&lt;meta&gt;</code> 要素として設定できそうだが<strong>できない</strong>。<br>\nこの <code>meta</code> プロパティはあくまで <code>vue-router</code> の<a href=\"https://router.vuejs.org/ja/guide/advanced/meta.html\" target=\"_blank\" rel=\"noopener\">ルートメタフィールド</a>でしかなく、<em>HTML</em> の要素とは無関係。\n</td>\n</tr>\n</table>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 5. metaタグを定義して渡す</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n<div class=\"title\">nuxt.config.js</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-js\"\n    data-lang=\"js\">export default {\n  router: {\n    extendRoutes(routes, resolve) {\n      routes.push({\n        path: '/sample/page/:id',\n        component: resolve(__dirname, 'pages/sample.vue'),\n\n        /** @return {{metaInfo: import('vue-meta').MetaInfo}} */\n        props: (route) =&gt; {   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n          return {\n            metaInfo: {   <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n              title: `${route.params.id}ページ目`,\n              meta: [{ name: 'robots', content: 'noindex' }],   <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n            },\n          }\n        },\n\n        // meta: { ... }   <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>\n      })\n    },\n  },\n}</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><code>&lt;head&gt;</code> 要素を返す関数を定義。この返り値がルートコンポーネントに <code>props</code> として渡される。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>対象のプロパティに渡す <code>MetaInfo</code> オブジェクトを定義。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td><code>meta</code> タグの設定。例では <code>noindex</code> メタタグを設定している。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>\n<td><code>vue-router</code> のルートメタフィールド。<em>HTML</em> の <code>&lt;meta&gt;</code> 要素とは無関係なので今回は使用しない。</td>\n</tr>\n</table>\n</div>\n<div \n    class=\"listingblock\">\n<div class=\"title\">pages/sample.vue</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-ts\"\n    data-lang=\"ts\">&lt;script lang=\"ts\"&gt;\nimport { Component, Prop, Vue } from 'nuxt-property-decorator'\nimport { MetaInfo } from 'vue-meta'\n\n@Component\nexport default class Sample extends Vue {\n  @Prop({ required: false }) metaInfo?: MetaInfo  <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n\n  head(): MetaInfo {  <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n    return this.metaInfo != null\n      ? this.metaInfo\n      : { title: 'Sample page' }\n  }\n}\n&lt;/script&gt;</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><code>&lt;head&gt;</code> 要素を受け取るプロパティ。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td><code>&lt;head&gt;</code> 要素を定義するメソッド。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_おわりに\">おわりに😎</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><em>Nuxt</em> はディレクトリ構造からルーティングしてるから「カスタマイズしたいときは <em>hook</em> とか使わないといけないのかなー」と思ってたけど、簡単に独自設定もできる仕組みだった。</p>\n</div>\n<div class=\"paragraph\">\n<p>あんまり頻繁に使うものでもないけど、覚えておくとちょっと幸せになれそう。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\">参考📖</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://ja.nuxtjs.org/docs/2.x/features/file-system-routing\" target=\"_blank\" rel=\"noopener\">ファイルシステムに基づくルーティング - NuxtJS</a></p>\n</li>\n<li>\n<p><a href=\"https://router.vuejs.org/ja/\" target=\"_blank\" rel=\"noopener\">Vue Router</a></p>\n</li>\n<li>\n<p><a href=\"https://ti-tomo-knowledge.hatenablog.com/entry/2020/06/13/213603\" target=\"_blank\" rel=\"noopener\">Nuxtのrouterやmetaを自由にカスタマイズしたい - 親バカエンジニアのナレッジ帳</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","title":"Nuxtで独自のルーティングを追加・拡張する","created_at":"2021-02-22","tags":["nuxt.js","routing"],"updated_at":"2021-02-22","author":"秋々すすき","revision":"1.0"}