{
  "filename": "nuxt_detect_props_changes.adoc",
  "rendered": [
    "<div id=\"toc\" class=\"toc\">",
    "<div id=\"toctitle\">目次</div>",
    "<ul class=\"sectlevel1\">",
    "<li><a href=\"#_はじめに\">はじめに🥯</a></li>",
    "<li><a href=\"#_nuxtvue_における変更検出の基本\"><em>Nuxt（Vue）</em> における変更検出の基本📝</a></li>",
    "<li><a href=\"#_props_のオブジェクトデータの変更を検出する\"><code>props</code> のオブジェクトデータの変更を検出する🔍</a>",
    "<ul class=\"sectlevel2\">",
    "<li><a href=\"#_監視プロパティwatchで変更を検出する\">監視プロパティ（<code>watch</code>）で変更を検出する</a></li>",
    "</ul>",
    "</li>",
    "<li><a href=\"#_おわりに\">おわりに😎</a></li>",
    "<li><a href=\"#_参考\">参考📖</a></li>",
    "</ul>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_はじめに\">はじめに🥯</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p>親コンポーネントから渡されたプロパティ（<code>props</code>）のデータが変更されたとき、それを検出してビューを更新したい。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p><code>string</code> 型や <code>number</code> 型のデータならばなんの手間もいらず変更を検出してくれるが、オブジェクトや配列データでは一手間が必要になってくる。<br>",
    "その一手間について記事にしてみた。</p>",
    "</div>",
    "<table class=\"tableblock frame-all grid-all fit-content\">",
    "<caption class=\"title\">Table 1. 環境</caption>",
    "<colgroup>",
    "<col>",
    "<col>",
    "</colgroup>",
    "<thead>",
    "<tr>",
    "<th class=\"tableblock halign-left valign-top\">App</th>",
    "<th class=\"tableblock halign-left valign-top\">Version</th>",
    "</tr>",
    "</thead>",
    "<tbody>",
    "<tr>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Nuxt.js</p></td>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">2.14.12</p></td>",
    "</tr>",
    "</tbody>",
    "</table>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_nuxtvue_における変更検出の基本\"><em>Nuxt（Vue）</em> における変更検出の基本📝</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p><a href=\"https://jp.vuejs.org/v2/guide/reactivity.html\" target=\"_blank\" rel=\"noopener\"><em>Vue</em> 公式のドキュメント</a>に書いてある通り。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>全てのコンポーネントには対応するウォッチャ（<em>watcher</em>）があり、コンポーネントのデータが変更されると <code>setter</code> がこのウォッチャに通知する。<br>",
    "そして通知を受け取ったウォッチャからコンポーネントの再描画が行われる。</p>",
    "</div>",
    "<div class=\"imageblock kroki\">",
    "<div class=\"content\">",
    "<img src=\"_images/watcher-d09e279c897756d45dfc4c85ca7d9b964d9f1762.svg\" alt=\"watcher\">",
    "</div>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>このデータ変更を検出させるために注意すべきなのが</p>",
    "</div>",
    "<div class=\"ulist\">",
    "<ul>",
    "<li>",
    "<p>オブジェクトデータの変更</p>",
    "</li>",
    "<li>",
    "<p>配列データの変更</p>",
    "</li>",
    "<li>",
    "<p>リアクティブなプロパティ</p>",
    "</li>",
    "<li>",
    "<p>DOM操作をしたいとき</p>",
    "</li>",
    "</ul>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>となる（詳細は<a href=\"https://jp.vuejs.org/v2/guide/reactivity.html\" target=\"_blank\" rel=\"noopener\">公式のドキュメント</a>や参考リンクを参照）。</p>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_props_のオブジェクトデータの変更を検出する\"><code>props</code> のオブジェクトデータの変更を検出する🔍</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p>今回つまったのは、親コンポーネントから <code>props</code> オプションで渡されたオブジェクトデータの変更を検出する方法について。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>検出可能にするには、<a href=\"https://jp.vuejs.org/v2/guide/reactivity.html#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E9%96%A2%E3%81%97%E3%81%A6\" target=\"_blank\" rel=\"noopener\">ドキュメント</a>より</p>",
    "</div>",
    "<div class=\"olist arabic\">",
    "<ol class=\"arabic\">",
    "<li>",
    "<p>親コンポーネントにおいてプロパティ値変更に <code>vm.$set</code> インスタンスメソッドを使う</p>",
    "</li>",
    "<li>",
    "<p>親コンポーネントにおいて新しいオブジェクトとして生成し直す</p>",
    "</li>",
    "</ol>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>という方法が考えられるが、いちいち親コンポーネントで上記のことを気にかけるのが面倒くさい。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>よって今回は<strong>子コンポーネント</strong>において、<code>watch</code> オプションを使って <code>props</code> のオブジェクトを監視させる。</p>",
    "</div>",
    "<div class=\"sect2\">",
    "<h3 id=\"_監視プロパティwatchで変更を検出する\">監視プロパティ（<code>watch</code>）で変更を検出する</h3>",
    "<div class=\"paragraph\">",
    "<p><code>watch</code> オプションで <code>props</code> のデータを監視し、変更に対して反応させる。<br>",
    "下記の例では <a href=\"https://github.com/nuxt-community/nuxt-property-decorator\" target=\"_blank\" rel=\"noopener\">nuxt-property-decorator</a> ライブラリを利用しているので、代わりに <code>@Watch</code> デコレータを利用している。</p>",
    "</div>",
    "<div class=\"exampleblock\">",
    "<div class=\"title\">Example 1. オブジェクトのプロパティを監視して変更を検出する</div>",
    "<div class=\"content\">",
    "<div ",
    "    class=\"listingblock\">",
    "",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" data-line=\"13-16\"",
    "    ><code class=\"language-ts\"",
    "    data-lang=\"ts\">&lt;script lang=\"ts\"&gt;",
    "import { Component, Prop, Vue, Watch } from 'nuxt-property-decorator'",
    "",
    "@Component",
    "export default class InputSearch extends Vue {",
    "  /** 入力値 */",
    "  message = ''",
    "",
    "  /** URLクエリパラメータ */",
    "  @Prop({ required: true, default: {} }) query!: Record&lt;'tags', string&gt;",
    "",
    "  /** `query.tags` プロパティの変更を監視 */",
    "  @Watch('query.tags', { immediate: true })   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b> <i class=\"conum\" data-value=\"2\"></i><b>(2)</b> <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>",
    "  onUpdateQueryTags() {   <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>",
    "    this.message = this.query.tags?.toString() ?? ''",
    "  }",
    "}",
    "&lt;/script&gt;</code></pre>",
    "  </div>",
    "</div>",
    "<div class=\"colist arabic\">",
    "<table>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>",
    "<td><code>watch</code> オプションの代わりに <code>@Watch</code> デコレータを利用。</td>",
    "</tr>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>",
    "<td>オブジェクトのプロパティを指定（ここでは <code>query</code> オブジェクトの <code>tags</code> プロパティ）して監視。</td>",
    "</tr>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>",
    "<td><em>Vue</em> インスタンスの初期化時にも処理を実行したいので <code>immediate</code> オプションを有効化。</td>",
    "</tr>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>",
    "<td>変更を検出したときに実行する処理を定義。</td>",
    "</tr>",
    "</table>",
    "</div>",
    "<div class=\"admonitionblock tip\">",
    "<table>",
    "<tr>",
    "<td class=\"icon\">",
    "<i class=\"fa icon-tip\" title=\"Tip\" data-md-icon=\"emoji_objects\"></i>",
    "</td>",
    "<td class=\"content\">",
    "<div class=\"paragraph\">",
    "<p>オブジェクトのネストされているプロパティ全てを監視したい場合は <code>deep</code> オプションを有効化する。</p>",
    "</div>",
    "<div ",
    "    class=\"listingblock\">",
    "",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-ts\"",
    "    data-lang=\"ts\">@Watch('query', { immediate: true, deep: true })</code></pre>",
    "  </div>",
    "</div>",
    "</td>",
    "</tr>",
    "</table>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_おわりに\">おわりに😎</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p>うっかりやらかす度合いが高そうなので、備忘録代わりに記事にしてみた。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p><code>props</code> でオブジェクトそのまま渡すのは落とし穴ができやすくて怖いなーって思ったり。</p>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_参考\">参考📖</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"ulist\">",
    "<div class=\"title\">Vue.js</div>",
    "<ul>",
    "<li>",
    "<p><a href=\"https://jp.vuejs.org/v2/guide/reactivity.html\" target=\"_blank\" rel=\"noopener\">リアクティブの探求 — Vue.js</a></p>",
    "</li>",
    "<li>",
    "<p><a href=\"https://jp.vuejs.org/v2/guide/computed.html\" target=\"_blank\" rel=\"noopener\">算出プロパティとウォッチャ — Vue.js</a></p>",
    "</li>",
    "</ul>",
    "</div>",
    "<div class=\"ulist\">",
    "<div class=\"title\">nuxt-property-decorator</div>",
    "<ul>",
    "<li>",
    "<p><a href=\"https://github.com/nuxt-community/nuxt-property-decorator\" target=\"_blank\" rel=\"noopener\">nuxt-community/nuxt-property-decorator: Property decorators for Nuxt (base on vue-property-decorator)</a></p>",
    "</li>",
    "</ul>",
    "</div>",
    "<div class=\"ulist\">",
    "<div class=\"title\">ビュー更新について</div>",
    "<ul>",
    "<li>",
    "<p><a href=\"++https://qiita.com/_Keitaro_/items/8e3f8448d1a0fe281648++\" target=\"_blank\" rel=\"noopener\">$watchでオブジェクトの変更を監視する方法 - Qiita</a></p>",
    "</li>",
    "<li>",
    "<p><a href=\"https://qiita.com/bobu_web/items/ec5a98d03758d12ad721\" target=\"_blank\" rel=\"noopener\">Vue.jsでビューの変更がされないときに疑うこと+主な解決策方法 - Qiita</a></p>",
    "</li>",
    "</ul>",
    "</div>",
    "</div>",
    "</div>"
  ],
  "title": "Nuxtで親コンポーネントから渡されるプロパティ（props）の変更を検出する",
  "created_at": "2021-04-02",
  "tags": [
    "nuxt.js"
  ],
  "updated_at": "2021-04-02",
  "author": "秋々すすき",
  "revision": "1.0"
}