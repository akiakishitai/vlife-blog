{"filename":"podman_unshare.adoc","rendered":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">目次</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_はじめに\">🍵はじめに</a></li>\n<li><a href=\"#_問題のファイルパーミッション\">🚨問題のファイルパーミッション</a></li>\n<li><a href=\"#_podman_unshare_command\">🚀 podman unshare <em>COMMAND</em></a></li>\n<li><a href=\"#_おわりに\">😎おわりに</a></li>\n<li><a href=\"#_参考\">📖参考</a></li>\n</ul>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_はじめに\">🍵はじめに</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">前提</dt>\n<dd>\n<p>ルートレスモードの <em>Podman</em> では、ユーザ名前空間という仕組みによって実行ユーザーのUIDがコンテナ内の <em>root</em> としてマッピングされる。<br>\nこれにより、ホスト側のディレクトリをコンテナにマウントしたときに、コンテナ側でファイルを作成してもパーミッションの問題に悩まされることなく利用できる。</p>\n</dd>\n<dt class=\"hdlist1\">問題</dt>\n<dd>\n<p>コンテナ側の <strong><em>root</em> ではない</strong>一般ユーザーによってファイル作成された場合、ホスト側からファイル操作しようとするとパーミッションの問題が発生する。</p>\n</dd>\n<dt class=\"hdlist1\">対策</dt>\n<dd>\n<p>ファイル操作用のコンテナを起動しなくても、<code>podman unshare</code> コマンドが使えるかも。</p>\n</dd>\n</dl>\n</div>\n<table class=\"tableblock frame-all grid-all fit-content\">\n<caption class=\"title\">Table 1. 環境</caption>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">App</th>\n<th class=\"tableblock halign-left valign-top\">Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">podman</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">3.0.1</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonitionblock important\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-important\" title=\"Important\" data-md-icon=\"report\"></i>\n</td>\n<td class=\"content\">\nこの記事では <strong>ルートレスモード</strong> を前提にしています。\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_問題のファイルパーミッション\">🚨問題のファイルパーミッション</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>コンテナ側の一般ユーザーで作成したファイルをホスト側から見ると下記のようになる。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. コンテナ側で一般ユーザーが作成したファイル</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">ホスト側からではパーミッションが問題になる</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"hoge\"\n    data-host=\"host\"\n    data-output=\"2-3,5-10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">ls -An README.md\n-rw-r--r-- 1 166536 166536 3584 Aug 30 00:10 README.md  <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n\necho 'hello' &gt;&gt; README.md   <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n-bash: README.md: Permission denied</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><em>UID</em>, <em>GID</em> の値が <em>Podman</em> によるマッピング後の値になっている。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>当然、上書きしようとするとパーミッションで拒否される。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<hr>\n<div class=\"paragraph\">\n<p>このように、ホスト側からファイル操作したいのにパーミッションの問題が発生している場合、<code>podman unshare</code> コマンドを用いると解決できる。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_podman_unshare_command\">🚀 podman unshare <em>COMMAND</em></h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><code>COMMAND</code> を <em>Podman</em> が扱うユーザ名前空間内で実行する。</p>\n</div>\n<div class=\"paragraph\">\n<p>コンテナ側の一般ユーザーで作成したファイルを、ホスト側で編集したいときに利用できる。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"hoge\"\n    data-host=\"local\"\n    data-output=\"2,4-5\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">podman unshare -- id\nuid=0(root) gid=0(root) groups=0(root),65534(nogroup)   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b> <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\npodman unshare -- ls -An README.md\n-rw-r--r-- 1 1001 1001 3584 Aug 30 00:10 README.md      <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n\npodman unshare -- nano README.md</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>コンテナで使われているユーザ名前空間上において操作できる。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td><code>podman unshare</code> に渡したコマンドは <em>root</em> として実行される。<br>\n👉ルートレス <em>Podman</em> において、実行ユーザーは <em>root</em> にマッピングされるため。</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>\n</td>\n<td class=\"content\">\n<code>--</code> はあってもなくてもいい。<br>\n例では見た目がわかりやすいかなと思ってつけている。\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_おわりに\">😎おわりに</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>コンテナ側で生成されたファイルをちょっと編集したくなったとき、いちいちコンテナを起動する必要性がなくなって助かる🤗。</p>\n</div>\n<div class=\"paragraph\">\n<p>もっとも、こういうめったに使わないけど知っておくと便利なコマンドって、作業が終わってから見つかるんだけど。<br>\nぴえん🥺。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\">📖参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://docs.podman.io/en/latest/markdown/podman-unshare.1.html\" target=\"_blank\" rel=\"noopener\">podman-unshare(1) — Podman documentation</a></p>\n</li>\n<li>\n<p><a href=\"https://rheb.hatenablog.com/entry/how-does-rootless-podman-work\" target=\"_blank\" rel=\"noopener\">ルートレスのPodmanはどのように動作しますか？ - 赤帽エンジニアブログ</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","title":"podman unshare コマンドを使ってコンテナから作成したファイルのパーミッション問題を解決する","created_at":"2021-10-04","tags":["podman","備忘録"],"updated_at":"2021-10-04","author":"秋々すすき","revision":"1.0"}