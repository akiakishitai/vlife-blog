{"filename":"systemd_scheduling.adoc","rendered":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">目次</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_はじめに\">🍐はじめに</a></li>\n<li><a href=\"#_systemd_サービスとして実行ジョブを設定\">🐕‍🦺 <em>systemd</em> サービスとして実行ジョブを設定</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_ジョブをスクリプトとして作成\">ジョブをスクリプトとして作成</a></li>\n<li><a href=\"#_systemd_サービスを作成\"><em>systemd</em> サービスを作成</a></li>\n</ul>\n</li>\n<li><a href=\"#_systemd_timer_を使って定期的に_systemd_service_を実行\">⏰ <em>systemd.timer</em> を使って定期的に <em>systemd.service</em> を実行</a></li>\n<li><a href=\"#_補足事項\">🖊️補足事項</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_about_oncalendar_value\">OnCalendar の値について</a></li>\n<li><a href=\"#_システム終了時に_systemd_service_を実行したい場合\">システム終了時に <em>systemd.service</em> を実行したい場合</a></li>\n</ul>\n</li>\n<li><a href=\"#_参考\">📖参考</a></li>\n</ul>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_はじめに\">🍐はじめに</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><code>cron</code> を使わずとも <em>systemd</em> を使ってジョブを定期的に実行できる。<br>\n一般的なLinuxディストリビューションは <em>systemd</em> を使っているため、こちらの利用方法を備忘録しておく。</p>\n</div>\n<div class=\"paragraph\">\n<p>今回やる <em>systemd</em> による定期実行については、</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>実行したいジョブを <em>systemd</em> サービスとして設定</p>\n</li>\n<li>\n<p><em>systemd.timer</em> から上記サービスを実行</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>とすればいい。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_systemd_サービスとして実行ジョブを設定\">🐕‍🦺 <em>systemd</em> サービスとして実行ジョブを設定</h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>実行するジョブをスクリプトにする</p>\n</li>\n<li>\n<p>上記スクリプトを実行する <em>systemd.service</em> を作成</p>\n</li>\n</ol>\n</div>\n<div class=\"admonitionblock important\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-important\" title=\"Important\" data-md-icon=\"report\"></i>\n</td>\n<td class=\"content\">\n今回作成する <em>systemd.service</em> は <em>systemd</em> のユーザーモードで動かす（<code>systemctl --user &lt;subcommand&gt;</code>）ことを前提にする。\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_ジョブをスクリプトとして作成\">ジョブをスクリプトとして作成</h3>\n<div class=\"paragraph\">\n<p><em>systemd.service</em> にコマンドを直接記述する場合はいくつか注意すべき点がある<sup class=\"footnote\">[<a id=\"_footnoteref_1\" class=\"footnote\" href=\"#_footnotedef_1\" title=\"View footnote.\">1</a>]</sup>。<br>\nよって、実行したいジョブはあらかじめシェルスクリプトにしておくことを推奨。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. ジョブのスクリプトを作成</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">引数を標準出力に返すだけのテスト用スクリプト</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"3-6\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">mkdir -p ~/.local/bin    <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\ntee ~/.local/bin/hello.sh &lt;&lt;'EOF'\n#!/bin/bash\necho \"Hello,\" \"$@\" \"!\"\nEOF\n\nchmod u+x ~/.local/bin/hello.sh    <i class=\"conum\" data-value=\"2\"></i><b>(2)</b></code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><em>systemd</em> ユーザーモードで使うため、スクリプトは <code>~/.local/bin</code> に配置した。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>実行権限を与えることを忘れずに。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<hr>\n<details>\n<summary class=\"title\">直接コマンドを記述する場合は、こういうことに注意する。</summary>\n<div class=\"content\">\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-tip\" title=\"Tip\" data-md-icon=\"emoji_objects\"></i>\n</td>\n<td class=\"content\">\n<div class=\"title\">systemd.service Exec</div>\n<div class=\"paragraph\">\n<p>シェル構文は変数の展開（<code>${&#8230;&#8203;}</code>）ぐらいしか使えない（なおネストされた変数展開はうまく機能しない）。<br>\nリダイレクト（<code>&gt;</code>, <code>&gt;&gt;</code> <code>&lt;</code>, <code>&lt;&lt;</code>）やパイプ（<code>|</code>）を使いたい場合は シェル（<code>sh</code>, <code>bash</code>）に引数としてコマンド文を渡すしかない。<br>\n（スクリプトファイルとして作成しておいて、それを実行するほうが筋としては良さそう）</p>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"2-10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">ExecStart=bash -c \"echo 'hoge' &gt; /tmp/hoge.txt\"</code></pre>\n  </div>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-tip\" title=\"Tip\" data-md-icon=\"emoji_objects\"></i>\n</td>\n<td class=\"content\">\n<div class=\"title\">systemd.service Exec</div>\n<div class=\"paragraph\">\n<p>コマンドが絶対パスで与えられていない場合、<code>systemd</code> はシステムごとに決められたパスからコマンドを検索する。<br>\n基本的には絶対パスを使うことが推奨される。</p>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">systemd がコマンドを検索するパスの確認</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"2-10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">systemd-path search-binaries-default | tr \":\" \" \"\n/usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin</code></pre>\n  </div>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n</details>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_systemd_サービスを作成\"><em>systemd</em> サービスを作成</h3>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 2. systemd.service を作成</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">systemd.service を新規作成</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"2-10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">systemctl edit --user --force --full demo@.service</code></pre>\n  </div>\n</div>\n<div \n    class=\"listingblock\">\n<div class=\"title\">~/.config/systemd/user/demo@.service</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-ini\"\n    data-lang=\"ini\">[Unit]\nDescription=Demo service\n\n[Service]\nType=oneshot\nExecStart=%h/.local/bin/hello.sh %i   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n\n[Install]\nWantedBy=multi-user.target</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><a href=\"https://man.archlinux.org/man/systemd.unit.5.en#SPECIFIERS\" target=\"_blank\" rel=\"noopener\">ユニット指定子</a>を利用している。<br>\n<code>%h</code> &#8594; このサービスを実行したユーザーのホームディレクトリパス。<br>\n<code>%i</code> &#8594; インスタンス名（ユニット名の <code>@</code> 記号から拡張子までの間にある文字列）。</td>\n</tr>\n</table>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">service をテスト起動</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"3-20\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">systemctl --user start demo@sample.service\nsystemctl --user status demo@sample.service\n● demo@sample.service - Demo service\n     Loaded: loaded (/home/hoge/.config/systemd/user/demo@.service; disabled; vendor preset: enabled)\n     Active: inactive (dead)\n\nOct 23 22:12:38 raspberrypi systemd[747]: Starting Demo service...\nOct 23 22:12:38 raspberrypi hello.sh[15180]: Hello, sample !\nOct 23 22:12:38 raspberrypi systemd[747]: demo@sample.service: Succeeded.\nOct 23 22:12:38 raspberrypi systemd[747]: Started Demo service.</code></pre>\n  </div>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-tip\" title=\"Tip\" data-md-icon=\"emoji_objects\"></i>\n</td>\n<td class=\"content\">\nユニットファイルの拡張子（<code>.service</code> や <code>.socket</code>）の直前に <code>@</code> 記号をつけるとテンプレートユニットになる。<br>\n引数を与えてユニットファイルの挙動を一部変更させたいときに便利。\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_systemd_timer_を使って定期的に_systemd_service_を実行\">⏰ <em>systemd.timer</em> を使って定期的に <em>systemd.service</em> を実行</h2>\n<div class=\"sectionbody\">\n<div class=\"exampleblock\">\n<div class=\"title\">Example 3. systemd.timer で定期実行</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">systemd.timer を新規作成</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"2-10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">systemctl edit --user --force --full demo@schedule.timer</code></pre>\n  </div>\n</div>\n<div \n    class=\"listingblock\">\n<div class=\"title\">~/.config/systemd/user/demo@schedule.timer</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-ini\"\n    data-lang=\"ini\">[Timer]\nOnCalendar=*-*-* *:00/10:00   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\nAccuracySec=1m  <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n#Unit=demo@sample.service   <i class=\"conum\" data-value=\"3\"></i><b>(3)</b></code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>10分毎に定期実行。書式については<a href=\"#_about_oncalendar_value\">後述</a>。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>精度。ここの例では指定した時刻から1分以内のどこかで実行されることになる。<br>\n小さくすればするほどCPU負荷が高くなるので注意（デフォルト値は1分）。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>この <em>timer</em> で実行するユニットを指定する（本例ではコメントアウト）。<br>\n指定がなければ <em>timer</em> と同名の <em>service</em> を実行する。</td>\n</tr>\n</table>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">タイマーをテスト起動</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"3-20\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">systemctl --user start demo@schedule.timer\nsystemctl --user status demo@schedule.timer\n● demo@schedule.timer\n     Loaded: loaded (/home/suzutsuki/.config/systemd/user/demo@schedule.timer; static)\n     Active: active (waiting) since Sun 2021-10-24 00:05:15 JST; 9s ago\n    Trigger: Sun 2021-10-24 00:10:00 JST; 4min 35s left\n   Triggers: ● demo@schedule.service\n\nOct 24 00:05:15 raspberrypi systemd[747]: Started demo@schedule.timer.</code></pre>\n  </div>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">ログを確認</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"2-30\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">journalctl --user --unit demo@schedule.service\nOct 24 00:10:22 raspberrypi systemd[747]: Starting Demo service...\nOct 24 00:10:22 raspberrypi hello.sh[16109]: Hello, schedule !\nOct 24 00:10:22 raspberrypi systemd[747]: demo@schedule.service: Succeeded.\nOct 24 00:10:22 raspberrypi systemd[747]: Started Demo service.\nOct 24 00:20:22 raspberrypi systemd[747]: Starting Demo service...\nOct 24 00:20:22 raspberrypi hello.sh[16125]: Hello, schedule !\nOct 24 00:20:22 raspberrypi systemd[747]: demo@schedule.service: Succeeded.\nOct 24 00:20:22 raspberrypi systemd[747]: Started Demo service.\nOct 24 00:30:22 raspberrypi systemd[747]: Starting Demo service...\nOct 24 00:30:22 raspberrypi hello.sh[16133]: Hello, schedule !\nOct 24 00:30:22 raspberrypi systemd[747]: demo@schedule.service: Succeeded.\nOct 24 00:30:22 raspberrypi systemd[747]: Started Demo service.\nOct 24 00:40:22 raspberrypi systemd[747]: Starting Demo service...</code></pre>\n  </div>\n</div>\n</div>\n</div>\n<hr>\n<div class=\"paragraph\">\n<p>作成した <em>systemd.timer</em> が期待通り動作するようならOK。<br>\nあとは自動起動を有効化しておく。</p>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">タイマーの自動起動を有効化</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"2-10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">systemctl --user enable demo@schedule.timer</code></pre>\n  </div>\n</div>\n<div class=\"paragraph\">\n<p>😎👍</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_補足事項\">🖊️補足事項</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_about_oncalendar_value\">OnCalendar の値について</h3>\n<div class=\"paragraph\">\n<p><a href=\"https://man.archlinux.org/man/systemd.time.7.en\" target=\"_blank\" rel=\"noopener\">systemd.time(7) — Arch manual pages</a> を参考。<br>\n書式としては <code>YYYY-MM-DD hh:mm:ss</code> の形になる（曜日指定もできるけど割愛）。</p>\n</div>\n<div class=\"paragraph\">\n<p>この値についての検証は <code>systemd-analyze calendar</code> コマンドを利用する。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 4. OnCalendar の値について検証例</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"2-3,5-10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">systemd-analyze calendar '4h'\nFailed to parse calendar specification '4h': Invalid argument\n\nsystemd-analyze calendar '00,04,08,12,16,20:15:00'\n  Original form: 00,04,08,12,16,20:15:00\nNormalized form: *-*-* 00,04,08,12,16,20:15:00\n    Next elapse: Sun 2021-10-24 00:15:00 JST\n       (in UTC): Sat 2021-10-23 15:15:00 UTC\n       From now: 1h 58min left</code></pre>\n  </div>\n</div>\n</div>\n</div>\n<table class=\"tableblock frame-all grid-all fit-content\">\n<caption class=\"title\">Table 1. OnCalendarで使える記号</caption>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-center valign-top\">記号</th>\n<th class=\"tableblock halign-left valign-top\">説明</th>\n<th class=\"tableblock halign-center valign-top\">使用例</th>\n<th class=\"tableblock halign-left valign-top\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><code>*</code></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">ワイルドカード<br>\n（任意の値）</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"literal\"><pre>*-*-* *:30:00</pre></div></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">時刻が30分を指すたびに実行。</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><code>,</code></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">複数指定</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"literal\"><pre>*-*-10,20 00:00:00</pre></div></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">10日と20日の午前0時に実行。</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><code>..</code></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">範囲指定</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"literal\"><pre>*-*-05..10 12:00:00</pre></div></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">5日から10日にかけて、12時に実行。</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><code>/</code></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">繰り返し間隔</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"literal\"><pre>*-*-* *:00/15:00</pre></div></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">15分ごとに実行。<br>\n（00, 15, 30, 45分時にそれぞれ実行）</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><code>~</code></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">月末最終日から</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"literal\"><pre>*-10~03 00:00:00</pre></div></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">10月末から数えて3日目、<br>\nつまり10月29日の午前0時に実行。</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_システム終了時に_systemd_service_を実行したい場合\">システム終了時に <em>systemd.service</em> を実行したい場合</h3>\n<div class=\"paragraph\">\n<p><code>shutdown.target</code> 前に実行される <em>systemd.service</em> として実装すればいい（<em>systemd.timer</em> は使わない）。</p>\n</div>\n<div class=\"admonitionblock caution\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-caution\" title=\"Caution\" data-md-icon=\"local_fire_department\"></i>\n</td>\n<td class=\"content\">\nこの方法では<strong>電源喪失（停電など）に対応できない</strong>ことに注意。<br>\n通常のシャットダウン操作が実行された時のみ有効となる。\n</td>\n</tr>\n</table>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 5. シャットダウン時に実行させたい場合の例</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">シャットダウン時に実行される systemd.service</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    data-output=\"2-30\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">sudo systemctl edit --force --full run-on-shutdown.service</code></pre>\n  </div>\n</div>\n<div \n    class=\"listingblock\">\n\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-ini\"\n    data-lang=\"ini\">[Unit]\nDescription=Run scripts on shutdown\nBefore=shutdown.target   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\nDefaultDependencies=no   <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/usr/local/bin/run-on-shutdown.sh\n\n[Install]\nWantedBy=shutdown.target <i class=\"conum\" data-value=\"3\"></i><b>(3)</b></code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>シャットダウンする前にこのサービスを実行させる。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>起動初期やシャットダウン時に実行させる場合は <em>no</em> にしたほうがいいらしい。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>シャットダウン時に実行させるための指定。</td>\n</tr>\n</table>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">有効化</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"pi\"\n    data-host=\"raspi\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">sudo systemctl daemon-reload\nsudo systemctl enable run-on-shutdown.service</code></pre>\n  </div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\">📖参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<div class=\"title\">systemd.service</div>\n<ul>\n<li>\n<p><a href=\"https://man.archlinux.org/man/systemd.service.5.en\" target=\"_blank\" rel=\"noopener\">systemd.service(5) — Arch manual pages</a></p>\n</li>\n<li>\n<p><a href=\"https://man.archlinux.org/man/systemd.unit.5.en\" target=\"_blank\" rel=\"noopener\">systemd.unit(5) — Arch manual pages</a></p>\n</li>\n<li>\n<p><a href=\"https://www.freedesktop.org/software/systemd/man/systemd.syntax.html#\" target=\"_blank\" rel=\"noopener\">systemd.syntax</a></p>\n</li>\n<li>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-systemctl-to-manage-systemd-services-and-units-ja\" target=\"_blank\" rel=\"noopener\">Systemctlサービスを使用してSystemdサービスとユニットを管理する方法 | DigitalOcean</a></p>\n</li>\n<li>\n<p><a href=\"https://access.redhat.com/documentation/ja-jp/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-managing_services_with_systemd-unit_files\" target=\"_blank\" rel=\"noopener\">10.6. systemd のユニットファイルの作成および変更 Red Hat Enterprise Linux 7 | Red Hat Customer Portal</a></p>\n</li>\n<li>\n<p><a href=\"https://enakai00.hatenablog.com/entry/20130917/1379374797\" target=\"_blank\" rel=\"noopener\">Systemd入門(4) - serviceタイプUnitの設定ファイル - めもめも</a></p>\n</li>\n<li>\n<p><a href=\"https://askubuntu.com/questions/1312766/systemd-script-not-running-on-shutdown\" target=\"_blank\" rel=\"noopener\">bash - Systemd script not running on shutdown - Ask Ubuntu</a></p>\n</li>\n</ul>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">systemd.timer</div>\n<ul>\n<li>\n<p><a href=\"https://wiki.archlinux.jp/index.php/Systemd/%E3%82%BF%E3%82%A4%E3%83%9E%E3%83%BC\" target=\"_blank\" rel=\"noopener\">systemd/タイマー - ArchWiki</a></p>\n</li>\n<li>\n<p><a href=\"https://man.archlinux.org/man/systemd.timer.5\" target=\"_blank\" rel=\"noopener\">systemd.timer(5) — Arch manual pages</a></p>\n</li>\n<li>\n<p><a href=\"https://man.archlinux.org/man/systemd.time.7.en\" target=\"_blank\" rel=\"noopener\">systemd.time(7) — Arch manual pages</a></p>\n</li>\n<li>\n<p><a href=\"https://man.archlinux.org/man/systemd-analyze.1.en\" target=\"_blank\" rel=\"noopener\">systemd-analyze(1) — Arch manual pages</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"footnotes\">\n<hr>\n<div class=\"footnote\" id=\"_footnotedef_1\">\n<a href=\"#_footnoteref_1\">1</a>. <code>bash</code> の環境変数が使えないとか変数展開がうまくいかないとか。\n</div>\n</div>","title":"systemd を使ってジョブを定期実行させる備忘録","created_at":"2021-10-25","tags":["linux","systemd","timer","備忘録"],"updated_at":"2021-10-25","author":"秋々すすき","revision":"1.0"}