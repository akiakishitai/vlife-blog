{
  "filename": "vscode_dev_coep_error.adoc",
  "rendered": [
    "<div id=\"toc\" class=\"toc\">",
    "<div id=\"toctitle\">目次</div>",
    "<ul class=\"sectlevel1\">",
    "<li><a href=\"#_症状\">🤢症状</a></li>",
    "<li><a href=\"#_原因\">🔍原因</a></li>",
    "<li><a href=\"#_対策\">🚑対策</a>",
    "<ul class=\"sectlevel2\">",
    "<li><a href=\"#_asciidoctor_js_extensions_で_crossorigin_属性を追加する\"><em>Asciidoctor.js Extensions</em> で <code>crossorigin</code> 属性を追加する</a></li>",
    "</ul>",
    "</li>",
    "<li><a href=\"#_参考\">📖参考</a></li>",
    "</ul>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_症状\">🤢症状</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p><em>AsciiDoc</em> 文書作成中に <em>kroki</em> でグラフ描画しようとしたらプレビュー画面に表示されなかった。<br>",
    "<em>Chrome</em> の <em>Developper Tools</em> からコンソールエラーを見てみると <code>net::ERR_BLOCKED_BY_RESPONSE.NotSameOriginAfterDefaultedToSameOriginByCoep</code> のエラー表示。</p>",
    "</div>",
    "<table class=\"tableblock frame-all grid-all fit-content\">",
    "<caption class=\"title\">Table 1. 環境</caption>",
    "<colgroup>",
    "<col>",
    "<col>",
    "</colgroup>",
    "<thead>",
    "<tr>",
    "<th class=\"tableblock halign-center valign-top\">App</th>",
    "<th class=\"tableblock halign-center valign-top\">Version</th>",
    "</tr>",
    "</thead>",
    "<tbody>",
    "<tr>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><strong>VS Code</strong></p></td>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">1.84.1</p></td>",
    "</tr>",
    "<tr>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><strong>AsciiDoc (VS Code 拡張機能)</strong></p></td>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">v3.1.7</p></td>",
    "</tr>",
    "</tbody>",
    "</table>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_原因\">🔍原因</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p><code>vscode.dev</code> ドメインを介してアクセスしてるので <em>CORS</em> 問題か？<br>",
    "と思ったら <a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Cross-Origin_Resource_Policy\" target=\"_blank\" rel=\"noopener\"><em>Cross-Origin-Resource-Policy（CORP）</em> レスポンスヘッダー</a>未定義によるエラーみたい。</p>",
    "</div>",
    "<div class=\"imageblock border-2 flex justify-center\">",
    "<div class=\"content\">",
    "<img src=\"/_images/error/cross-origin-resource-policy-undefined.png\" alt=\"CORP未定義によるエラー。\" width=\"400px\">",
    "</div>",
    "</div>",
    "<hr>",
    "<div class=\"paragraph\">",
    "<p>上記エラーは <a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy\" target=\"_blank\" rel=\"noopener\"><em>Cross-Origin-Embedder-Policy（COEP）</em> レスポンスヘッダー</a>において、明示的に許可を与えていない外部 <em>origin</em> のリソースが読み込まれることを防止する設定<sup class=\"footnote\">[<a id=\"_footnoteref_1\" class=\"footnote\" href=\"#_footnotedef_1\" title=\"View footnote.\">1</a>]</sup>の場合に発生する。<br>",
    "つまり <code>vscode.dev</code> 側の <em>COEP</em> 設定に起因する。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>よって当然これは <em>kroki</em> サービスだけの問題ではなく、他の <em>CORP</em> レスポンスヘッダーが定義されていないサービスもブロックされる。</p>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_対策\">🚑対策</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p>とりあえず今回は <code>vscode.dev</code> 上のプレビューで画像ブロックされてしまうことを回避できればいいので、 <code>&lt;img&gt;</code> タグに <strong><code>crossorigin</code></strong> 属性をつけることにした<sup class=\"footnote\">[<a id=\"_footnoteref_2\" class=\"footnote\" href=\"#_footnotedef_2\" title=\"View footnote.\">2</a>]</sup>。</p>",
    "</div>",
    "<div class=\"exampleblock\">",
    "<div class=\"title\">Example 1. crossorigin 属性</div>",
    "<div class=\"content\">",
    "<div ",
    "    class=\"listingblock\">",
    "",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-asciidoc\"",
    "    data-lang=\"asciidoc\">&lt;img src=\"https://example.com/hoge.png\"&gt;  <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>",
    "",
    "&lt;img src=\"https://example.com/hoge.png\" <strong class=\"text-red-500\">crossorigin</strong>&gt;  <i class=\"conum\" data-value=\"2\"></i><b>(2)</b></code></pre>",
    "  </div>",
    "</div>",
    "<div class=\"colist arabic\">",
    "<table>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>",
    "<td><em>COEP</em> ブロックされる。</td>",
    "</tr>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>",
    "<td><code>&lt;img&gt;</code> や <code>&lt;link&gt;</code> タグなどに <strong><code>crossorigin</code></strong> 属性をつけると <em>COEP</em> によるブロックは回避できる（<em>CORS</em> 対応の必要あり）。<br>",
    "📖 <a href=\"https://developer.mozilla.org/ja/docs/Web/HTML/Attributes/crossorigin\" class=\"italic\" target=\"_blank\" rel=\"noopener\">HTML 属性: crossorigin - HTML: ハイパーテキストマークアップ言語 | MDN</a></td>",
    "</tr>",
    "</table>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>なお <em>AsciiDoc</em> の基本機能では自由に <em>HTML</em> 属性を追加することはできないため、<em>Asciidoc.js</em> のカスタマイズ機能を利用する。</p>",
    "</div>",
    "<div class=\"sect2\">",
    "<h3 id=\"_asciidoctor_js_extensions_で_crossorigin_属性を追加する\"><em>Asciidoctor.js Extensions</em> で <code>crossorigin</code> 属性を追加する</h3>",
    "<div class=\"paragraph\">",
    "<p><code>asciidoctor-vscode</code> ではカスタマイズ機能の一つである <a href=\"https://docs.asciidoctor.org/asciidoctor.js/latest/extend/extensions/\" target=\"_blank\" rel=\"noopener\"><em>Asciidoctor.js Extensions</em></a> が利用できる<sup class=\"footnote\">[<a id=\"_footnoteref_3\" class=\"footnote\" href=\"#_footnotedef_3\" title=\"View footnote.\">3</a>]</sup>ため、それにより <code>crossorigin</code> 属性を自動で追加するようにした。</p>",
    "</div>",
    "<div class=\"exampleblock\">",
    "<div class=\"title\">Example 2. asciidoctor-vscode で Asciidoctor.js Extensions の利用</div>",
    "<div class=\"content\">",
    "<div class=\"paragraph\">",
    "<p>方法としては <em>Postprocessor</em> でHTML変換後の文字列を正規表現で置換させる。<br>",
    "📖 <span class=\"italic\"><a href=\"https://docs.asciidoctor.org/asciidoctor.js/latest/extend/extensions/postprocessor/\" target=\"_blank\" rel=\"noopener\">Postprocessor Extension Example | Asciidoctor Docs</a></span></p>",
    "</div>",
    "<div class=\"olist arabic\">",
    "<ol class=\"arabic\">",
    "<li>",
    "<p>Asciidoctor.js の拡張機能を有効化する</p>",
    "<div ",
    "    class=\"listingblock\">",
    "<div class=\"title\">.vscode/settings.json</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-json\"",
    "    data-lang=\"json\">{",
    "  \"asciidoc.extensions.registerWorkspaceExtensions\": true",
    "}</code></pre>",
    "  </div>",
    "</div>",
    "</li>",
    "<li>",
    "<p><code>.asciidoctor/lib</code> ディレクトリ下に拡張機能（<code>*.js</code>）ファイルを作成する</p>",
    "<details>",
    "<summary class=\"title\">crossorigin 属性を追加する拡張機能ファイルの例</summary>",
    "<div class=\"content\">",
    "<div ",
    "    class=\"listingblock\">",
    "<div class=\"title\">.asciidoctor/lib/crossorigin.js</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-javascript\"",
    "    data-lang=\"javascript\">// @ts-check",
    "/**",
    " * @typedef {object} CrossoriginTarget - crossorigin 属性をつけたい対象の情報を格納。",
    " * @prop {string[]} urls - 置換対象とするURL",
    " * @prop {'audio'|'img'|'link'|'script'|'video'} tag - 置換対象とするHTMLタグ名",
    " */",
    "",
    "/**",
    " * @typedef {*} Postprocessor",
    " *",
    " * @typedef {object} PostprocessorDsl",
    " * @prop {(block: (this: Postprocessor, document: Document, output: string) =&gt; void) =&gt; void} process",
    " */",
    "",
    "/**",
    " * 置換対象とする正規表現パターンを作成。",
    " * @param {CrossoriginTarget} target",
    " * @returns {RegExp}",
    " */",
    "const createPattern = (target) =&gt; {",
    "  const orUrl = `(?:${target.urls.join('|')})`",
    "",
    "  switch (target.tag) {",
    "    case 'img':",
    "      return new RegExp(`(&lt;img .*?src=\"${orUrl}[^&gt;]*)&gt;`, 'g')",
    "",
    "    default:",
    "      console.warn(",
    "        `[crossorigin Extension]: ${target.tag} tag is not implements.`",
    "      )",
    "      break",
    "  }",
    "",
    "  return new RegExp('')",
    "}",
    "",
    "/**",
    " * Postprocessor 拡張機能の実装。",
    " * 外部参照の &lt;img&gt; タグに crossorigin 属性を挿入する。",
    " * @this {PostprocessorDsl}",
    " */",
    "function processor() {",
    "  /** @type {CrossoriginTarget[]} */",
    "  const targets = [",
    "    {",
    "      tag: 'img',",
    "      urls: ['https://img.shields.io', 'https://kroki.io', 'http://localhost'],",
    "    },",
    "  ]",
    "",
    "  const self = this",
    "  self.process((doc, output) =&gt; {",
    "    const replaced = targets",
    "      .map((target) =&gt; createPattern(target))",
    "      .reduce(",
    "        (source, pattern) =&gt; source.replace(pattern, '$1 crossorigin&gt;'),",
    "        output",
    "      )",
    "",
    "    return replaced",
    "  })",
    "}",
    "",
    "/**",
    " * 上記 processor() を Postprocessor として登録する register 関数を公開。",
    " * @param {*} registry",
    " */",
    "module.exports.register = (registry) =&gt; {",
    "  typeof registry.postprocessor === 'function'",
    "    ? registry.postprocessor(processor)",
    "    : console.warn(",
    "        '[crossorigin Extension]: registry.postprocessor is not function.'",
    "      )",
    "}</code></pre>",
    "  </div>",
    "</div>",
    "</div>",
    "</details>",
    "</li>",
    "</ol>",
    "</div>",
    "<hr>",
    "<div class=\"paragraph\">",
    "<p>以上で作成した拡張機能が適用される。</p>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_参考\">📖参考</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"ulist\">",
    "<div class=\"title\">crossorigin</div>",
    "<ul>",
    "<li>",
    "<p><a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Cross-Origin_Resource_Policy\" target=\"_blank\" rel=\"noopener\">Cross-Origin Resource Policy (CORP) - HTTP | MDN</a></p>",
    "</li>",
    "<li>",
    "<p><a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy\" target=\"_blank\" rel=\"noopener\">Cross-Origin-Embedder-Policy - HTTP | MDN</a></p>",
    "</li>",
    "<li>",
    "<p><a href=\"https://developer.mozilla.org/ja/docs/Web/HTML/Attributes/crossorigin\" class=\"italic\" target=\"_blank\" rel=\"noopener\">HTML 属性: crossorigin - HTML: ハイパーテキストマークアップ言語 | MDN</a></p>",
    "</li>",
    "</ul>",
    "</div>",
    "<div class=\"ulist\">",
    "<div class=\"title\">AsciiDoc</div>",
    "<ul>",
    "<li>",
    "<p><a href=\"https://docs.asciidoctor.org/asciidoctor.js/latest/extend/extensions/postprocessor/\" target=\"_blank\" rel=\"noopener\">Postprocessor Extension Example | Asciidoctor Docs</a></p>",
    "</li>",
    "</ul>",
    "</div>",
    "</div>",
    "</div>",
    "<div id=\"footnotes\">",
    "<hr>",
    "<div class=\"footnote\" id=\"_footnotedef_1\">",
    "<a href=\"#_footnoteref_1\">1</a>. <code>require-corp</code>",
    "</div>",
    "<div class=\"footnote\" id=\"_footnotedef_2\">",
    "<a href=\"#_footnoteref_2\">2</a>. 本来は <em>kroki</em> サーバー側で <code>Cross-Origin-Resource-Policy: <strong>cross-origin</strong></code> レスポンスヘッダーを設定することが一番筋がよさそう。ただ、<em>kroki</em> 側の設定で <em>CORP</em> レスポンスヘッダーを追加する仕組みはなさそうだし、ローカルサーバー立ててあれこれしても外部アクセスできるメリットが意味なくなるし……。",
    "</div>",
    "<div class=\"footnote\" id=\"_footnotedef_3\">",
    "<a href=\"#_footnoteref_3\">3</a>. <a href=\"https://docs.asciidoctor.org/asciidoctor.js/latest/extend/converter/template-converter/\" target=\"_blank\" rel=\"noopener\"><em>Template Converter</em></a> も使えるはずだけど <code>vscode.dev</code> 上ではエラーが出たので見送り。",
    "</div>",
    "</div>"
  ],
  "title": "vscode.dev においてAsciiDocプレビュー内の画像が net::ERR_BLOCKED_BY_RESPONSE エラーで表示されない問題",
  "created_at": "2023-12-25",
  "tags": [
    "vscode",
    "remote-tunnels",
    "asciidoc"
  ],
  "updated_at": "2023-12-25",
  "author": "秋々すすき",
  "revision": "1.0"
}