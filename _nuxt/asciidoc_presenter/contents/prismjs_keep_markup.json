{"filename":"prismjs_keep_markup.adoc","rendered":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">目次</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_やりたいこと\">💪やりたいこと</a></li>\n<li><a href=\"#_結論_keep_markup_プラグインを使う\">🌠結論: <em>Keep Markup</em> プラグインを使う</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_コードブロック内の_html_要素をカスタマイズしたいとき\">コードブロック内の <em>HTML</em> 要素をカスタマイズしたいとき</a></li>\n</ul>\n</li>\n<li><a href=\"#_参考\">📖参考</a></li>\n</ul>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_やりたいこと\">💪やりたいこと</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>シンタックスハイライターの <code>Prism</code> を利用しているが、コードブロック内に記述した <em>HTML</em> タグを維持したままシンタックスハイライトを有効にしたい。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. コードブロック中のHTMLタグ</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-keep-markup\">\n<div class=\"title\">元のソース</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-bash\"\n    data-lang=\"bash\">echo \"&lt;strong&gt;Strong text.&lt;/strong&gt;\"</code></pre>\n  </div>\n</div>\n<div \n    class=\"listingblock no-keep-markup\">\n<div class=\"title\">通常ではHTMLタグは除外される</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-bash\"\n    data-lang=\"bash\">echo \"&lt;strong&gt;Strong text.&lt;/strong&gt;\"</code></pre>\n  </div>\n</div>\n<div \n    class=\"listingblock\">\n<div class=\"title\">このようにHTMLタグをコードブロック内でも維持したい</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-bash\"\n    data-lang=\"bash\">echo \"<strong>Strong text.</strong>\"</code></pre>\n  </div>\n</div>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p><em>HTML</em> タグをテキスト表示させたい場合は、次の2文字について文字実体参照に変換しておく。</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>&lt;</code> &#8594; <code>&amp;lt;</code></p>\n</li>\n<li>\n<p><code>&amp;</code> &#8594; <code>&amp;amp;</code></p>\n</li>\n</ul>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_結論_keep_markup_プラグインを使う\">🌠結論: <em>Keep Markup</em> プラグインを使う</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://prismjs.com/plugins/keep-markup/\" target=\"_blank\" rel=\"noopener\"><em>Keep Markup</em> プラグイン</a>を利用するだけでいい。<br>\nこのプラグインは <code>&lt;code&gt;</code> ブロック内の <em>HTML</em> タグを保護する。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 2. Keep Markup プラグインの使用例</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n<div class=\"title\">Node(TypeScript)での例</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" data-line=\"3\"\n    ><code class=\"language-ts\"\n    data-lang=\"ts\">import * as Prism from 'prismjs'\n// plugins\nimport 'prismjs/plugins/keep-markup/prism-keep-markup.min'\n// languages\nimport 'prismjs/components/prism-bash.min'\nimport 'prismjs/components/prism-git.min'\nimport 'prismjs/components/prism-json.min'\nimport 'prismjs/components/prism-typescript.min'\n\nPrism.highlightAllUnder(document)</code></pre>\n  </div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_コードブロック内の_html_要素をカスタマイズしたいとき\">コードブロック内の <em>HTML</em> 要素をカスタマイズしたいとき</h3>\n<div class=\"paragraph\">\n<p><em>Keep Markup</em> プラグインは <code>before-highlight</code> の <em>hooks</em> で実行され、<em>HTML</em> タグをコードから一時的に隔離して保護する。<br>\nよってコードブロック内の <em>HTML</em> 要素をカスタマイズしたいときは、それよりも前に実行される <code>before-sanity-check</code> や <code>after-sanity-check</code> などの <em>hooks</em> で処理すればいい。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 3. コードブロック内のHTML要素を操作する</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n<div class=\"title\">AsciiDocのコールアウト要素を編集する例</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-ts\"\n    data-lang=\"ts\">import * as Prism from 'prismjs'\nimport 'prismjs/plugins/keep-markup/prism-keep-markup.min'\n\n// コールアウト番号は CSS で表示させるため、テキスト部分は非表示にする。\nPrism.hooks.add('before-sanity-check', (env) =&gt; {\n  env.element.querySelectorAll('.conum + b').forEach((elem) =&gt; {\n    elem.classList.add('hidden')\n  })\n})\n\nPrism.highlightAllUnder(document)</code></pre>\n  </div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\">📖参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://prismjs.com/plugins/keep-markup/\" target=\"_blank\" rel=\"noopener\">Keep markup ▲ Prism plugins</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","title":"Prism.jsでコードブロック内に記述したHTMLタグを維持したい","created_at":"2021-05-17","tags":["syntax-highlighter","prism"],"updated_at":"2021-05-17","author":"秋々すすき","revision":"1.0"}