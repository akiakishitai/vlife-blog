{
  "filename": "prismjs_keep_markup.adoc",
  "rendered": [
    "<div id=\"toc\" class=\"toc\">",
    "<div id=\"toctitle\">目次</div>",
    "<ul class=\"sectlevel1\">",
    "<li><a href=\"#_やりたいこと\">💪やりたいこと</a></li>",
    "<li><a href=\"#_結論_keep_markup_プラグインを使う\">🌠結論: <em>Keep Markup</em> プラグインを使う</a>",
    "<ul class=\"sectlevel2\">",
    "<li><a href=\"#_コードブロック内の_html_要素をカスタマイズしたいとき\">コードブロック内の <em>HTML</em> 要素をカスタマイズしたいとき</a></li>",
    "</ul>",
    "</li>",
    "<li><a href=\"#_参考\">📖参考</a></li>",
    "</ul>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_やりたいこと\">💪やりたいこと</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p>シンタックスハイライターの <code>Prism</code> を利用しているが、コードブロック内に記述した <em>HTML</em> タグを維持したままシンタックスハイライトを有効にしたい。</p>",
    "</div>",
    "<div class=\"exampleblock\">",
    "<div class=\"title\">Example 1. コードブロック中のHTMLタグ</div>",
    "<div class=\"content\">",
    "<div ",
    "    class=\"listingblock no-keep-markup\">",
    "<div class=\"title\">元のソース</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-bash\"",
    "    data-lang=\"bash\">echo \"&lt;strong&gt;Strong text.&lt;/strong&gt;\"</code></pre>",
    "  </div>",
    "</div>",
    "<div ",
    "    class=\"listingblock no-keep-markup\">",
    "<div class=\"title\">通常ではHTMLタグは除外される</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-bash\"",
    "    data-lang=\"bash\">echo \"<strong>Strong text.</strong>\"</code></pre>",
    "  </div>",
    "</div>",
    "<div ",
    "    class=\"listingblock\">",
    "<div class=\"title\">このようにHTMLタグをコードブロック内でも維持したい</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-bash\"",
    "    data-lang=\"bash\">echo \"<strong>Strong text.</strong>\"</code></pre>",
    "  </div>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"admonitionblock note\">",
    "<table>",
    "<tr>",
    "<td class=\"icon\">",
    "<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>",
    "</td>",
    "<td class=\"content\">",
    "<div class=\"paragraph\">",
    "<p><em>HTML</em> タグをテキスト表示させたい場合は、次の2文字について文字実体参照に変換しておく。</p>",
    "</div>",
    "<div class=\"ulist\">",
    "<ul>",
    "<li>",
    "<p><code>&lt;</code> &#8594; <code>&amp;lt;</code></p>",
    "</li>",
    "<li>",
    "<p><code>&amp;</code> &#8594; <code>&amp;amp;</code></p>",
    "</li>",
    "</ul>",
    "</div>",
    "</td>",
    "</tr>",
    "</table>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_結論_keep_markup_プラグインを使う\">🌠結論: <em>Keep Markup</em> プラグインを使う</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p><a href=\"https://prismjs.com/plugins/keep-markup/\" target=\"_blank\" rel=\"noopener\"><em>Keep Markup</em> プラグイン</a>を利用するだけでいい。<br>",
    "このプラグインは <code>&lt;code&gt;</code> ブロック内の <em>HTML</em> タグを保護する。</p>",
    "</div>",
    "<div class=\"exampleblock\">",
    "<div class=\"title\">Example 2. Keep Markup プラグインの使用例</div>",
    "<div class=\"content\">",
    "<div ",
    "    class=\"listingblock\">",
    "<div class=\"title\">Node(TypeScript)での例</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" data-line=\"3\"",
    "    ><code class=\"language-ts\"",
    "    data-lang=\"ts\">import * as Prism from 'prismjs'",
    "// plugins",
    "import 'prismjs/plugins/keep-markup/prism-keep-markup.min'",
    "// languages",
    "import 'prismjs/components/prism-bash.min'",
    "import 'prismjs/components/prism-git.min'",
    "import 'prismjs/components/prism-json.min'",
    "import 'prismjs/components/prism-typescript.min'",
    "",
    "Prism.highlightAllUnder(document)</code></pre>",
    "  </div>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect2\">",
    "<h3 id=\"_コードブロック内の_html_要素をカスタマイズしたいとき\">コードブロック内の <em>HTML</em> 要素をカスタマイズしたいとき</h3>",
    "<div class=\"paragraph\">",
    "<p><em>Keep Markup</em> プラグインは <code>before-highlight</code> の <em>hooks</em> で実行され、<em>HTML</em> タグをコードから一時的に隔離して保護する。<br>",
    "よってコードブロック内の <em>HTML</em> 要素をカスタマイズしたいときは、それよりも前に実行される <code>before-sanity-check</code> や <code>after-sanity-check</code> などの <em>hooks</em> で処理すればいい。</p>",
    "</div>",
    "<div class=\"exampleblock\">",
    "<div class=\"title\">Example 3. コードブロック内のHTML要素を操作する</div>",
    "<div class=\"content\">",
    "<div ",
    "    class=\"listingblock\">",
    "<div class=\"title\">AsciiDocのコールアウト要素を編集する例</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-ts\"",
    "    data-lang=\"ts\">import * as Prism from 'prismjs'",
    "import 'prismjs/plugins/keep-markup/prism-keep-markup.min'",
    "",
    "// コールアウト番号は CSS で表示させるため、テキスト部分は非表示にする。",
    "Prism.hooks.add('before-sanity-check', (env) =&gt; {",
    "  env.element.querySelectorAll('.conum + b').forEach((elem) =&gt; {",
    "    elem.classList.add('hidden')",
    "  })",
    "})",
    "",
    "Prism.highlightAllUnder(document)</code></pre>",
    "  </div>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_参考\">📖参考</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"ulist\">",
    "<ul>",
    "<li>",
    "<p><a href=\"https://prismjs.com/plugins/keep-markup/\" target=\"_blank\" rel=\"noopener\">Keep markup ▲ Prism plugins</a></p>",
    "</li>",
    "</ul>",
    "</div>",
    "</div>",
    "</div>"
  ],
  "title": "Prism.jsでコードブロック内に記述したHTMLタグを維持したい",
  "created_at": "2021-05-17",
  "tags": [
    "syntax-highlighter",
    "prism"
  ],
  "updated_at": "2021-05-17",
  "author": "秋々すすき",
  "revision": "1.0"
}