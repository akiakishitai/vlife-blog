{
  "filename": "nuxt_tsconfig_dedicated_to_building.adoc",
  "rendered": [
    "<div id=\"toc\" class=\"toc\">",
    "<div id=\"toctitle\">目次</div>",
    "<ul class=\"sectlevel1\">",
    "<li><a href=\"#_はじめに\">はじめに🐏</a></li>",
    "<li><a href=\"#_nuxt_ビルド時に参照する_tsconfig_json_を指定する方法\"><em>Nuxt</em> ビルド時に参照する <code>tsconfig.json</code> を指定する方法💾</a>",
    "<ul class=\"sectlevel2\">",
    "<li><a href=\"#created-tsconfig\">ビルド用の <em>TSConfig</em></a></li>",
    "<li><a href=\"#specify-tsconfig\">ビルド時の <code>tsconfig.json</code> を指定</a></li>",
    "</ul>",
    "</li>",
    "<li><a href=\"#_参考\">参考📖</a></li>",
    "</ul>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_はじめに\">はじめに🐏</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p><em>Nuxt</em> を <em>TypeScript</em> で利用しているとき、ビルド時に <code>git worktree</code> や <code>git submodule</code> 配下のファイルまでチェックしてエラーを出してくるので困った。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>対処方法としては <code>tsconfig.json</code> の <code>include</code> や <code>exclude</code> で対象/除外のファイルを制御すればいい。<br>",
    "ただ <em>VS Code</em> のインテリセンスは有効化のままにしたかったので、<em>Nuxt</em> のビルド時だけ使う別の <code>tsconfig.json</code> を読み込むようにしたい。</p>",
    "</div>",
    "<table class=\"tableblock frame-all grid-all fit-content\">",
    "<caption class=\"title\">Table 1. 環境</caption>",
    "<colgroup>",
    "<col>",
    "<col>",
    "</colgroup>",
    "<thead>",
    "<tr>",
    "<th class=\"tableblock halign-left valign-top\">App</th>",
    "<th class=\"tableblock halign-left valign-top\">Version</th>",
    "</tr>",
    "</thead>",
    "<tbody>",
    "<tr>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Nuxt</p></td>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">2.15.4</p></td>",
    "</tr>",
    "<tr>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">TypeScript</p></td>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">4.2.3</p></td>",
    "</tr>",
    "<tr>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">@nuxt/typescript-build</p></td>",
    "<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">2.1.0</p></td>",
    "</tr>",
    "</tbody>",
    "</table>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_nuxt_ビルド時に参照する_tsconfig_json_を指定する方法\"><em>Nuxt</em> ビルド時に参照する <code>tsconfig.json</code> を指定する方法💾</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"paragraph\">",
    "<p>方法自体は簡単で、</p>",
    "</div>",
    "<div class=\"olist arabic\">",
    "<ol class=\"arabic\">",
    "<li>",
    "<p><a href=\"#created-tsconfig\">ビルド用の <em>TSConfig</em> を作成</a></p>",
    "</li>",
    "<li>",
    "<p><a href=\"#specify-tsconfig\">作成した <em>TSConfig</em> ファイルパスを <code>nuxt.config.json</code> で指定</a></p>",
    "</li>",
    "</ol>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p>の2点だけすればいい。</p>",
    "</div>",
    "<div class=\"sect2\">",
    "<h3 id=\"created-tsconfig\">ビルド用の <em>TSConfig</em></h3>",
    "<div class=\"paragraph\">",
    "<p><a href=\"https://www.typescriptlang.org/tsconfig#extends\" target=\"_blank\" rel=\"noopener\"><code>extends</code></a> を利用して現行の <code>tsconfig.json</code> の設定を引き継ぐとよさそう。</p>",
    "</div>",
    "<div class=\"paragraph\">",
    "<p><code>include</code> や <code>exclude</code> 設定を上書きしてコンパイル対象とするファイルを制限する。</p>",
    "</div>",
    "<div class=\"exampleblock\">",
    "<div class=\"title\">Example 1. ビルド用に調整した TSConfig の例</div>",
    "<div class=\"content\">",
    "<div ",
    "    class=\"listingblock\">",
    "<div class=\"title\">tsconfig.nuxt.json</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-json\"",
    "    data-lang=\"json\">{",
    "  \"extends\": \"./tsconfig.json\",   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>",
    "  \"include\": [\"src/**/*\", \"src/**/*.vue\"],  <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>",
    "  \"exclude\": [\"node_modules\", \"**/*.spec.ts\"]  <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>",
    "}</code></pre>",
    "  </div>",
    "</div>",
    "<div class=\"colist arabic\">",
    "<table>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>",
    "<td>通常の <code>tsconfig.json</code> ファイルを読み込み、設定を継承する。<br>",
    "パス指定するさいにファイル名だけではエラーになるので注意。</td>",
    "</tr>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>",
    "<td>コンパイル対象をソースがある <code>src/</code> ディレクトリ以下に限定。</td>",
    "</tr>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>",
    "<td>除外するファイル指定を上書き。ここでは単体テスト用のファイルを追加して指定。</td>",
    "</tr>",
    "</table>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect2\">",
    "<h3 id=\"specify-tsconfig\">ビルド時の <code>tsconfig.json</code> を指定</h3>",
    "<div class=\"paragraph\">",
    "<p>結論から言えば <code>@nuxt/typescript-build</code> のモジュールオプションで指定できる。<br>",
    "下記のように <code>nuxt.config.js</code> ファイルにオプション設定を追加する。</p>",
    "</div>",
    "<div class=\"exampleblock\">",
    "<div class=\"title\">Example 2. ビルド時に読み込む tsconfig.json を指定</div>",
    "<div class=\"content\">",
    "<div ",
    "    class=\"listingblock\">",
    "<div class=\"title\">nuxt.config.js でモジュールオプションを追加</div>",
    "  <div class=\"content\">",
    "  <pre class=\"highlight \" ><code class=\"language-js\"",
    "    data-lang=\"js\">export default {",
    "  typescript: {   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>",
    "    typeCheck: {  <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>",
    "      typescript: {",
    "        configFile: resolve(__dirname, 'tsconfig.nuxt.json'),   <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>",
    "        extensions: { vue: true },    <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>",
    "      },",
    "    },",
    "  },",
    "}</code></pre>",
    "  </div>",
    "</div>",
    "<div class=\"colist arabic\">",
    "<table>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>",
    "<td><a href=\"https://typescript.nuxtjs.org/guide/setup/#module-options\" target=\"_blank\" rel=\"noopener\"><code>@nuxt/typescript-build</code> のモジュールオプション設定</a>。</td>",
    "</tr>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>",
    "<td>型チェックに利用する <a href=\"https://github.com/TypeStrong/fork-ts-checker-webpack-plugin#options\" target=\"_blank\" rel=\"noopener\"><code>fork-ts-checker-webpack-plugin</code> のオプション</a>を記述。</td>",
    "</tr>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>",
    "<td>ビルド用に調整した <em>TSConfig</em> ファイルのパスを指定。</td>",
    "</tr>",
    "<tr>",
    "<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>",
    "<td><em>Vue</em> の単一ファイルコンポーネントへの対応を有効化。<br>",
    "<a href=\"https://github.com/nuxt/typescript/blob/%40nuxt/typescript-runtime%402.1.0/packages/typescript-build/src/index.ts#L77\" target=\"_blank\" rel=\"noopener\"><code>@nuxt/typescript-build</code> のソース</a>を見るとモジュールオプションを浅いコピーしているので、ここで明示的に指定しておく。</td>",
    "</tr>",
    "</table>",
    "</div>",
    "</div>",
    "</div>",
    "<hr>",
    "<div class=\"paragraph\">",
    "<p>以上で <em>Nuxt</em> のビルド時には専用の <em>TSConfig</em> が適用される。</p>",
    "</div>",
    "</div>",
    "</div>",
    "</div>",
    "<div class=\"sect1\">",
    "<h2 id=\"_参考\">参考📖</h2>",
    "<div class=\"sectionbody\">",
    "<div class=\"ulist\">",
    "<div class=\"title\">Nuxt</div>",
    "<ul>",
    "<li>",
    "<p><a href=\"https://typescript.nuxtjs.org\" target=\"_blank\" rel=\"noopener\">Nuxt TypeScript</a></p>",
    "</li>",
    "<li>",
    "<p><a href=\"https://github.com/TypeStrong/fork-ts-checker-webpack-plugin\" target=\"_blank\" rel=\"noopener\">Fork TS Checker Webpack Plugin</a></p>",
    "</li>",
    "</ul>",
    "</div>",
    "<div class=\"ulist\">",
    "<div class=\"title\">TSConfig</div>",
    "<ul>",
    "<li>",
    "<p><a href=\"https://www.typescriptlang.org/tsconfig\" target=\"_blank\" rel=\"noopener\">TypeScript: TSConfig Reference - Docs on every TSConfig option</a></p>",
    "</li>",
    "</ul>",
    "</div>",
    "</div>",
    "</div>"
  ],
  "title": "Nuxt TypeScript においてビルド用に別の tsconfig.json を指定したい",
  "created_at": "2021-05-07",
  "tags": [
    "nuxt.js",
    "tsconfig"
  ],
  "updated_at": "2021-05-07",
  "author": "秋々すすき",
  "revision": "1.0"
}