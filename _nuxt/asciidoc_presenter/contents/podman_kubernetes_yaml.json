{"filename":"podman_kubernetes_yaml.adoc","rendered":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">目次</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_はじめに\">はじめに</a></li>\n<li><a href=\"#_概略\">概略</a></li>\n<li><a href=\"#_podman_による_kubernetes_yaml_利用の手順\"><code>podman</code> による <em>Kubernetes YAML</em> 利用の手順</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_コマンドで_pod_を作成\">コマンドで <em>Pod</em> を作成</a></li>\n<li><a href=\"#_kubernetes_yaml_ファイルを生成\"><em>Kubernetes YAML</em> ファイルを生成</a></li>\n<li><a href=\"#_kubernetes_yaml_から_pod_起動\"><em>Kubernetes YAML</em> から <em>Pod</em> 起動</a></li>\n</ul>\n</li>\n<li><a href=\"#_kubernetes_yaml_についての補足\"><em>Kubernetes YAML</em> についての補足</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_書式サンプル\">書式サンプル</a>\n<ul class=\"sectlevel3\">\n<li><a href=\"#_ラベルとアノテーション\">ラベルとアノテーション</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#_生成された_kubernetes_yaml_ファイルの修正\">生成された <em>Kubernetes YAML</em> ファイルの修正</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_不要な環境変数の削除\">不要な環境変数の削除</a></li>\n<li><a href=\"#_名前付き_volume_を利用したい\">名前付き <em>Volume</em> を利用したい</a></li>\n<li><a href=\"#_別ファイルで値を定義したい\">別ファイルで値を定義したい</a></li>\n</ul>\n</li>\n<li><a href=\"#_おわりに\">おわりに</a></li>\n<li><a href=\"#_参考\">参考</a></li>\n</ul>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_はじめに\">はじめに</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><em>Podman</em> は <em>Docker Compose</em> の代わりに <em>Kubernetes YAML</em> を使うことが推奨されているみたい。<br>\nそこで <em>Kubernetes YAML</em> から起動することを試してみた。</p>\n</div>\n<div class=\"admonitionblock important\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-important\" title=\"Important\" data-md-icon=\"report\"></i>\n</td>\n<td class=\"content\">\n<div class=\"title\">追記</div>\n<div class=\"paragraph\">\n<p><em>Podman v3</em> では（ルートレスの場合は <em>v3.2.3</em> 以降から） <em>docker-compose</em> に公式対応してるみたい。<br>\nよって <em>docker-compose.yml</em> がすでに有るなら、本記事のように <em>Kubernetes YAML</em> への変換は必要なさそう。</p>\n</div>\n<div class=\"paragraph\">\n<p>👉<a href=\"https://rheb.hatenablog.com/entry/podman3-rootless-docker-compose\" target=\"_blank\" rel=\"noopener\">【Podman v3】ルートレスモードでdocker-composeを実行する - 赤帽エンジニアブログ</a></p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<table class=\"tableblock frame-all grid-all fit-content\">\n<caption class=\"title\">Table 1. 環境</caption>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">App</th>\n<th class=\"tableblock halign-left valign-top\">Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">podman</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">3.0.1</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_概略\">概略</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><code>podman</code> コマンドで起動中の <em>Pod</em> から <em>Kubernetes YAML</em> を生成できるため、それを利用する。</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>通常通り <code>podman</code> コマンドから <em>Pod</em> を作成。</p>\n</li>\n<li>\n<p>作成した <em>Pod</em> から <em>Kubernetes YAML</em> ファイルを生成。</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>この <em>Kubernetes YAML</em> ファイルは修正する必要があるかもしれない。</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><em>Kubernetes YAML</em> ファイルから <em>Pod</em> を起動。</p>\n</li>\n</ol>\n</div>\n<div class=\"imageblock kroki\">\n<div class=\"content\">\n<span class=\"alt\">概略図</span>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_podman_による_kubernetes_yaml_利用の手順\"><code>podman</code> による <em>Kubernetes YAML</em> 利用の手順</h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>通常通り <code>podman</code> コマンドから <em>Pod</em> を作成。</p>\n</li>\n<li>\n<p>作成した <em>Pod</em> から <em>Kubernetes YAML</em> ファイルを生成。</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>この <em>Kubernetes YAML</em> ファイルは修正する必要があるかもしれない。</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><em>Kubernetes YAML</em> ファイルから <em>Pod</em> を起動。</p>\n</li>\n</ol>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_コマンドで_pod_を作成\">コマンドで <em>Pod</em> を作成</h3>\n<div class=\"paragraph\">\n<p>まずは <code>podman</code> で <em>Pod</em> を作成およびコンテナを起動する。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. Pod を作成してみる例</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">Pod を作成</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">podname=\"web-demo\"\npodman pod create \\\n  --name \"${podname}\" \\   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n  --hostname \"${podname}\" \\\n  --publish 8080:80</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>コンテナ起動時に参照するので、<em>Pod</em> 名を設定しておくことを推奨。</td>\n</tr>\n</table>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">コンテナを Pod に所属させて起動</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">podman run --rm -d \\\n  --pod \"${podname}\" \\  <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n  --name \"some-nginx\" \\\n  --expose 80 \\\n  docker.io/library/nginx:1.21-alpine</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>所属させる <em>Pod</em> を指定。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_kubernetes_yaml_ファイルを生成\"><em>Kubernetes YAML</em> ファイルを生成</h3>\n<div class=\"paragraph\">\n<p><code>podman generate kube</code> コマンドにより、現在起動中の <em>Pod</em> から <em>Kubernetes YAML</em> ファイルが生成できる。</p>\n</div>\n<div class=\"admonitionblock important\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-important\" title=\"Important\" data-md-icon=\"report\"></i>\n</td>\n<td class=\"content\">\n<em>podman v3.0.1</em> 現在ではまだ開発途中であるため完全な変換はできていない（名前付き <em>Volume</em> のマウントなどは無視される）。<br>\nそのため手作業での修正が必要となるかもしれない。\n</td>\n</tr>\n</table>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 2. podman で Kubernetes YAML を生成する</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">対象の Pod から YAML ファイルを生成する</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    data-output=\"10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">podman generate kube --filename demo-pod.yml \"${podname}\"    <i class=\"conum\" data-value=\"1\"></i><b>(1)</b></code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><em>Pod</em> から <em>Kubernetes YAML</em> を生成して出力する。<br>\nここでは出力される内容を <code>demo-pod.yml</code> ファイルに保存している。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>\n</td>\n<td class=\"content\">\n名前付き <em>Volume</em> をマウントしている場合、その設定は書き出してくれなかったので後述の修正を行う必要がある。\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_kubernetes_yaml_から_pod_起動\"><em>Kubernetes YAML</em> から <em>Pod</em> 起動</h3>\n<div class=\"paragraph\">\n<p>上記で生成した <em>Kubernetes YAML</em> から <em>Pod</em> を起動してみる。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 3. Kubenters YAML ファイルから Pod 起動</div>\n<div class=\"content\">\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">Pod 起動</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    data-output=\"2-10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">podman play kube demo-pod.yml</code></pre>\n  </div>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">Pod 削除</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    data-output=\"2-10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">podman pod rm --force &lt;pod name&gt;</code></pre>\n  </div>\n</div>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\" data-md-icon=\"info\"></i>\n</td>\n<td class=\"content\">\n<em>Kubernetes YAML</em> については <code>podman</code> で対応していない書式も多いため、<br>\n<code>podman generate kube</code> により生成されたもの以外を使う場合は注意が必要。\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_kubernetes_yaml_についての補足\"><em>Kubernetes YAML</em> についての補足</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><code>podman</code> から利用するにあたって必要そうな部分だけ補足。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_書式サンプル\">書式サンプル</h3>\n<div class=\"paragraph\">\n<p><em>Kubernetes YAML</em> ファイルの書式については <a href=\"https://kubernetes.io/docs/reference/kubernetes-api/\" target=\"_blank\" rel=\"noopener\">Kubernetes API ドキュメント</a>とにらめっこするしかなさそう？<br>\n元々はユーザー側が記述する予定ではなかったらしいので、つらい。</p>\n</div>\n<div class=\"paragraph\">\n<p>基本的には <code>podman generate kube</code> で生成するので、ユーザーが追記するのは <code>metadata</code> フィールド部分になるはず。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 4. Pod の YAML サンプル</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n<div class=\"title\">sample-kubernetes.yml</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-yaml\"\n    data-lang=\"yaml\">kind: Pod   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\nmetadata:   <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n  name: demo-nginx  <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n  creationTimestamp: \"2021-09-11T12:00:00Z\"\n  labels:       <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>\n    app: nginx\n  annotations:  <i class=\"conum\" data-value=\"5\"></i><b>(5)</b>\n    version: \"0.1.2\"\n    update_at: \"2021-09-14\"\n    homepage: \"https://example.com\"\n\nspec:   <i class=\"conum\" data-value=\"6\"></i><b>(6)</b>\n  containers:\n  - image: docker.io/library/nginx:1.21-alpine\n    name: some-nginx\n    ports:\n    - containerPort: 80\n      hostPort: 8080\n      protocol: TCP</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><em>Podman</em> で利用する場合は <strong>Pod</strong> にしておけばいい。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td><a href=\"https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/object-meta/\" target=\"_blank\" rel=\"noopener\"><code>ObjectMeta</code></a> 型。<br>\n作成する <em>Pod</em> の名前やラベル、アノテーションなどを指定する。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>作成する <em>Pod</em> の名前を指定する。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>\n<td>文字列のキーと値のハッシュ（<em>Map</em>）。<br>\nこの値を使って検索ができる。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"5\"></i><b>5</b></td>\n<td>文字列のキーと値のハッシュ（<em>Map</em>）。<br>\nラベルと違って検索用途には使えない。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"6\"></i><b>6</b></td>\n<td><em>Pod</em> の仕様設定。<br>\n基本的に <code>podman generate kube</code> からの自動生成にまかせておけばいい。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_ラベルとアノテーション\">ラベルとアノテーション</h4>\n<div class=\"dlist\">\n<div class=\"title\">ラベルとアノテーションの違い</div>\n<dl>\n<dt class=\"hdlist1\">ラベル</dt>\n<dd>\n<p>識別値として、検索やグルーピングに使う任意のハッシュを設定する。</p>\n</dd>\n<dt class=\"hdlist1\">アノテーション</dt>\n<dd>\n<p>ラベルとして使わない情報なら何でも。<br>\n外部ツールがここの情報を利用したりする。</p>\n<div class=\"paragraph\">\n<p><em>例： Gitブランチ名、ハッシュ値、使用しているライブラリやツール&#8230;&#8203; など。</em></p>\n</div>\n</dd>\n</dl>\n</div>\n<div class=\"admonitionblock caution\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-caution\" title=\"Caution\" data-md-icon=\"local_fire_department\"></i>\n</td>\n<td class=\"content\">\n<div class=\"title\">値の型について</div>\n<div class=\"paragraph\">\n<p><code>metadata.labels</code> および <code>metadata.annotations</code> で許容されるのは平坦なハッシュのみ。<br>\nうっかりネストさせてしまうと次のようなエラーが発生する。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n<div class=\"title\">wrong-metadata.yml</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-yaml\"\n    data-lang=\"yaml\">kind: Pod\nmetadata:\n  name: wrong-metadata\n  annotations:\n    parent:\n      child: \"hoge\"\nspec: # ...</code></pre>\n  </div>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">Error!</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    data-output=\"2-10\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">podman play kube wrong-metadata.yml\nError: unable to read YAML \"wrong-metadata.yml\" as Kube Pod:\n  error unmarshaling JSON:\n    json: cannot unmarshal object into Go struct field ObjectMeta.metadata.annotations of type string</code></pre>\n  </div>\n</div>\n</div>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_生成された_kubernetes_yaml_ファイルの修正\">生成された <em>Kubernetes YAML</em> ファイルの修正</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><code>podman</code> で自動生成したあと、下記のような事柄では手直しが必要かもしれない。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_不要な環境変数の削除\">不要な環境変数の削除</h3>\n<div class=\"paragraph\">\n<p><code>podman generate</code> で生成された <em>Kubernetes YAML</em> ファイルには、コンテナに存在するすべての環境変数が含まれている。<br>\nつまり、コンテナにあらかじめ定義されている環境変数も含まれる。</p>\n</div>\n<div class=\"paragraph\">\n<p>このままだとコンテナ運用時のメンテナンスがめんどくさくなるので、不要な環境変数の指定については削除しておく。</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_名前付き_volume_を利用したい\">名前付き <em>Volume</em> を利用したい</h3>\n<div class=\"paragraph\">\n<p><code>podman play kube</code> でサポートされている <em>Volume</em> は <code>hostPath</code> と <code>persistentVolumeClaim</code> の2つのみ（<a href=\"https://docs.podman.io/en/v3.3.1/markdown/podman-play-kube.1.html\" target=\"_blank\" rel=\"noopener\">参考</a>）。<br>\nこのうち <strong><code>persistentVolumeClaim</code></strong> が名前付き <em>Volume</em> に対応する。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 5. Kubernetes YAML にて名前付き Volume を利用する書き方</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n<div class=\"title\">with-named-volume.yml</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-yaml\"\n    data-lang=\"yaml\"># Kubernetes YAML\n---\nkind: Pod\nmetadata:\n  name: demo-nginx\n  creationTimestamp: \"2021-09-11T12:00:00Z\"\n  labels:\n    app: nginx\n\nspec:\n  containers:\n  - image: docker.io/library/nginx:1.21-alpine\n    name: some-nginx\n    ports:\n    - containerPort: 80\n      hostPort: 8080\n      protocol: TCP\n    volumeMounts:   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n    - mountPath: /usr/share/nginx/html\n      name: contents\n  volumes:\n  - name: contents\n    persistentVolumeClaim:    <i class=\"conum\" data-value=\"1\"></i><b>(1)</b> <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n      claimName: nginx-contents   <i class=\"conum\" data-value=\"3\"></i><b>(3)</b></code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><em>Pod</em> において <code>persistentVolumeClaim</code> は <em>Volume</em> として扱うため、このような書式となる。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td><code>podman</code> において <code>persistentVolumeClaim</code> 型が名前付き <em>Volume</em> に相当する。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>名前付き <em>Volume</em> の指定。存在しなければ新規作成される。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_別ファイルで値を定義したい\">別ファイルで値を定義したい</h3>\n<div class=\"paragraph\">\n<p><a href=\"https://kubernetes.io/ja/docs/concepts/configuration/configmap/\" target=\"_blank\" rel=\"noopener\"><em>ConfigMap</em></a> を利用して環境変数に値を注入できる。</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-warning\" title=\"Warning\" data-md-icon=\"warning\"></i>\n</td>\n<td class=\"content\">\n<em>ConfigMap</em> は機密性や暗号化の機能をもたないので、パスワードなどの機密情報については <em>Secret</em> を使うべき。<br>\nただ、残念ながら <code>podman play kube</code> では <em>Secret</em> が未実装。\n</td>\n</tr>\n</table>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 6. ConfigMap ファイルから値を注入する</div>\n<div class=\"content\">\n<div \n    class=\"listingblock\">\n<div class=\"title\">ConfigMap の例</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-yaml\"\n    data-lang=\"yaml\"># ConfigMap\n# demo-nginx-configmap1.yml\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-config1   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\ndata:   <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n  NGINX_HOST: foobar.com  <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n  NGINX_PORT: 80          <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n\n# demo-nginx-configmap2.yml\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-config2   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\ndata:   <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n  template_dir: /etc/nginx/templates</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><strong>必須</strong>: 参照されるときに使われるキー。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>参照される値。文字列のキーと値のハッシュ（<em>Map</em>）を格納。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>環境変数として指定。後述する <code>envFrom</code> から参照されることを想定している。</td>\n</tr>\n</table>\n</div>\n<div \n    class=\"listingblock\">\n<div class=\"title\">demo-nginx.yml</div>\n  <div class=\"content\">\n  <pre class=\"highlight \" ><code class=\"language-yaml\"\n    data-lang=\"yaml\"># Kubernetes YAML\n---\nkind: Pod\nmetadata:\n  name: demo-nginx\n  creationTimestamp: \"2021-09-11T12:00:00Z\"\n  labels:\n    app: nginx\nspec:\n  containers:\n  - image: docker.io/library/nginx:1.21-alpine\n    name: some-nginx\n    env:\n    - name: NGINX_ENVSUBST_TEMPLATE_DIR\n      valueFrom:  <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n        configMapKeyRef:\n          name: nginx-config2 <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n          key: template_dir   <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n    envFrom:  <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>\n    - configMapRef:\n        name: nginx-config1\n    ports:\n    - containerPort: 80\n      hostPort: 8080\n      protocol: TCP</code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>環境変数の値について <em>ConfigMap</em> を参照する。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>参照したい <em>ConfigMap</em> ファイルの <code>metadata.name</code> を指定。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>参照する <code>data</code> のキーを指定。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>\n<td><em>ConfigMap</em> の <code>data</code> をすべて環境変数として取り込みたい場合は <code>envFrom</code> を利用する。</td>\n</tr>\n</table>\n</div>\n<div \n    class=\"listingblock no-line-numbers command-line\">\n<div class=\"title\">ConfigMapを利用して起動</div>\n  <div class=\"content\">\n  <pre class=\"highlight command-line\" data-user=\"user\"\n    data-host=\"local\"\n    ><code class=\"language-bash\"\n    data-lang=\"bash\">podman play kube demo-nginx.yml \\\n  --configmap demo-nginx-configmap1.yml \\   <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n  --configmap demo-nginx-configmap2.yml     <i class=\"conum\" data-value=\"1\"></i><b>(1)</b></code></pre>\n  </div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><code>--configmap</code> オプションは複数回指定できる。</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_おわりに\">おわりに</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><code>podman</code> で <em>Kubernetes YAML</em> ファイルを自動生成できるので、使うだけなら簡単でうれしい。<br>\n名前付き <em>Volume</em> の設定は自動生成されなかったので、そこだけ注意しておく。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\">参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<div class=\"title\">Podman</div>\n<ul>\n<li>\n<p><a href=\"https://docs.podman.io/en/latest/markdown/podman-play-kube.1.html\" target=\"_blank\" rel=\"noopener\">podman-play-kube(1) — Podman documentation</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.podman.io/en/latest/markdown/podman-generate-kube.1.html\" target=\"_blank\" rel=\"noopener\">podman-generate-kube(1) — Podman documentation</a></p>\n</li>\n</ul>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Docker Compose &#8594; Kubernetes YAML</div>\n<ul>\n<li>\n<p><a href=\"https://balagetech.com/convert-docker-compose-services-to-pods/\" target=\"_blank\" rel=\"noopener\">Convert docker-compose services to pods with Podman - Balage Tech blog</a></p>\n</li>\n<li>\n<p><a href=\"https://qiita.com/thirdpenguin/items/c9e58c27e96f02b0a96d\" target=\"_blank\" rel=\"noopener\">Podman で Compose したかったらどうするの？ - Qiita</a></p>\n</li>\n</ul>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Kubernetes YAML</div>\n<ul>\n<li>\n<p><a href=\"https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/\" target=\"_blank\" rel=\"noopener\">Pod | Kubernetes</a></p>\n</li>\n<li>\n<p><a href=\"https://kubernetes.io/ja/docs/concepts/configuration/configmap/\" target=\"_blank\" rel=\"noopener\">ConfigMap | Kubernetes</a></p>\n</li>\n<li>\n<p><a href=\"https://kubernetes.io/docs/tasks/inject-data-application/_print/\" target=\"_blank\" rel=\"noopener\">Inject Data Into Applications | Kubernetes</a></p>\n</li>\n<li>\n<p><a href=\"https://kubernetes.io/ja/docs/concepts/overview/working-with-objects/labels/\" target=\"_blank\" rel=\"noopener\">ラベル(Labels)とセレクター(Selectors) | Kubernetes</a></p>\n</li>\n<li>\n<p><a href=\"https://kubernetes.io/ja/docs/concepts/overview/working-with-objects/annotations/\" target=\"_blank\" rel=\"noopener\">アノテーション(Annotations) | Kubernetes</a></p>\n</li>\n</ul>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Kubernetes PersistentVolume</div>\n<ul>\n<li>\n<p><a href=\"https://kubernetes.io/ja/docs/concepts/storage/persistent-volumes/\" target=\"_blank\" rel=\"noopener\">永続ボリューム | Kubernetes</a></p>\n</li>\n<li>\n<p><a href=\"https://www.netone.co.jp/knowledge-center/netone-blog/20191206-1/\" target=\"_blank\" rel=\"noopener\">Kubernetesのデータ永続化入門 | ネットワンシステムズ</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","title":"podman で docker-compose の代わりに Kubernetes YAML を使ってみた","created_at":"2021-09-17","tags":["podman","kubernetes"],"updated_at":"2021-09-28","author":"秋々すすき","revision":"1.1","revision_remark":"docker-compose 対応についての追記。"}