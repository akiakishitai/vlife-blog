name: github pages

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.vscode/**'
      - 'docs/**'
      - 'test/**'
  workflow_dispatch:
    branches:
      - master

env:
  DEPLOY_ENV: GH_PAGES
  ROUTER_BASE: /vlife-blog/

jobs:
  build-deploy:
    runs-on: ubuntu-18.04
    steps:
      - name: check git lfs
        id: check-git-lfs
        run: echo "::set-output name=key::$(git lfs install)"

      - name: install git-lfs
        if: ${{ steps.check-git-lfs.outputs.key == '' }}
        run: |
          pushd . > /dev/null
          cd /tmp
          curl -sSLO https://github.com/git-lfs/git-lfs/releases/download/v2.12.0/git-lfs-linux-amd64-v2.12.0.tar.gz
          mkdir git-lfs
          cd git-lfs
          tar -xf ../git-lfs-linux-amd64-v2.12.0.tar.gz
          ./install.sh
          popd > /dev/null

      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: check article directory
        id: check-article-branch
        run: |
          test -d src/outsides/asciidocs/source \
            && echo "::set-output name=exist::success" \
            || echo "::set-output name=exist::failure"

      - name: pull article branche
        if: ${{ steps.check-article-branch.outputs.exist == 'failure' }}
        run: git clone -b orphan/article --depth 1 https://github.com/akiakishitai/vlife-blog.git src/outsides/asciidocs

      - name: checkout lfs objects
        run: git lfs checkout

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: cache dependencies
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn install

      - name: install offline
        if: ${{ steps.yarn-cache.outputs.cache-hit == 'true' }}
        run: yarn install --offline

      - name: compile scss
        run: yarn sass-build

      - name: output licences
        run: yarn license-file

      - name: generate
        run: yarn generate
        env:
          NODE_ENV: production

      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_dir: ./dist
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
